Search.setIndex({"docnames": ["api", "changelog", "coordinate_systems", "devel/add_image_format", "devel/add_test_data", "devel/advanced_testing", "devel/biaps/biap_0000", "devel/biaps/biap_0001", "devel/biaps/biap_0002", "devel/biaps/biap_0003", "devel/biaps/biap_0004", "devel/biaps/biap_0005", "devel/biaps/biap_0006", "devel/biaps/biap_0007", "devel/biaps/biap_0008", "devel/biaps/biap_0009", "devel/biaps/biap_template", "devel/biaps/index", "devel/bv_formats", "devel/core_developer", "devel/data_pkg_design", "devel/data_pkg_discuss", "devel/data_pkg_uses", "devel/devdiscuss", "devel/devguide", "devel/governance", "devel/image_design", "devel/index", "devel/make_release", "devel/modified_images", "devel/roadmap", "devel/scaling", "devel/spm_use", "dicom/dcm2nii_algorithms", "dicom/dicom", "dicom/dicom_fields", "dicom/dicom_info", "dicom/dicom_intro", "dicom/dicom_mosaic", "dicom/dicom_niftiheader", "dicom/dicom_orientation", "dicom/siemens_csa", "dicom/spm_dicom", "gettingstarted", "gitwash/configure_git", "gitwash/development_workflow", "gitwash/following_latest", "gitwash/forking_hell", "gitwash/git_development", "gitwash/git_install", "gitwash/git_intro", "gitwash/git_resources", "gitwash/index", "gitwash/maintainer_workflow", "gitwash/patching", "gitwash/set_up_fork", "image_orientation", "images_and_memory", "index", "installation", "installing_data", "legal", "manual", "neuro_radio_conventions", "nibabel_images", "nifti_images", "notebooks/index", "old/ioimplementation", "reference/index", "reference/nibabel", "reference/nibabel.affines", "reference/nibabel.analyze", "reference/nibabel.arrayproxy", "reference/nibabel.arraywriters", "reference/nibabel.batteryrunners", "reference/nibabel.benchmarks", "reference/nibabel.brikhead", "reference/nibabel.caret", "reference/nibabel.casting", "reference/nibabel.cifti2", "reference/nibabel.cmdline", "reference/nibabel.data", "reference/nibabel.dataobj_images", "reference/nibabel.deprecated", "reference/nibabel.deprecator", "reference/nibabel.dft", "reference/nibabel.ecat", "reference/nibabel.environment", "reference/nibabel.eulerangles", "reference/nibabel.filebasedimages", "reference/nibabel.fileholders", "reference/nibabel.filename_parser", "reference/nibabel.fileslice", "reference/nibabel.fileutils", "reference/nibabel.freesurfer", "reference/nibabel.funcs", "reference/nibabel.gifti", "reference/nibabel.imageclasses", "reference/nibabel.imageglobals", "reference/nibabel.imagestats", "reference/nibabel.loadsave", "reference/nibabel.minc1", "reference/nibabel.minc2", "reference/nibabel.mriutils", "reference/nibabel.nicom", "reference/nibabel.nifti1", "reference/nibabel.nifti2", "reference/nibabel.onetime", "reference/nibabel.openers", "reference/nibabel.optpkg", "reference/nibabel.orientations", "reference/nibabel.parrec", "reference/nibabel.processing", "reference/nibabel.pydicom_compat", "reference/nibabel.quaternions", "reference/nibabel.rstutils", "reference/nibabel.spaces", "reference/nibabel.spatialimages", "reference/nibabel.spm2analyze", "reference/nibabel.spm99analyze", "reference/nibabel.streamlines", "reference/nibabel.tmpdirs", "reference/nibabel.tripwire", "reference/nibabel.viewers", "reference/nibabel.volumeutils", "reference/nibabel.wrapstruct", "reference/nibabel.xmlutils", "tutorials"], "filenames": ["api.rst", "changelog.rst", "coordinate_systems.rst", "devel/add_image_format.rst", "devel/add_test_data.rst", "devel/advanced_testing.rst", "devel/biaps/biap_0000.rst", "devel/biaps/biap_0001.rst", "devel/biaps/biap_0002.rst", "devel/biaps/biap_0003.rst", "devel/biaps/biap_0004.rst", "devel/biaps/biap_0005.rst", "devel/biaps/biap_0006.rst", "devel/biaps/biap_0007.rst", "devel/biaps/biap_0008.rst", "devel/biaps/biap_0009.rst", "devel/biaps/biap_template.rst", "devel/biaps/index.rst", "devel/bv_formats.rst", "devel/core_developer.rst", "devel/data_pkg_design.rst", "devel/data_pkg_discuss.rst", "devel/data_pkg_uses.rst", "devel/devdiscuss.rst", "devel/devguide.rst", "devel/governance.rst", "devel/image_design.rst", "devel/index.rst", "devel/make_release.rst", "devel/modified_images.rst", "devel/roadmap.rst", "devel/scaling.rst", "devel/spm_use.rst", "dicom/dcm2nii_algorithms.rst", "dicom/dicom.rst", "dicom/dicom_fields.rst", "dicom/dicom_info.rst", "dicom/dicom_intro.rst", "dicom/dicom_mosaic.rst", "dicom/dicom_niftiheader.rst", "dicom/dicom_orientation.rst", "dicom/siemens_csa.rst", "dicom/spm_dicom.rst", "gettingstarted.rst", "gitwash/configure_git.rst", "gitwash/development_workflow.rst", "gitwash/following_latest.rst", "gitwash/forking_hell.rst", "gitwash/git_development.rst", "gitwash/git_install.rst", "gitwash/git_intro.rst", "gitwash/git_resources.rst", "gitwash/index.rst", "gitwash/maintainer_workflow.rst", "gitwash/patching.rst", "gitwash/set_up_fork.rst", "image_orientation.rst", "images_and_memory.rst", "index.rst", "installation.rst", "installing_data.rst", "legal.rst", "manual.rst", "neuro_radio_conventions.rst", "nibabel_images.rst", "nifti_images.rst", "notebooks/index.rst", "old/ioimplementation.rst", "reference/index.rst", "reference/nibabel.rst", "reference/nibabel.affines.rst", "reference/nibabel.analyze.rst", "reference/nibabel.arrayproxy.rst", "reference/nibabel.arraywriters.rst", "reference/nibabel.batteryrunners.rst", "reference/nibabel.benchmarks.rst", "reference/nibabel.brikhead.rst", "reference/nibabel.caret.rst", "reference/nibabel.casting.rst", "reference/nibabel.cifti2.rst", "reference/nibabel.cmdline.rst", "reference/nibabel.data.rst", "reference/nibabel.dataobj_images.rst", "reference/nibabel.deprecated.rst", "reference/nibabel.deprecator.rst", "reference/nibabel.dft.rst", "reference/nibabel.ecat.rst", "reference/nibabel.environment.rst", "reference/nibabel.eulerangles.rst", "reference/nibabel.filebasedimages.rst", "reference/nibabel.fileholders.rst", "reference/nibabel.filename_parser.rst", "reference/nibabel.fileslice.rst", "reference/nibabel.fileutils.rst", "reference/nibabel.freesurfer.rst", "reference/nibabel.funcs.rst", "reference/nibabel.gifti.rst", "reference/nibabel.imageclasses.rst", "reference/nibabel.imageglobals.rst", "reference/nibabel.imagestats.rst", "reference/nibabel.loadsave.rst", "reference/nibabel.minc1.rst", "reference/nibabel.minc2.rst", "reference/nibabel.mriutils.rst", "reference/nibabel.nicom.rst", "reference/nibabel.nifti1.rst", "reference/nibabel.nifti2.rst", "reference/nibabel.onetime.rst", "reference/nibabel.openers.rst", "reference/nibabel.optpkg.rst", "reference/nibabel.orientations.rst", "reference/nibabel.parrec.rst", "reference/nibabel.processing.rst", "reference/nibabel.pydicom_compat.rst", "reference/nibabel.quaternions.rst", "reference/nibabel.rstutils.rst", "reference/nibabel.spaces.rst", "reference/nibabel.spatialimages.rst", "reference/nibabel.spm2analyze.rst", "reference/nibabel.spm99analyze.rst", "reference/nibabel.streamlines.rst", "reference/nibabel.tmpdirs.rst", "reference/nibabel.tripwire.rst", "reference/nibabel.viewers.rst", "reference/nibabel.volumeutils.rst", "reference/nibabel.wrapstruct.rst", "reference/nibabel.xmlutils.rst", "tutorials.rst"], "titles": ["API Documentation", "NiBabel Development Changelog", "Coordinate systems and affines", "How to add a new image format to nibabel", "Adding test data", "Advanced Testing", "BIAP 0 - Purpose and process", "BIAP1 - Towards immutable images", "BIAP2 - Slicecopy", "BIAP3 - A JSON nifti header extension", "BIAP4 - Merging nibabel and dcmstack", "BIAP5 - A streamlines converter", "BIAP6 - Identifying image axes", "BIAP7 - Loading multiple images", "BIAP8 - Always load image data as floating point", "BIAP9 - The Coordinate Image API", "BIAP X \u2014 Template and Instructions", "BIAPs", "BrainVoyager file formats", "Core Developer Guide", "Design of data packages for the nibabel and the nipy suite", "Principles of data package", "Data package usecases and implementation", "Developer discussions", "NiBabel Developer Guidelines", "Governance and Decision Making", "The nibabel image object", "Developer documentation page", "A guide to making a nibabel release", "Keeping track of whether images have been modified since load", "Roadmap", "Scalefactors and intercepts", "Image use-cases in SPM", "dcm2nii algorithms", "DICOM concepts and implementations", "DICOM fields", "DICOM information", "Introduction to DICOM", "Siemens mosaic format", "DICOM Tags in the NIfTI Header", "Defining the DICOM orientation", "Siemens format DICOM with CSA header", "SPM DICOM conversion", "Getting Started", "Configure git", "Development workflow", "Following the latest source", "Making your own copy (fork) of nibabel", "Git for development", "Install git", "Introduction", "git resources", "Working with <em>nibabel</em> source code", "Maintainer workflow", "Making a patch", "Set up your fork", "Image voxel orientation", "Images and memory", "NiBabel", "Installation", "Installing data packages", "Copyright and Licenses", "NiBabel Manual", "Radiological vs neurological conventions", "Nibabel images", "Working with NIfTI images", "IPython notebooks for Nibabel project", "Relationship between images and io implementations", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nibabel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">affines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analyze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arrayproxy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arraywriters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">batteryrunners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">brikhead</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">caret</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">casting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cifti2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmdline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dataobj_images</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">deprecated</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">deprecator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dft</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ecat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">eulerangles</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">filebasedimages</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fileholders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">filename_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fileslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fileutils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">freesurfer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gifti</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imageclasses</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imageglobals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imagestats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">loadsave</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">minc1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">minc2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mriutils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nicom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nifti1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nifti2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">onetime</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">optpkg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">orientations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">parrec</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom_compat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">quaternions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rstutils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spaces</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spatialimages</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spm2analyze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spm99analyze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">streamlines</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tmpdirs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tripwire</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viewers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">volumeutils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wrapstruct</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlutils</span></code>", "General tutorials"], "terms": {"nibabel": [0, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 30, 39, 43, 45, 46, 48, 50, 53, 54, 55, 56, 57, 59, 60, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "affin": [0, 1, 3, 7, 9, 10, 13, 15, 29, 32, 34, 38, 43, 56, 57, 62, 63, 64, 67, 68, 69, 71, 76, 79, 86, 89, 94, 95, 96, 101, 102, 104, 105, 106, 110, 111, 112, 116, 117, 118, 119, 120, 123, 124, 127], "analyz": [0, 1, 8, 29, 31, 58, 59, 63, 64, 68, 69, 72, 74, 89, 91, 100, 105, 107, 117, 118, 119, 124], "arrayproxi": [0, 1, 3, 57, 64, 67, 68, 71, 75, 76, 82, 86, 94, 101, 102, 119], "arraywrit": [0, 1, 68], "batteryrunn": [0, 68, 98], "benchmark": [0, 1, 68, 69, 92], "brikhead": [0, 68], "caret": [0, 1, 68], "cast": [0, 1, 14, 25, 31, 51, 64, 65, 68, 73, 89, 105, 112, 117, 124], "cifti2": [0, 1, 68], "cmdline": [0, 1, 68], "data": [0, 1, 3, 7, 8, 9, 12, 13, 17, 18, 23, 27, 29, 31, 32, 34, 35, 36, 39, 43, 44, 57, 58, 62, 63, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 82, 86, 89, 90, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 112, 116, 118, 119, 120, 123, 124, 125, 126, 127], "dataobj_imag": [0, 1, 68], "deprec": [0, 13, 14, 62, 68, 72, 82, 96, 100, 107, 110, 113, 121], "dft": [0, 68], "ecat": [0, 1, 12, 13, 58, 68, 69, 72], "environ": [0, 5, 6, 20, 68, 81], "eulerangl": [0, 68], "filebasedimag": [0, 1, 68, 82], "filehold": [0, 64, 68, 71, 76, 82, 86, 89, 94, 96, 101, 102, 111, 119], "filename_pars": [0, 68], "fileslic": [0, 1, 68], "fileutil": [0, 68], "freesurf": [0, 1, 15, 30, 58, 68, 69, 96, 105, 106, 112], "func": [0, 1, 10, 15, 68, 74, 96, 107, 113], "gifti": [0, 1, 15, 30, 58, 68, 69], "imageclass": [0, 1, 68], "imageglob": [0, 68, 125], "imagestat": [0, 1, 68], "loadsav": [0, 1, 68], "minc1": [0, 1, 12, 58, 68, 69, 72], "minc2": [0, 1, 4, 12, 58, 59, 68, 69], "mriutil": [0, 68], "nicom": [0, 1, 68, 113], "nifti1": [0, 1, 8, 31, 39, 58, 64, 65, 68, 69, 71, 72, 83, 96, 100, 106, 111, 112], "nifti2": [0, 1, 3, 58, 65, 68, 69, 71, 79], "onetim": [0, 1, 68], "open": [0, 1, 13, 25, 27, 28, 33, 45, 59, 68, 71, 72, 76, 80, 82, 86, 89, 90, 92, 94, 101, 102, 119, 120, 121, 124, 125, 126], "optpkg": [0, 1, 68], "orient": [0, 1, 2, 9, 33, 34, 35, 37, 62, 63, 64, 65, 68, 71, 86, 88, 95, 104, 105, 112, 117, 118, 119, 123], "parrec": [0, 3, 68, 72], "process": [0, 1, 9, 10, 11, 12, 16, 17, 19, 20, 22, 27, 30, 42, 68, 71, 73, 78, 79, 96, 104, 120, 121], "pydicom_compat": [0, 68], "quaternion": [0, 1, 65, 68, 88, 105], "rstutil": [0, 68], "space": [0, 9, 12, 15, 18, 34, 35, 37, 56, 63, 64, 65, 67, 68, 70, 76, 79, 94, 96, 104, 105, 106, 110, 111, 112, 117, 119, 120, 127], "spatialimag": [0, 1, 3, 10, 68, 71, 76, 86, 89, 94, 95, 99, 100, 101, 105, 111, 112], "spm2analyz": [0, 68], "spm99analyz": [0, 68], "streamlin": [0, 1, 17, 27, 68], "tmpdir": [0, 1, 68], "tripwir": [0, 1, 68, 109], "viewer": [0, 1, 63, 66, 68, 117], "volumeutil": [0, 1, 68, 125], "wrapstruct": [0, 1, 68, 71, 86, 105], "xmlutil": [0, 68], "i": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "successor": [1, 58, 69], "much": [1, 3, 7, 21, 37, 45, 65], "love": 1, "packag": [1, 23, 24, 27, 29, 30, 33, 58, 61, 62, 69, 81, 84, 104, 109], "here": [1, 2, 7, 8, 9, 12, 14, 15, 16, 18, 21, 22, 25, 28, 33, 35, 36, 37, 38, 39, 40, 44, 45, 47, 49, 50, 51, 54, 55, 56, 63, 64, 65, 70, 71, 79, 88, 94, 104, 105, 106, 111, 113, 114, 118, 119, 124], "we": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 69, 70, 71, 73, 74, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 124, 125], "list": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24, 25, 28, 32, 34, 36, 37, 42, 45, 54, 61, 64, 68, 76, 77, 79, 80, 81, 86, 91, 92, 93, 94, 95, 96, 104, 105, 111, 120], "both": [1, 2, 4, 9, 10, 19, 20, 21, 22, 25, 37, 41, 42, 43, 57, 65, 71, 78, 79, 88, 90, 104, 105, 106, 111, 119, 120, 124], "The": [1, 4, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 123, 124, 125, 127], "full": [1, 2, 4, 6, 8, 9, 15, 21, 25, 28, 30, 37, 38, 42, 57, 58, 59, 69, 71, 76, 79, 81, 82, 83, 86, 92, 111, 114, 119, 124], "vc": [1, 24, 32], "avail": [1, 6, 11, 12, 20, 21, 25, 28, 37, 43, 49, 58, 61, 69, 89, 96, 104, 105, 113, 117, 124], "http": [1, 4, 6, 7, 8, 9, 10, 13, 18, 20, 21, 24, 28, 33, 36, 40, 45, 47, 49, 59, 60, 61, 76, 78, 79, 81, 83, 86, 88, 92, 94, 96, 104, 105, 106, 107, 111, 114, 120], "github": [1, 3, 4, 6, 8, 10, 13, 16, 18, 19, 20, 24, 25, 28, 46, 48, 49, 50, 51, 53, 54, 55, 58, 59, 61, 69, 78, 92, 94, 111], "com": [1, 4, 8, 10, 13, 18, 20, 21, 28, 40, 44, 45, 46, 47, 49, 53, 54, 55, 59, 61, 78, 81, 88, 92, 94, 111, 114], "nipi": [1, 2, 4, 6, 7, 8, 9, 13, 18, 21, 23, 25, 27, 28, 29, 30, 46, 53, 54, 55, 58, 59, 60, 69, 70, 81, 87, 107, 111, 120], "commit": [1, 4, 6, 19, 21, 25, 28, 44, 51, 54], "master": [1, 24, 28, 29, 44, 48, 53, 54, 55, 59], "most": [1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 20, 37, 43, 45, 49, 57, 58, 59, 67, 71, 73, 78, 92, 96, 98, 105, 108, 109, 112, 122, 124, 125], "work": [1, 2, 3, 4, 9, 10, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 34, 42, 43, 45, 50, 51, 54, 57, 58, 59, 61, 62, 63, 64, 70, 71, 78, 79, 89, 92, 104, 113, 116, 117, 119, 121], "so": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 22, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 42, 45, 53, 54, 55, 56, 57, 58, 61, 64, 65, 70, 71, 73, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 92, 94, 95, 96, 104, 105, 107, 109, 117, 119, 120, 121, 124, 125], "far": [1, 2, 3, 9, 22, 57, 58, 76], "ha": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 25, 28, 29, 32, 36, 37, 38, 40, 41, 42, 43, 45, 51, 53, 56, 57, 58, 61, 63, 64, 65, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121], "been": [1, 4, 6, 7, 9, 12, 19, 20, 21, 23, 27, 36, 38, 45, 53, 58, 61, 64, 65, 78, 79, 82, 83, 92, 95, 104, 105, 106, 107, 110, 112, 113, 120], "matthew": [1, 4, 7, 8, 9, 10, 12, 13, 14, 25, 44, 58, 61], "brett": [1, 4, 7, 8, 9, 10, 12, 13, 14, 25, 44, 58, 61], "mb": [1, 7, 8, 9, 14, 120], "chri": [1, 15, 25, 33, 36, 58, 61, 63], "markiewicz": [1, 15, 25, 58, 61], "cm": 1, "michael": [1, 25, 33, 58, 61], "hank": [1, 25, 33, 58, 61], "mh": 1, "marc": [1, 11, 58], "alexandr": [1, 11, 58], "c\u00f4t\u00e9": [1, 11, 58], "mc": 1, "ben": [1, 58], "cipollini": [1, 58], "bc": 1, "paul": [1, 58, 88, 123], "mccarthi": [1, 58], "pm": 1, "cheng": [1, 58], "cc": 1, "yaroslav": [1, 25, 58, 61], "halchenko": [1, 25, 58, 61], "yoh": 1, "satra": 1, "ghosh": [1, 58], "sg": 1, "eric": [1, 58], "larson": 1, "el": 1, "demian": [1, 58], "wassermann": [1, 58], "stephan": [1, 61], "gerhard": [1, 61], "ross": [1, 58], "markello": [1, 58], "rm": [1, 33, 76], "refer": [1, 7, 8, 9, 10, 12, 15, 18, 21, 24, 30, 35, 37, 40, 42, 45, 50, 55, 56, 57, 58, 61, 63, 65, 71, 76, 78, 79, 82, 88, 90, 94, 101, 102, 104, 105, 111, 114, 119, 120, 127], "like": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 20, 21, 22, 24, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 44, 45, 53, 55, 59, 60, 63, 64, 65, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 86, 88, 89, 90, 92, 94, 96, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125], "pr": [1, 6, 18], "298": 1, "pull": [1, 3, 4, 6, 13, 16, 18, 25, 27, 29, 42, 44, 45, 46, 51, 53, 54, 101, 102, 104, 111], "request": [1, 3, 4, 6, 15, 16, 22, 25, 27, 37, 44, 45, 53, 89, 96, 111], "number": [1, 2, 4, 6, 9, 10, 12, 15, 18, 19, 20, 21, 22, 28, 33, 35, 36, 37, 38, 40, 41, 42, 65, 71, 78, 79, 81, 85, 86, 89, 92, 93, 94, 97, 99, 104, 105, 106, 111, 112, 120, 123, 124], "x": [1, 2, 6, 9, 12, 15, 18, 21, 25, 28, 32, 38, 40, 42, 49, 64, 71, 78, 79, 83, 88, 94, 96, 104, 107, 108, 111, 114, 116, 117, 123, 124], "seri": [1, 9, 10, 12, 13, 18, 28, 32, 33, 35, 36, 37, 38, 41, 51, 64, 74, 78, 79, 85, 86, 96, 104, 120, 127], "serializableimag": [1, 68, 79, 94, 96, 105], "now": [1, 2, 3, 4, 7, 8, 10, 12, 14, 15, 20, 21, 22, 26, 28, 32, 37, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 60, 65, 70, 71, 73, 92, 107, 118, 119], "to_stream": [1, 68, 89], "from_stream": [1, 68, 89], "method": [1, 3, 7, 10, 15, 20, 22, 23, 29, 30, 42, 43, 57, 64, 65, 67, 68, 71, 72, 73, 74, 77, 78, 79, 82, 84, 86, 89, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 111, 114, 115, 117, 119, 120, 124, 125], "read": [1, 2, 4, 7, 8, 9, 10, 14, 15, 18, 19, 21, 22, 25, 27, 30, 33, 36, 38, 39, 41, 45, 51, 53, 54, 55, 57, 58, 65, 67, 68, 69, 71, 72, 76, 79, 80, 82, 86, 89, 90, 92, 93, 94, 96, 100, 101, 102, 105, 106, 107, 108, 111, 117, 118, 119, 120, 124, 125, 126], "write": [1, 2, 4, 6, 9, 10, 11, 14, 18, 21, 22, 24, 27, 31, 32, 37, 38, 39, 44, 45, 47, 53, 54, 55, 58, 67, 68, 69, 71, 73, 74, 79, 86, 89, 90, 93, 94, 96, 105, 106, 108, 118, 119, 120, 121, 124, 125], "stream": [1, 35, 37, 41, 74, 80, 89, 104, 108], "implement": [1, 3, 6, 7, 8, 10, 11, 12, 13, 15, 19, 21, 23, 27, 30, 32, 35, 36, 44, 45, 58, 65, 69, 70, 71, 72, 74, 76, 86, 88, 89, 90, 92, 93, 94, 97, 101, 104, 105, 111, 117, 120, 124, 125], "iobas": [1, 89], "interfac": [1, 6, 7, 11, 15, 29, 32, 64, 67, 68, 71, 79, 89, 104, 120, 126], "A": [1, 2, 6, 12, 14, 15, 16, 17, 18, 20, 21, 22, 25, 27, 29, 30, 31, 32, 35, 38, 40, 42, 43, 45, 51, 56, 61, 63, 64, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 86, 88, 92, 94, 96, 101, 102, 104, 107, 108, 110, 111, 112, 113, 114, 116, 117, 119, 120, 123, 124, 125, 127], "from_url": [1, 68, 89], "enabl": [1, 5, 24, 89, 111], "load": [1, 2, 3, 8, 10, 11, 12, 15, 17, 23, 27, 31, 32, 38, 39, 43, 56, 57, 62, 63, 65, 67, 68, 69, 71, 75, 76, 79, 82, 86, 89, 93, 94, 96, 101, 102, 111, 117, 124], "imag": [1, 4, 8, 17, 18, 20, 21, 23, 25, 27, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 75, 76, 79, 80, 82, 86, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 116, 117, 118, 119, 123, 124, 126, 127], "from": [1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 46, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127], "url": [1, 6, 9, 16, 21, 45, 55, 66, 89], "1129": 1, "review": [1, 4, 25, 27, 28, 48], "trkfile": [1, 11, 68], "support": [1, 9, 11, 12, 13, 18, 22, 25, 30, 36, 37, 43, 59, 69, 71, 74, 89, 94, 97, 102, 105, 107, 109, 111, 117, 120, 126], "trkv3": 1, "an": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 51, 54, 56, 57, 59, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 91, 92, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 124, 125, 126, 127], "undocu": 1, "gener": [1, 2, 3, 6, 8, 11, 20, 21, 22, 28, 29, 30, 32, 35, 36, 37, 38, 39, 45, 47, 50, 54, 63, 65, 68, 70, 71, 74, 79, 80, 84, 88, 89, 91, 92, 94, 96, 100, 104, 110, 117, 118, 119, 120, 124, 125], "compat": [1, 4, 6, 7, 9, 10, 11, 13, 24, 30, 33, 39, 79, 105, 113, 120], "variant": [1, 72, 105, 106, 108, 118, 119], "trkv2": 1, "1125": 1, "multilin": [1, 115], "header": [1, 2, 3, 7, 10, 12, 13, 14, 15, 17, 18, 27, 29, 30, 32, 34, 35, 36, 37, 38, 40, 42, 43, 58, 62, 67, 68, 69, 72, 74, 76, 79, 80, 82, 86, 89, 91, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 108, 111, 112, 117, 118, 119, 125], "field": [1, 2, 3, 6, 10, 11, 12, 32, 33, 34, 38, 40, 41, 42, 65, 68, 71, 78, 79, 80, 94, 104, 105, 106, 108, 111, 118, 119, 124, 125, 127], "tckfile": [1, 68], "1175": 1, "matt": [1, 58], "cieslak": [1, 58], "make": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 27, 29, 30, 31, 37, 38, 44, 48, 51, 52, 53, 55, 56, 60, 61, 63, 64, 65, 73, 76, 81, 82, 84, 89, 92, 94, 102, 105, 107, 111, 115, 117, 119, 120, 124, 125], "layout": [1, 72, 92, 94, 124, 127], "order": [1, 2, 6, 7, 8, 9, 10, 12, 15, 18, 20, 22, 29, 31, 32, 33, 34, 37, 39, 40, 58, 71, 72, 73, 74, 75, 79, 80, 81, 82, 86, 88, 89, 92, 94, 95, 96, 104, 105, 111, 112, 117, 120, 124, 125], "initi": [1, 24, 25, 43, 44, 46, 71, 72, 73, 74, 76, 78, 79, 81, 82, 86, 89, 90, 94, 101, 102, 104, 105, 106, 107, 110, 111, 117, 118, 119, 120, 124, 125], "paramet": [1, 2, 7, 14, 20, 36, 65, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126], "1131": 1, "type": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 22, 23, 31, 32, 35, 37, 40, 41, 43, 45, 54, 57, 59, 64, 65, 67, 68, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 86, 89, 91, 94, 96, 97, 100, 101, 102, 104, 105, 106, 108, 114, 117, 118, 119, 120, 124, 125], "annot": [1, 28, 58, 69, 94], "1115": 1, "1178": 1, "zvi": [1, 58], "baratz": [1, 58], "handl": [1, 10, 45, 71, 72, 76, 82, 86, 92, 94, 101, 102, 105, 110, 111, 119, 124], "extens": [1, 10, 13, 17, 27, 29, 30, 39, 62, 64, 76, 79, 89, 91, 105, 106, 108, 111, 120, 124], "file": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 20, 21, 22, 23, 24, 27, 28, 29, 33, 34, 38, 39, 40, 41, 43, 44, 45, 54, 56, 58, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 104, 105, 106, 108, 118, 119, 120, 121, 124, 125, 126, 127], "format": [1, 2, 9, 10, 11, 12, 14, 16, 19, 22, 23, 24, 27, 28, 30, 32, 33, 34, 36, 42, 43, 44, 54, 58, 59, 63, 64, 65, 68, 69, 72, 74, 76, 77, 79, 80, 81, 82, 86, 88, 89, 93, 94, 96, 100, 101, 102, 104, 105, 106, 115, 117, 118, 119, 120, 124, 127], "mismatch": 1, "incomplet": [1, 111], "1013": 1, "1138": 1, "thoma": [1, 58], "phil": 1, "improv": [1, 30], "invalid": [1, 9, 78, 105, 107, 119, 120], "tck": [1, 11, 68, 80], "which": [1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 29, 31, 32, 35, 37, 38, 42, 44, 45, 63, 64, 65, 67, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 98, 100, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125], "could": [1, 2, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 22, 29, 57, 63, 79, 88, 92, 104, 109, 111, 119, 122], "sometim": [1, 2, 6, 8, 13, 19, 36, 37, 45, 56, 57, 63, 86, 92, 117], "caus": [1, 28, 61, 63, 94, 119, 125], "infinit": [1, 78], "loop": [1, 41, 42], "1140": 1, "anib": [1, 58], "solon": 1, "clean": [1, 28, 51], "up": [1, 2, 3, 4, 6, 8, 9, 12, 13, 14, 16, 19, 21, 24, 25, 28, 32, 37, 41, 44, 48, 51, 52, 54, 59, 64, 65, 71, 78, 79, 84, 88, 92, 96, 105, 123, 124], "test": [1, 3, 6, 7, 12, 19, 20, 21, 24, 27, 28, 33, 36, 42, 43, 44, 45, 54, 56, 57, 59, 60, 61, 64, 65, 68, 72, 79, 80, 82, 84, 86, 90, 91, 96, 102, 104, 105, 109, 111, 113, 114, 121, 124, 125], "case": [1, 2, 6, 8, 10, 12, 13, 16, 18, 19, 21, 22, 23, 24, 27, 28, 29, 37, 38, 40, 41, 42, 43, 45, 53, 56, 57, 59, 63, 64, 65, 67, 70, 71, 76, 78, 79, 82, 83, 86, 88, 89, 91, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 124, 125], "left": [1, 2, 12, 15, 18, 38, 40, 42, 45, 56, 63, 65, 70, 71, 79, 88, 96, 104, 111, 114, 116], "filehandl": [1, 68], "fail": [1, 3, 24, 25, 70, 80, 104, 124], "us": [1, 3, 6, 8, 10, 11, 14, 16, 19, 21, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "class": [1, 3, 8, 10, 11, 12, 15, 32, 37, 58, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "variabl": [1, 5, 19, 20, 37, 41, 42, 72, 81, 86, 87, 102, 108, 120, 125], "1155": 1, "dimitri": [1, 58], "papadopoulo": [1, 58], "simplifi": [1, 10, 30, 37, 38, 106], "code": [1, 2, 4, 6, 7, 9, 10, 11, 14, 16, 19, 20, 22, 23, 25, 27, 28, 30, 36, 37, 38, 39, 41, 42, 43, 44, 45, 54, 55, 59, 62, 68, 71, 73, 74, 76, 79, 80, 86, 87, 88, 94, 96, 98, 104, 105, 106, 110, 118, 119, 123, 124, 125], "assum": [1, 8, 9, 12, 15, 19, 29, 32, 38, 40, 42, 53, 60, 65, 71, 72, 79, 81, 92, 104, 105, 112, 114, 115, 120, 123, 124], "ar": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 86, 88, 89, 91, 92, 94, 95, 96, 100, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127], "binari": [1, 28, 37, 61, 65, 71, 79, 86, 89, 92, 93, 94, 105, 106, 111, 117, 118, 119, 120, 125], "mode": [1, 54, 67, 68, 71, 72, 76, 82, 86, 90, 92, 94, 96, 101, 102, 108, 111, 112, 119, 120, 123, 124], "1142": 1, "cover": [1, 7, 9, 19, 35, 37, 58, 61, 79], "function": [1, 2, 3, 7, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 31, 33, 35, 37, 43, 57, 64, 70, 72, 76, 78, 79, 80, 83, 84, 88, 92, 94, 95, 96, 99, 100, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 120, 124], "1159": 1, "miscellan": [1, 23, 32], "cleanup": 1, "1148": 1, "1149": 1, "1153": 1, "1154": 1, "1156": 1, "updat": [1, 4, 5, 6, 11, 19, 24, 28, 44, 48, 52, 59, 70, 104, 105, 106, 117, 120], "ci": [1, 4, 28, 44], "build": [1, 3, 6, 9, 21, 28, 30, 33, 43, 59, 120], "deploi": 1, "pypi": [1, 28, 58, 59, 69], "artifact": [1, 64], "1134": 1, "transit": 1, "setup": [1, 20, 27, 28, 33, 60, 109], "cfg": 1, "pyproject": 1, "toml": 1, "configur": [1, 20, 24, 28, 45, 48, 52, 81, 87], "1133": 1, "address": [1, 6, 16, 24, 44], "race": 1, "condit": [1, 37, 61, 83], "prevent": [1, 10, 44, 78, 98, 124], "run": [1, 2, 4, 9, 18, 20, 21, 25, 27, 28, 29, 42, 44, 59, 60, 69, 74, 75, 78, 92, 94, 125], "pytest": [1, 5, 28, 59, 69, 75], "xdist": 1, "1157": 1, "1158": 1, "christian": [1, 58, 61], "haselgrov": [1, 58, 61], "appli": [1, 6, 7, 10, 13, 14, 21, 30, 31, 32, 38, 40, 42, 58, 63, 65, 70, 71, 73, 74, 76, 79, 82, 88, 92, 100, 101, 102, 104, 105, 106, 110, 111, 112, 114, 116, 117, 120, 124, 127], "blue": [1, 2, 44, 79, 96], "isort": 1, "auto": [1, 107], "formatt": 1, "provid": [1, 4, 6, 9, 10, 15, 16, 18, 19, 22, 30, 37, 40, 43, 58, 61, 64, 65, 69, 77, 79, 80, 83, 89, 92, 94, 105, 107, 108, 120, 121], "pre": [1, 42, 45, 124], "reduc": [1, 6, 10, 45, 82, 88, 114, 124], "human": [1, 74], "burden": [1, 15, 19], "style": [1, 6, 19, 36, 63, 72, 76, 94], "guidelin": [1, 6, 19, 25, 27, 58], "1124": 1, "1165": 1, "1169": 1, "manag": [1, 11, 25, 37, 51, 59, 64, 67, 98, 105, 108, 120, 121], "version": [1, 3, 6, 7, 8, 12, 14, 20, 22, 24, 26, 28, 33, 38, 40, 41, 42, 45, 58, 61, 62, 64, 69, 73, 79, 81, 82, 83, 84, 92, 94, 95, 96, 100, 107, 109, 110, 111, 113, 118, 119, 121, 123, 125], "setuptools_scm": 1, "1171": 1, "instal": [1, 4, 22, 24, 28, 33, 36, 39, 45, 46, 52, 62, 69, 81], "size": [1, 2, 4, 12, 13, 14, 18, 21, 32, 38, 40, 56, 64, 65, 68, 70, 79, 80, 82, 86, 92, 93, 96, 101, 104, 105, 111, 112, 120, 124, 126], "exclud": [1, 53, 70, 105], "veri": [1, 4, 6, 8, 10, 14, 20, 21, 28, 37, 40, 44, 47, 58, 60, 63, 69, 74, 79, 86, 105, 111, 114], "larg": [1, 4, 7, 20, 21, 29, 36, 78, 79, 88, 92, 96, 105, 106, 111, 124], "1176": 1, "pass": [1, 2, 3, 6, 7, 9, 15, 21, 28, 29, 43, 57, 69, 70, 71, 72, 73, 74, 78, 79, 83, 84, 86, 89, 91, 92, 96, 101, 104, 108, 118, 119, 120, 121, 124], "int64": [1, 105], "arrai": [1, 3, 8, 9, 10, 11, 12, 14, 15, 31, 32, 38, 40, 41, 42, 43, 44, 56, 58, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 82, 86, 88, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127], "nifti1imag": [1, 7, 43, 56, 57, 64, 65, 68, 69, 83, 95, 99, 104, 106, 111, 112, 120], "without": [1, 2, 4, 6, 7, 9, 10, 11, 15, 16, 19, 21, 25, 28, 37, 43, 45, 61, 64, 71, 72, 74, 78, 81, 88, 91, 100, 113, 117, 118, 120], "dtype": [1, 11, 14, 31, 43, 57, 64, 65, 67, 68, 71, 72, 73, 74, 78, 79, 80, 82, 86, 89, 92, 94, 95, 99, 105, 106, 111, 114, 117, 118, 119, 120, 124, 125], "argument": [1, 12, 32, 65, 69, 70, 73, 79, 81, 82, 84, 88, 89, 90, 92, 96, 100, 104, 105, 108, 109, 112, 120, 124], "rais": [1, 9, 11, 13, 14, 15, 20, 21, 25, 28, 67, 71, 73, 74, 76, 78, 79, 81, 82, 84, 89, 91, 94, 95, 96, 98, 100, 103, 104, 105, 106, 107, 109, 110, 111, 113, 117, 119, 120, 121, 122, 124, 125], "valueerror": [1, 14, 20, 70, 79, 94, 95, 103, 105, 111, 120, 125], "1173": 1, "temporarydirectori": [1, 68], "favor": [1, 7, 13, 82], "tempfil": [1, 22, 29, 67, 121], "1172": 1, "nisext": 1, "remov": [1, 10, 14, 21, 28, 33, 45, 78, 79, 82, 83, 91, 95, 96, 100, 104, 121], "1170": 1, "drop": [1, 4, 29, 92, 110, 112], "python": [1, 3, 4, 6, 7, 9, 19, 20, 21, 28, 30, 32, 36, 40, 58, 60, 62, 64, 78, 81, 82, 83, 98, 107, 121], "numpi": [1, 2, 3, 7, 9, 11, 12, 14, 15, 19, 21, 24, 31, 43, 56, 57, 58, 59, 61, 63, 64, 65, 69, 70, 71, 72, 73, 76, 78, 79, 80, 82, 86, 89, 92, 94, 96, 99, 101, 102, 105, 110, 111, 114, 117, 119, 120, 123, 124, 125], "19": [1, 9, 37, 59, 64, 65], "1177": 1, "follow": [1, 2, 3, 6, 7, 8, 9, 14, 15, 18, 19, 20, 22, 24, 25, 28, 33, 37, 40, 41, 42, 43, 44, 45, 52, 54, 55, 58, 59, 60, 61, 64, 65, 71, 72, 74, 79, 80, 81, 86, 88, 89, 96, 104, 105, 111, 112, 113, 118, 119, 120], "expireddeprecationerror": [1, 68, 82, 96, 100, 107, 110, 113, 121], "": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 22, 25, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53, 54, 56, 58, 60, 63, 64, 65, 70, 71, 78, 79, 80, 81, 86, 87, 88, 89, 90, 92, 94, 96, 98, 104, 105, 107, 108, 109, 110, 111, 112, 116, 117, 119, 120, 123, 124], "read_img_data": [1, 68], "dataobjimag": [1, 68, 79, 86, 101, 102, 117], "get_data": [1, 7, 8, 10, 12, 14, 68, 82, 95, 100, 104, 105, 120], "guessed_image_typ": [1, 68], "setattr_on_read": [1, 68], "flip_axi": [1, 68], "modul": [1, 3, 20, 24, 28, 35, 37, 59, 61, 68, 69, 74, 78, 81, 83, 88, 107, 109, 113, 114, 122], "expir": [1, 84], "were": [1, 6, 12, 16, 24, 42, 63, 67, 79, 80, 89, 91, 96, 104, 105, 107, 111], "fulli": [1, 7, 15, 19, 33, 37, 63, 124], "attributeerror": [1, 67, 81, 104, 122, 124, 125], "giftimetadata": [1, 68], "proxi": [1, 3, 8, 14, 15, 29, 62, 65, 72, 76, 82, 83, 86, 101, 111, 119, 122], "1127": 1, "hao": [1, 58], "ting": [1, 58], "wang": [1, 58], "final": [1, 2, 6, 12, 15, 16, 28, 38, 45, 54, 64, 70, 93, 94, 95, 96, 105, 110, 111, 120, 121, 123], "to_fileobj": [1, 68, 73], "nan2zero": [1, 73, 78, 124], "1126": 1, "convert": [1, 2, 6, 7, 10, 17, 21, 27, 36, 42, 44, 68, 71, 73, 78, 79, 88, 89, 105, 109, 110, 111, 112, 114, 115, 120, 124], "expect": [1, 3, 11, 12, 14, 20, 25, 28, 42, 72, 79, 84, 86, 87, 89, 91, 96, 100, 101, 111, 117, 123, 124], "deprecationwarn": [1, 12, 83, 84], "1117": 1, "suppress": [1, 2, 56, 64, 65, 83], "warn": [1, 7, 14, 42, 81, 83, 84, 104, 111, 120], "nan": [1, 64, 65, 71, 73, 78, 80, 104, 105, 110, 118, 119, 120, 124], "int": [1, 9, 18, 69, 72, 73, 74, 78, 79, 82, 83, 89, 90, 92, 93, 94, 95, 96, 99, 103, 104, 105, 110, 111, 112, 116, 120, 123, 124, 125, 126], "1118": 1, "nib": [1, 2, 7, 11, 12, 14, 28, 39, 43, 56, 57, 63, 64, 65, 69, 75, 76, 82, 86, 89, 96, 102, 117, 125], "cli": 1, "tool": [1, 6, 9, 21, 30, 36, 39, 51, 85], "convers": [1, 10, 11, 33, 34, 35, 36, 38, 59, 71, 73, 78, 79, 88, 105, 124], "access": [1, 3, 4, 22, 29, 30, 37, 39, 43, 47, 53, 54, 57, 58, 59, 64, 65, 69, 71, 72, 76, 79, 81, 82, 83, 86, 92, 94, 101, 102, 104, 105, 106, 107, 109, 118, 119, 120, 124, 125], "via": [1, 3, 4, 6, 25, 36, 43, 45, 58, 59, 64, 69, 71, 90, 92, 104, 111, 117, 118, 119, 120, 125], "command": [1, 6, 20, 36, 37, 44, 45, 46, 51, 54, 60, 80, 102, 104, 111, 112], "line": [1, 2, 6, 7, 12, 14, 19, 21, 28, 36, 44, 45, 46, 53, 54, 56, 71, 80, 102, 104, 108, 111, 115], "1113": 1, "ariel": [1, 58], "rokem": [1, 58], "add": [1, 2, 4, 10, 11, 12, 19, 20, 21, 22, 27, 28, 33, 38, 44, 45, 51, 53, 54, 55, 70, 71, 81, 87, 92, 96, 104, 107, 108, 111, 115, 118, 119, 120, 124, 125], "mask": [1, 18, 45, 79, 99, 105], "smallest": [1, 78, 105, 124], "alias": [1, 64, 105, 117, 124], "nifti": [1, 2, 3, 8, 12, 13, 14, 17, 27, 29, 30, 32, 33, 34, 36, 38, 42, 43, 56, 62, 63, 64, 71, 79, 80, 96, 104, 105, 111, 117, 118, 119, 124], "allow": [1, 2, 6, 7, 9, 10, 12, 13, 15, 22, 25, 37, 43, 47, 57, 64, 71, 72, 73, 81, 86, 89, 91, 92, 95, 101, 104, 105, 109, 114, 120], "specif": [1, 2, 3, 6, 9, 11, 12, 14, 15, 21, 22, 28, 30, 35, 37, 39, 40, 43, 47, 61, 64, 65, 67, 72, 76, 78, 79, 80, 86, 88, 89, 96, 100, 101, 102, 104, 105, 112, 114, 117, 126], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 43, 44, 45, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 88, 89, 92, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125], "depend": [1, 6, 9, 10, 12, 14, 16, 28, 30, 31, 32, 37, 39, 40, 71, 76, 79, 89, 94, 96, 101, 102, 105, 106, 107, 108, 111, 117, 118, 119, 124], "content": [1, 4, 6, 20, 21, 22, 24, 28, 34, 37, 39, 44, 48, 52, 60, 64, 71, 77, 79, 81, 89, 94, 96, 105, 110, 115, 117, 118, 119, 120, 125], "synonym": 1, "uint8": [1, 32, 41, 43, 71, 73, 78, 105], "find": [1, 2, 3, 6, 9, 19, 25, 42, 45, 47, 50, 54, 58, 60, 63, 65, 78, 79, 81, 87, 92, 104, 124], "nearest": [1, 41, 56, 78, 104, 105, 112], "therefor": [1, 2, 7, 9, 12, 13, 18, 19, 21, 30, 37, 38, 40, 56, 63, 64, 70, 73, 78, 81, 88, 89, 104, 111, 112, 117], "wide": [1, 10, 22, 102], "truncat": [1, 42, 111, 124], "attempt": [1, 6, 33, 67, 70, 74, 79, 91, 92, 105, 117], "integ": [1, 2, 8, 9, 14, 32, 37, 42, 43, 64, 71, 73, 74, 78, 79, 92, 94, 96, 105, 106, 108, 111, 112, 120, 124, 125], "contain": [1, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 64, 65, 70, 71, 72, 76, 78, 79, 81, 82, 86, 89, 90, 92, 94, 96, 100, 101, 102, 104, 105, 106, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126], "1096": 1, "rorden": [1, 33, 36, 63], "josh": 1, "teve": 1, "cifti2imag": [1, 15, 68], "1111": 1, "__init__": [1, 3, 8, 28, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "to_filenam": [1, 15, 29, 64, 68, 89, 117], "better": [1, 3, 6, 13, 40, 45, 50, 54, 78, 92, 112], "control": [1, 20, 21, 28, 45, 64, 65, 71, 72, 76, 82, 86, 94, 96, 101, 102, 108, 111, 114, 119, 123, 124], "over": [1, 2, 6, 9, 11, 12, 19, 21, 22, 28, 35, 37, 63, 79, 92, 94, 95, 104, 112, 123, 125], "output": [1, 10, 20, 28, 32, 38, 42, 45, 63, 64, 65, 67, 69, 70, 71, 72, 73, 79, 80, 88, 91, 92, 94, 95, 96, 102, 104, 105, 110, 111, 112, 116, 117, 120, 121, 124, 125, 126, 127], "1082": 1, "discuss": [1, 6, 7, 8, 13, 14, 20, 21, 25, 27, 29, 30, 35, 37, 44, 58, 120], "jerom": 1, "dock": 1, "compress": [1, 4, 20, 21, 71, 76, 108, 118, 119], "zstd": 1, "1005": 1, "andrew": [1, 58], "van": [1, 58, 61], "externalfilebinari": [1, 96], "document": [1, 2, 3, 6, 9, 11, 12, 14, 17, 18, 19, 21, 23, 25, 28, 36, 37, 42, 43, 59, 60, 61, 69, 70, 76, 79, 86, 89, 96, 126], "intemporarydirectori": [1, 68], "non": [1, 2, 7, 9, 25, 42, 44, 61, 73, 75, 79, 96, 99, 108, 114, 117, 124], "thread": [1, 6, 9, 14, 16, 19, 92, 121], "safe": [1, 2, 4, 9, 29, 54, 92, 121], "1103": 1, "jacob": [1, 58], "robert": [1, 58], "unifi": 1, "xml": [1, 9, 77, 79, 89, 96, 111, 126], "metadata": [1, 2, 3, 22, 29, 30, 64, 67, 68, 71, 76, 77, 79, 82, 86, 89, 94, 96, 101, 102, 105, 106, 111, 117, 118, 119, 120], "structur": [1, 2, 9, 15, 20, 32, 42, 61, 65, 73, 79, 86, 94, 105, 111, 120, 124, 125, 127], "cifti2metadata": [1, 68], "dict": [1, 9, 15, 20, 65, 71, 76, 77, 78, 79, 80, 81, 82, 86, 89, 90, 91, 94, 96, 101, 102, 104, 111, 115, 119, 120, 124, 125], "1091": 1, "__repr__": 1, "object": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 21, 22, 25, 29, 30, 32, 33, 35, 40, 43, 44, 45, 57, 58, 62, 65, 67, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127], "1092": 1, "creat": [1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 28, 32, 35, 37, 39, 43, 44, 48, 64, 65, 67, 68, 71, 72, 73, 76, 81, 82, 86, 89, 91, 94, 95, 101, 102, 104, 105, 106, 107, 108, 111, 117, 119, 120, 121, 123, 124, 125], "gzip": [1, 45, 75, 108], "determinist": [1, 108], "default": [1, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 20, 21, 29, 33, 43, 45, 47, 54, 57, 59, 60, 62, 64, 67, 69, 71, 72, 73, 74, 76, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126], "1024": [1, 4, 89, 93, 105], "clear": [1, 8, 9, 11, 13, 14, 19, 20, 36, 57, 86], "error": [1, 3, 9, 13, 14, 20, 28, 30, 31, 33, 38, 42, 59, 66, 67, 68, 70, 71, 73, 74, 76, 78, 79, 81, 83, 84, 85, 86, 88, 89, 91, 92, 95, 96, 98, 101, 104, 109, 110, 111, 113, 114, 117, 119, 122, 125], "messag": [1, 14, 19, 25, 34, 42, 45, 54, 68, 74, 79, 81, 83, 98, 106, 109, 122, 127], "when": [1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 37, 38, 39, 42, 43, 44, 45, 54, 57, 64, 65, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 88, 89, 91, 92, 96, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 117, 120, 121, 124], "zip": [1, 21, 28, 58, 69], "don": [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 19, 20, 21, 28, 31, 36, 39, 42, 45, 46, 47, 54, 59, 71, 78, 82, 83, 92, 104, 107, 116, 124], "t": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 19, 20, 21, 28, 29, 31, 35, 36, 38, 39, 40, 42, 45, 46, 47, 54, 55, 57, 59, 60, 61, 63, 64, 67, 70, 71, 78, 81, 82, 83, 88, 89, 92, 94, 100, 101, 102, 104, 105, 106, 107, 109, 110, 116, 119, 120, 124], "match": [1, 2, 3, 9, 15, 24, 28, 42, 65, 71, 74, 79, 89, 91, 92, 96, 104, 105, 106, 110, 111, 116, 117, 120, 124], "j\u00e9r\u00f4me": [1, 58], "dock\u00e8": [1, 58], "re": [1, 8, 9, 20, 21, 22, 25, 29, 35, 39, 40, 45, 47, 53, 54, 55, 70, 89, 105, 106, 111, 117, 124], "import": [1, 2, 3, 4, 6, 7, 9, 11, 15, 19, 20, 21, 22, 24, 29, 31, 38, 39, 43, 56, 57, 59, 60, 63, 64, 65, 67, 69, 71, 74, 75, 76, 78, 79, 81, 82, 83, 86, 89, 95, 96, 99, 102, 105, 109, 113, 114, 117, 119, 121, 122, 123, 124, 125], "extern": [1, 19, 29, 61, 96], "netcdf": [1, 62, 101], "py": [1, 3, 4, 10, 11, 20, 22, 28, 40, 42, 54, 60, 61, 75], "scipi": [1, 15, 59, 61, 112, 116], "resolv": [1, 6, 10, 15, 19, 25, 45, 83, 105], "1110": 1, "resiz": 1, "arraysequ": [1, 68], "helper": [1, 79, 80, 124], "avoid": [1, 6, 7, 8, 9, 11, 12, 15, 19, 21, 22, 37, 45, 57, 63, 78, 83, 92, 117, 119, 124], "increment": [1, 20, 35, 79, 83, 123], "1093": 1, "submodul": [1, 3, 5, 27, 109], "git": [1, 4, 5, 6, 19, 21, 27, 28, 45, 46, 50, 52, 53, 54, 55, 59, 61, 75], "protocol": [1, 45, 69, 72, 86, 89, 92, 101, 104, 117], "1097": 1, "publish": [1, 28, 61], "biap": [1, 15, 27, 30], "coordinateimag": [1, 15], "1084": 1, "distutil": [1, 20, 22, 28, 81], "1073": 1, "lgtm": 1, "fals": [1, 7, 11, 12, 29, 31, 42, 45, 57, 64, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 84, 85, 86, 88, 91, 92, 94, 95, 96, 101, 102, 104, 105, 106, 107, 108, 109, 111, 114, 117, 119, 120, 121, 122, 124, 125], "alarm": 1, "text": [1, 6, 9, 18, 24, 28, 37, 44, 45, 53, 58, 60, 63, 77, 79, 105, 115, 121, 124], "log": [1, 24, 28, 45, 47, 51, 53, 74, 78, 98, 125], "sensit": [1, 9, 25], "inform": [1, 2, 3, 6, 9, 10, 11, 12, 15, 18, 20, 21, 22, 25, 30, 32, 34, 35, 39, 40, 41, 42, 43, 45, 49, 58, 59, 64, 68, 69, 71, 76, 79, 81, 82, 86, 89, 94, 96, 101, 102, 104, 105, 106, 108, 116, 117, 118, 119, 120, 125, 127], "1052": 1, "10": [1, 2, 9, 28, 31, 32, 37, 40, 42, 43, 56, 64, 65, 70, 71, 73, 74, 79, 86, 88, 95, 96, 104, 105, 107, 110, 111, 118, 124, 125], "1047": 1, "typo": [1, 25, 45], "found": [1, 19, 20, 25, 33, 39, 58, 69, 79, 81, 88, 89, 91, 93, 94, 96, 104, 117, 124], "codespel": 1, "1040": 1, "1044": 1, "stabl": [1, 21, 36], "weekli": 1, "nightli": 1, "1025": 1, "establish": [1, 8], "clarifi": [1, 7], "govern": [1, 27], "decis": [1, 6, 12, 19, 27], "1019": [1, 41], "1020": [1, 41], "1022": 1, "1018": [1, 33, 41], "1017": 1, "1016": 1, "64": [1, 2, 12, 41, 63, 64, 105, 106, 111], "bit": [1, 7, 9, 21, 29, 37, 43, 63, 64, 79, 96, 105, 106, 111, 112], "get": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 20, 21, 24, 28, 29, 31, 32, 34, 35, 36, 37, 41, 42, 44, 45, 49, 50, 51, 52, 54, 55, 57, 62, 65, 67, 68, 71, 72, 73, 78, 79, 80, 82, 84, 86, 87, 91, 92, 94, 101, 104, 105, 106, 109, 110, 111, 112, 117, 118, 119, 120, 124, 125], "harder": [1, 19, 63], "u": [1, 2, 4, 8, 9, 10, 12, 21, 22, 27, 28, 37, 38, 40, 45, 51, 53, 54, 57, 60, 64, 72, 73, 86, 88, 89, 101, 104, 110, 111], "subclass": [1, 11, 79, 83, 104, 105, 117, 125], "unless": [1, 4, 9, 14, 19, 21, 25, 28, 67, 76, 98, 100, 104, 119], "option": [1, 6, 9, 12, 16, 20, 21, 22, 25, 33, 37, 39, 45, 53, 54, 59, 60, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126], "futur": [1, 12, 14, 19, 23, 25, 28, 82, 83], "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125], "becom": [1, 9, 19, 21, 25, 29, 63, 83, 88, 107, 124], "addition": [1, 24, 64], "set_data_dtyp": [1, 29, 67, 68, 71, 79, 94, 105, 117], "requir": [1, 3, 4, 5, 6, 9, 12, 15, 16, 19, 21, 25, 28, 30, 32, 37, 39, 62, 64, 69, 72, 73, 76, 83, 95, 96, 104, 105, 111, 117, 120], "explicit": [1, 2, 3, 7, 8, 9, 37, 42, 92, 105], "1079": 1, "have": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 53, 54, 55, 57, 58, 59, 63, 64, 65, 67, 69, 70, 71, 72, 73, 76, 78, 79, 81, 82, 83, 86, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125], "sinc": [1, 10, 21, 23, 27, 28, 45, 54, 78, 107, 120], "980": 1, "jonathan": [1, 44, 58], "daniel": [1, 58], "trackvi": [1, 11, 120], "calculate_scal": 1, "can_cast": 1, "scale_min_max": 1, "get_shap": [1, 68, 86], "mincimag": 1, "minc1imag": [1, 68, 102], "mincfil": [1, 101, 102], "minc1fil": [1, 68, 102], "from_fil": 1, "filespec_to_fil": 1, "to_filespec": 1, "to_fil": 1, "keep_file_open": [1, 71, 72, 76, 79, 82, 86, 94, 101, 102, 119], "must": [1, 6, 7, 12, 19, 25, 37, 42, 61, 70, 71, 72, 73, 76, 79, 80, 89, 91, 92, 94, 96, 104, 105, 108, 119, 120, 124], "boolean": [1, 79, 104, 105, 120], "reshap": [1, 7, 11, 57, 64, 65, 67, 68, 70, 71, 72, 83, 88, 89, 92, 95, 105, 114, 117, 124], "cifti": [1, 30, 58, 68, 69], "4x4": [1, 15, 32, 70, 79, 86, 105, 111], "encod": [1, 2, 6, 9, 10, 12, 15, 30, 37, 65, 71, 79, 84, 89, 94, 96, 105, 120, 126], "row": [1, 2, 9, 12, 18, 34, 38, 42, 65, 70, 72, 79, 86, 88, 104, 110, 111, 115, 120, 124], "major": [1, 6, 9, 16, 17, 20, 25, 40, 72, 79, 81], "sequenc": [1, 15, 33, 37, 70, 71, 74, 78, 79, 81, 88, 89, 91, 92, 94, 95, 96, 103, 104, 105, 106, 110, 111, 112, 114, 115, 116, 120, 123, 124], "1059": 1, "suggest": [1, 3, 12, 14, 19, 40, 47, 58, 59, 69, 74, 92, 96, 100, 111, 121], "save": [1, 7, 8, 10, 11, 13, 22, 29, 30, 39, 43, 44, 45, 62, 65, 67, 68, 69, 71, 75, 82, 89, 92, 94, 96, 117, 119, 124], "call": [1, 2, 7, 9, 12, 13, 14, 19, 20, 21, 22, 24, 28, 29, 32, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 56, 57, 60, 63, 64, 65, 67, 71, 73, 78, 79, 82, 84, 86, 88, 89, 92, 94, 96, 104, 105, 107, 109, 111, 120, 122, 124, 125], "giftiio": 1, "1055": 1, "variou": [1, 10, 28, 32, 36, 40, 43, 58, 65, 69, 77, 78, 81, 96, 108, 125], "issu": [1, 3, 6, 8, 13, 16, 20, 23, 25, 27, 28, 30, 45, 78, 92, 105, 111], "detect": [1, 28, 53, 74, 80, 104, 111], "1043": 1, "1048": 1, "unclos": 1, "giftiimag": [1, 15, 68], "1038": 1, "lea": [1, 58], "waller": [1, 58], "being": [1, 2, 3, 6, 9, 10, 11, 12, 14, 19, 21, 33, 37, 38, 40, 63, 71, 72, 76, 82, 86, 89, 92, 94, 96, 101, 102, 104, 111, 112, 119, 120, 124], "991": 1, "around": [1, 2, 4, 6, 7, 9, 14, 16, 19, 29, 38, 42, 78, 82, 88, 105, 114, 125, 126], "systemerror": 1, "maintain": [1, 6, 19, 20, 25, 39, 45, 48, 52, 64, 117], "1051": 1, "more": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 18, 19, 20, 21, 22, 24, 25, 28, 30, 31, 32, 37, 40, 42, 43, 47, 54, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 79, 82, 86, 89, 92, 100, 105, 106, 110, 111, 112, 120, 124], "constrain": [1, 9, 71, 104, 105], "mock": 1, "983": 1, "setuptool": [1, 28, 59], "usag": [1, 6, 12, 37, 58], "1009": [1, 41, 42, 96], "tom\u00e1\u0161": [1, 58], "hrn\u010diar": [1, 58], "grammar": 1, "head": [1, 2, 37, 40, 44, 45, 53, 58, 63, 69, 76, 94, 111, 115], "coc": 1, "996": 1, "set": [1, 2, 4, 5, 6, 7, 9, 10, 12, 15, 18, 20, 21, 22, 28, 29, 33, 34, 35, 36, 41, 42, 43, 44, 45, 48, 52, 53, 54, 60, 64, 65, 67, 71, 72, 73, 74, 76, 78, 79, 80, 82, 86, 87, 88, 89, 90, 91, 92, 94, 98, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 118, 119, 123, 124, 125, 127], "minimum": [1, 2, 14, 28, 31, 43, 72, 78, 81, 82, 109, 118, 124], "pydicom": [1, 33, 36, 39, 59, 104, 105, 113], "1050": 1, "submit": [1, 6, 111], "coverag": [1, 3, 69], "codecov": 1, "pin": 1, "1008": [1, 41, 96], "upgrad": 1, "967": 1, "migrat": 1, "action": [1, 47, 61, 92], "972": 1, "serg": [1, 58], "koudoro": [1, 58], "builtin": 1, "namespac": [1, 9, 21, 104, 109], "np": [1, 2, 7, 9, 11, 14, 15, 29, 31, 43, 56, 57, 63, 64, 65, 67, 70, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 88, 89, 92, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 110, 111, 112, 114, 116, 117, 118, 119, 123, 124, 125], "float": [1, 9, 15, 17, 18, 27, 31, 37, 63, 64, 71, 72, 73, 78, 79, 80, 82, 89, 92, 94, 96, 99, 103, 104, 105, 106, 110, 111, 112, 114, 115, 118, 119, 120, 123, 124], "964": 1, "ensur": [1, 15, 19, 25, 31, 43, 45, 79, 92, 96, 105, 107], "963": 1, "stat": [1, 15, 44, 68], "expos": [1, 7, 15, 80, 105], "volum": [1, 2, 13, 18, 32, 38, 40, 57, 64, 68, 76, 79, 80, 85, 86, 89, 94, 99, 104, 105, 111, 112, 116, 123], "calcul": [1, 9, 14, 30, 38, 40, 41, 42, 65, 66, 70, 73, 78, 88, 92, 103, 104, 110, 111, 112, 114], "la": [1, 11, 63, 65], "fslstat": [1, 99], "v": [1, 2, 9, 13, 32, 44, 55, 86, 88, 99, 111, 114, 123, 124, 127], "julian": [1, 58], "klug": [1, 58], "user": [1, 3, 4, 6, 7, 9, 10, 11, 12, 14, 16, 19, 20, 21, 22, 24, 25, 28, 29, 37, 45, 51, 54, 55, 58, 59, 60, 67, 74, 77, 79, 81, 87, 94, 107], "0rc0": 1, "roi": [1, 68], "crop": [1, 64, 80, 117], "flip": [1, 2, 38, 40, 63, 64, 65, 71, 95, 104, 105, 110, 111, 117, 124], "ax": [1, 9, 15, 17, 23, 27, 30, 40, 44, 56, 68, 70, 88, 92, 95, 96, 97, 104, 105, 110, 111, 112, 116, 117, 123, 127], "947": 1, "mathia": [1, 58], "goncalv": [1, 58], "parser": [1, 9, 30, 68, 79, 96, 126], "siemen": [1, 9, 10, 34, 36, 37, 42, 104], "ascconv": [1, 68], "896": 1, "brendan": [1, 10, 30, 58], "molonei": [1, 10, 30, 58], "confus": [1, 2, 7, 36, 37, 40, 45, 63, 78, 94, 119], "mention": 1, "img": [1, 7, 8, 9, 12, 14, 15, 29, 32, 43, 56, 57, 63, 64, 65, 67, 69, 71, 79, 80, 82, 86, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 112, 117, 119], "start": [1, 2, 4, 9, 15, 22, 27, 28, 30, 35, 37, 39, 42, 45, 49, 50, 62, 70, 72, 79, 86, 90, 92, 94, 96, 104, 105, 111, 120, 124, 125], "guid": [1, 12, 15, 25, 27, 45, 51, 107], "946": 1, "fernando": [1, 51, 58], "p\u00e9rez": [1, 58], "garcia": 1, "to_byt": [1, 68, 89, 96], "from_byt": [1, 68, 89], "938": 1, "dicom": [1, 2, 9, 12, 30, 33, 58, 59, 60, 69, 85, 104, 105, 111, 113, 127], "910": 1, "canva": 1, "titl": [1, 6, 16, 37, 45, 75, 115, 123], "orthoslicer3d": [1, 68, 117], "958": 1, "record": [1, 2, 6, 9, 19, 29, 37, 43, 79, 80, 83, 84, 103, 111, 118], "unit": [1, 2, 9, 12, 39, 40, 42, 44, 63, 68, 70, 78, 79, 104, 105, 114], "second": [1, 2, 9, 11, 12, 31, 32, 40, 53, 56, 57, 63, 76, 79, 89, 103, 104, 107, 108, 110, 114, 124], "parrec2nii": [1, 68, 111], "previous": [1, 10, 111], "tr": [1, 79, 94], "retain": [1, 14, 61], "msec": 1, "931": 1, "reflect": [1, 6, 12, 21, 40, 112], "disk": [1, 3, 7, 8, 9, 12, 14, 18, 21, 22, 29, 31, 32, 37, 38, 43, 57, 63, 64, 67, 71, 76, 82, 89, 92, 94, 100, 101, 102, 105, 106, 111, 117, 118, 119, 124], "dimens": [1, 2, 3, 8, 11, 12, 13, 15, 32, 38, 40, 42, 68, 70, 71, 76, 79, 92, 94, 95, 104, 105, 106, 110, 111, 112, 116, 117, 120, 123, 124], "view": [1, 2, 6, 12, 28, 63, 66, 71, 111, 118, 119, 120, 123], "930": 1, "outdat": 1, "sympi": [1, 88], "deriv": [1, 28, 32, 38, 42, 61, 71, 79, 88, 89, 91, 104, 117], "911": 1, "string": [1, 9, 10, 11, 20, 21, 32, 33, 37, 41, 42, 71, 74, 75, 79, 80, 81, 84, 87, 89, 91, 92, 93, 94, 96, 104, 105, 108, 115, 118, 119, 120, 121, 122, 124, 125, 126], "escap": 1, "raw": [1, 14, 18, 37, 38, 43, 71, 86, 100, 105], "909": 1, "doc": [1, 3, 6, 7, 24, 28, 40, 61, 76, 81, 83, 104, 107], "955": 1, "carl": [1, 58], "gauthier": [1, 58], "purg": 1, "nose": [1, 80], "934": 1, "mark\u00e9ta": [1, 58], "cal\u00e1bkov\u00e1": [1, 58], "949": 1, "dorota": [1, 58], "jarecka": [1, 58], "modern": 1, "916": 1, "917": 1, "918": 1, "919": 1, "svg": [1, 28], "logo": 1, "appear": [1, 6, 9, 12, 18, 20, 25, 33, 37, 42, 53, 58, 61, 63, 65, 70, 76, 78, 79, 86, 88, 89, 91, 98, 104, 105, 111, 122, 124], "zoom": [1, 2, 70, 71, 86, 94, 101, 102, 105, 106, 117, 124], "914": 1, "922": 1, "alia": [1, 44, 45, 71, 76, 79, 80, 86, 89, 94, 96, 101, 102, 105, 106, 111, 117, 118, 119, 124], "auto_attr": [1, 68], "948": 1, "These": [1, 2, 3, 9, 10, 12, 19, 21, 22, 33, 37, 40, 42, 46, 50, 67, 71, 74, 79, 90, 107, 108], "small": [1, 2, 3, 6, 10, 20, 21, 27, 29, 37, 65, 88, 104], "arm64": 1, "architectur": [1, 11], "indexed_gzip": 1, "indexedgzipfil": 1, "925": 1, "correctli": [1, 3, 9, 10, 12, 28, 45, 78, 102, 105], "array_to_fil": [1, 68, 75], "862": 1, "conform": [1, 3, 9, 37, 41, 68, 72, 96], "shape": [1, 2, 9, 10, 11, 12, 15, 25, 32, 43, 57, 63, 64, 65, 67, 68, 70, 71, 72, 76, 78, 79, 80, 82, 86, 88, 92, 94, 95, 96, 97, 101, 102, 104, 105, 106, 110, 111, 112, 114, 116, 117, 118, 119, 120, 124], "853": 1, "jakub": [1, 58], "kaczmarzyk": [1, 58], "rescal": [1, 71, 72, 73, 101, 111, 117, 119], "rescale_affin": [1, 68], "voxel": [1, 12, 32, 34, 35, 38, 62, 64, 65, 70, 71, 76, 79, 80, 86, 94, 99, 101, 102, 104, 105, 106, 110, 111, 112, 116, 117, 118, 119, 120, 124, 127], "delai": [1, 28, 111], "h5py": [1, 12, 59], "until": [1, 8, 28, 37, 57, 82, 84, 92, 105], "need": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 37, 40, 42, 43, 44, 45, 46, 47, 53, 57, 63, 64, 67, 71, 72, 73, 74, 78, 79, 81, 82, 88, 89, 92, 94, 100, 101, 102, 104, 105, 109, 110, 111, 112, 116, 117, 118, 119, 120, 124, 125], "889": 1, "893": 1, "865": 1, "mani": [1, 2, 3, 10, 12, 13, 19, 20, 21, 25, 30, 32, 37, 39, 51, 76, 79, 86, 89, 93, 96, 105, 110], "sub": [1, 3, 10, 15, 76, 79, 86, 104, 108], "krzyzstof": 1, "gorgolewski": [1, 58], "roberto": [1, 7, 58], "guidotti": [1, 58], "Or": [1, 7, 8, 10, 21, 44, 45, 58, 64, 109, 124], "duek": [1, 58], "kw_only_meth": 1, "kw_only_func": 1, "decor": [1, 4, 84, 107, 113], "848": 1, "extend": [1, 6, 9, 30, 39, 51, 59, 68, 73, 82, 105, 107, 119, 120], "all": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 24, 25, 28, 29, 32, 37, 40, 42, 43, 44, 45, 54, 55, 57, 58, 61, 63, 64, 65, 67, 69, 73, 78, 79, 80, 81, 82, 86, 88, 91, 92, 95, 96, 98, 99, 104, 105, 107, 108, 111, 114, 115, 116, 117, 119, 120, 124, 125], "incompat": [1, 13, 80], "last": [1, 2, 3, 7, 8, 9, 12, 20, 28, 33, 37, 38, 40, 41, 42, 45, 56, 64, 65, 67, 70, 71, 73, 78, 79, 86, 88, 95, 104, 105, 108, 109, 111, 114, 120, 122, 124, 125], "respect": [1, 2, 6, 9, 15, 24, 28, 37, 40, 59, 61, 65, 70, 76, 79, 80, 86, 88, 95, 96, 104, 111, 120], "If": [1, 2, 3, 6, 7, 8, 9, 12, 14, 15, 16, 20, 21, 24, 25, 28, 29, 31, 32, 33, 37, 39, 40, 41, 42, 45, 47, 53, 54, 57, 58, 59, 60, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 88, 89, 91, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125], "you": [1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 20, 21, 24, 28, 29, 32, 35, 36, 37, 39, 40, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 69, 71, 72, 73, 76, 78, 79, 82, 83, 86, 88, 89, 100, 102, 104, 105, 106, 107, 108, 110, 111, 115, 116, 117, 118, 119, 120, 121, 124, 125], "abl": [1, 2, 3, 7, 8, 9, 10, 11, 12, 15, 19, 21, 22, 29, 37, 44, 53, 73, 78, 112], "recommend": [1, 3, 6, 9, 14, 20, 58, 64, 79, 82], "827": 1, "821": 1, "maximum": [1, 2, 38, 78, 89, 92, 104, 114, 118, 120, 124], "901": 1, "894": 1, "backport": [1, 24], "matplotlib": [1, 2, 38, 63, 117], "wheel": 1, "887": [1, 2], "859": 1, "tupl": [1, 11, 15, 71, 72, 74, 76, 79, 82, 86, 89, 90, 91, 92, 94, 96, 101, 102, 104, 105, 108, 110, 111, 119, 120, 123], "860": 1, "darwin": [1, 28, 58], "valid": [1, 9, 10, 19, 20, 24, 37, 42, 62, 65, 71, 74, 76, 79, 81, 89, 94, 100, 104, 105, 110, 114, 117, 118, 119, 124], "promot": [1, 61, 124], "857": 1, "logic": [1, 3, 37, 87], "accommod": 1, "float16": 1, "866": [1, 2], "858": 1, "__array__": 1, "accept": [1, 2, 10, 14, 16, 19, 32, 37, 78, 84, 108, 109, 125], "dataobj": [1, 3, 7, 13, 14, 15, 57, 64, 65, 68, 71, 76, 79, 82, 86, 94, 100, 101, 102, 105, 106, 111, 112, 117, 118, 119], "well": [1, 3, 4, 6, 8, 9, 12, 14, 15, 16, 20, 21, 22, 24, 36, 43, 44, 45, 50, 58, 69, 70, 87, 92, 105], "directli": [1, 2, 4, 8, 9, 10, 12, 25, 29, 37, 38, 40, 41, 44, 45, 53, 57, 64, 65, 70, 71, 78, 83, 94, 96, 104, 105, 118, 119, 124], "exampl": [1, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 28, 29, 31, 32, 36, 37, 38, 39, 43, 44, 45, 53, 54, 56, 57, 58, 60, 61, 62, 64, 67, 68, 70, 71, 72, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 96, 99, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "float32": [1, 32, 65, 73, 78, 101, 102, 105, 117, 120, 124], "scale": [1, 2, 32, 34, 40, 42, 62, 64, 68, 70, 71, 72, 73, 76, 82, 86, 89, 94, 100, 101, 102, 104, 105, 111, 117, 118, 119, 124], "factor": [1, 4, 65, 71, 72, 76, 111], "slope": [1, 14, 65, 68, 71, 72, 73, 105, 111, 118, 119, 124], "intercept": [1, 14, 23, 27, 65, 71, 72, 73, 105, 111, 117, 118, 119, 124], "narrow": 1, "memori": [1, 3, 8, 9, 11, 12, 14, 15, 28, 29, 31, 32, 37, 43, 62, 63, 64, 71, 72, 73, 76, 82, 86, 92, 94, 96, 101, 102, 111, 119, 120, 124], "basi": [1, 8, 15, 29, 40, 42, 65, 71, 78, 105, 106, 124], "get_fdata": [1, 2, 15, 29, 43, 62, 63, 64, 65, 68, 69, 76, 82, 86, 89, 100, 102, 116, 117], "singl": [1, 2, 6, 9, 10, 12, 13, 15, 16, 18, 22, 35, 37, 40, 42, 56, 64, 65, 71, 72, 74, 76, 77, 79, 82, 86, 89, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 111, 116, 119, 120, 123], "precis": [1, 2, 6, 9, 56, 64, 65, 73, 78, 88, 96, 114, 117, 124], "844": 1, "alejandro": 1, "de": [1, 61, 89], "vega": 1, "agg_data": [1, 15, 68, 96], "return": [1, 2, 3, 7, 8, 12, 14, 15, 20, 22, 29, 37, 39, 42, 54, 57, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125], "usabl": [1, 24], "793": 1, "o": [1, 11, 20, 22, 43, 49, 56, 57, 58, 60, 64, 65, 67, 76, 81, 82, 86, 89, 91, 94, 100, 109, 121], "pathlik": [1, 15, 82, 89, 91, 94, 100], "place": [1, 2, 6, 7, 9, 11, 14, 20, 21, 25, 37, 42, 70, 78, 89, 94, 96, 117, 120, 124], "filenam": [1, 2, 7, 10, 21, 29, 32, 42, 43, 64, 67, 71, 72, 76, 79, 82, 86, 89, 90, 91, 94, 95, 96, 100, 101, 102, 104, 105, 106, 108, 111, 117, 118, 119, 120, 124], "610": 1, "cameron": [1, 58], "riddel": [1, 58], "obliqu": [1, 68], "815": 1, "oscar": [1, 25, 58], "esteban": [1, 25, 58], "847": 1, "slicer": [1, 8, 9, 15, 36, 64, 68, 80, 92, 117, 123], "846": 1, "float64": [1, 14, 18, 64, 67, 71, 78, 80, 82, 114, 124], "would": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 22, 25, 29, 31, 32, 37, 39, 45, 63, 67, 71, 80, 82, 83, 89, 92, 96, 104, 105, 107, 109, 110, 111, 117, 120, 124, 125], "otherwis": [1, 8, 9, 11, 13, 20, 29, 42, 61, 71, 73, 74, 76, 79, 81, 84, 87, 89, 90, 91, 92, 94, 95, 104, 105, 108, 109, 111, 112, 114, 119, 120, 124, 125], "unnecessarili": 1, "833": 1, "oper": [1, 12, 15, 22, 32, 37, 40, 59, 79, 104, 114, 120], "combin": [1, 2, 9, 15, 21, 33, 37, 45, 65, 70, 71, 76, 79, 82, 86, 88, 89, 92, 94, 101, 102, 105, 106, 111, 117, 118, 119, 124], "811": 1, "philipp": [1, 58], "poulin": 1, "rather": [1, 2, 4, 7, 8, 9, 12, 21, 24, 32, 37, 38, 40, 42, 53, 55, 64, 67, 78, 88, 92, 101, 102, 104], "than": [1, 2, 3, 6, 8, 9, 13, 21, 22, 32, 33, 37, 40, 41, 42, 53, 54, 55, 64, 65, 70, 71, 72, 78, 79, 80, 84, 88, 89, 92, 93, 101, 102, 104, 105, 106, 111, 112, 115, 120, 124], "unread": 1, "csa": [1, 10, 34, 38, 42, 104], "tag": [1, 9, 19, 22, 24, 28, 34, 35, 79, 96, 104, 111, 127], "818": 1, "henri": [1, 58], "braun": [1, 58], "clariti": [1, 7], "coordin": [1, 3, 17, 27, 32, 34, 35, 38, 42, 43, 56, 63, 64, 65, 70, 71, 76, 79, 88, 94, 96, 101, 102, 104, 105, 106, 110, 111, 112, 114, 116, 117, 118, 119, 120, 123, 124, 127], "system": [1, 3, 20, 21, 22, 34, 35, 37, 38, 42, 43, 56, 59, 60, 63, 64, 65, 87, 88, 96, 104, 111, 114, 120, 127], "tutori": [1, 19, 25, 52, 58], "823": 1, "egor": [1, 58], "panfilov": [1, 58], "slice": [1, 2, 12, 13, 18, 30, 32, 34, 35, 42, 57, 62, 63, 67, 71, 72, 75, 79, 89, 92, 95, 101, 102, 104, 105, 111, 116, 117, 120, 123, 124], "tractogram": [1, 68, 80], "longer": [1, 6, 10, 53, 65, 89, 93], "apply_affin": [1, 2, 63, 68, 120], "origin": [1, 2, 6, 7, 15, 19, 21, 28, 29, 35, 38, 40, 42, 44, 45, 54, 55, 61, 63, 65, 68, 70, 71, 72, 74, 76, 82, 89, 92, 96, 104, 105, 108, 111, 116, 117, 118, 119, 120, 123, 124, 125], "replic": [1, 14, 24, 82, 112], "manifest": [1, 20], "845": 1, "includ": [1, 2, 4, 6, 9, 10, 12, 15, 16, 21, 25, 28, 30, 37, 39, 45, 53, 58, 60, 61, 69, 72, 74, 78, 79, 84, 90, 92, 93, 94, 105, 108, 114, 117, 120, 123, 124], "787": 1, "slightli": [1, 2, 104, 106], "custom": [1, 60, 71, 108, 111], "786": 1, "commun": [1, 6, 19, 20, 27, 37, 39, 51], "778": 1, "checkwarn": 1, "minc": [1, 2, 3, 8, 9, 12, 64, 83, 100, 101, 102, 117], "852": 1, "valu": [1, 2, 4, 6, 9, 10, 11, 12, 14, 15, 18, 19, 20, 25, 31, 32, 33, 38, 39, 40, 41, 42, 43, 57, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 86, 89, 91, 92, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 124, 125, 127], "copi": [1, 4, 9, 10, 12, 14, 20, 21, 28, 29, 32, 44, 45, 48, 52, 54, 55, 57, 58, 61, 64, 65, 66, 67, 68, 69, 71, 72, 76, 89, 90, 94, 95, 105, 111, 113, 117, 120, 125], "onli": [1, 2, 4, 7, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 24, 27, 32, 33, 37, 38, 40, 41, 42, 43, 45, 47, 53, 55, 57, 63, 64, 65, 67, 70, 71, 72, 73, 74, 76, 78, 79, 81, 82, 86, 89, 92, 94, 95, 96, 97, 100, 101, 102, 104, 105, 107, 108, 111, 117, 119, 120, 121, 124, 125], "794": 1, "809": 1, "ignor": [1, 6, 7, 9, 40, 71, 72, 73, 76, 79, 82, 86, 90, 91, 94, 95, 96, 101, 102, 108, 111, 119, 124], "endian": [1, 18, 32, 41, 42, 64, 65, 68, 71, 79, 80, 86, 94, 96, 104, 105, 106, 111, 118, 119, 120, 124, 125], "diff": [1, 21, 44, 45, 51, 53, 68, 111], "799": 1, "philip": [1, 10, 33, 36, 40, 58, 62, 69, 104, 111], "w": [1, 76, 88, 108, 114], "795": 1, "limit": [1, 4, 6, 58, 61, 69, 96, 123], "1000": [1, 9, 37, 99, 105, 120], "parametr": 1, "relax": 1, "798": 1, "800": 1, "coerc": [1, 71, 105, 124], "intent": [1, 15, 96, 105], "806": 1, "report": [1, 24, 25, 33, 68, 69, 80, 84, 111], "tom": 1, "holroyd": 1, "window": [1, 20, 28, 49, 59, 78, 87, 111], "unexpect": 1, "804": 1, "dicomwrapp": [1, 68], "wrapper": [1, 10, 68, 105, 125, 126], "get_affin": [1, 7, 15, 68, 76, 94, 101, 111], "properti": [1, 2, 7, 11, 12, 15, 21, 57, 61, 64, 67, 71, 72, 73, 74, 76, 79, 82, 86, 89, 90, 94, 96, 101, 102, 104, 105, 106, 107, 108, 111, 117, 118, 119, 120, 123, 125], "796": 1, "either": [1, 3, 9, 20, 37, 41, 53, 59, 64, 76, 79, 82, 87, 104, 105, 113, 116], "through": [1, 2, 9, 11, 12, 19, 24, 25, 28, 37, 39, 65, 78, 79, 92, 111, 120], "thank": [1, 7, 11, 19, 25, 44, 54], "crabb": 1, "644": 1, "check": [1, 2, 3, 4, 7, 9, 10, 12, 13, 20, 21, 28, 29, 32, 33, 41, 45, 54, 62, 65, 68, 70, 71, 72, 73, 78, 79, 81, 86, 87, 89, 92, 94, 95, 104, 105, 106, 107, 117, 118, 119, 120, 124], "describ": [1, 2, 3, 6, 9, 12, 15, 16, 20, 25, 28, 30, 36, 37, 38, 40, 50, 57, 65, 70, 72, 74, 79, 88, 96, 105, 106, 111], "774": 1, "michiel": [1, 58], "cottaar": [1, 58], "stricter": 1, "rule": [1, 8, 10, 12, 25, 28, 33, 37, 51, 73, 88, 92, 124], "768": 1, "trk": [1, 11, 68, 80], "written": [1, 2, 9, 12, 16, 22, 25, 31, 33, 36, 37, 39, 42, 45, 61, 65, 71, 73, 76, 89, 94, 96, 101, 102, 105, 106, 108, 111, 117, 118, 119, 123], "big": [1, 25, 28, 86, 94], "782": 1, "multifram": [1, 10], "path": [1, 6, 19, 20, 21, 43, 56, 57, 60, 64, 65, 75, 76, 80, 81, 82, 86, 87, 91, 94, 99, 104, 109, 121], "appveyor": 1, "accur": 1, "769": 1, "move": [1, 2, 11, 12, 19, 25, 40, 41, 52, 63, 70, 88, 94, 113, 123], "764": 1, "teardown": 1, "785": 1, "effect": [1, 4, 7, 19, 21, 42, 57, 65, 71, 72, 76, 82, 86, 94, 96, 101, 102, 105, 110, 117, 119], "threaten": 1, "some": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 29, 31, 32, 35, 36, 37, 38, 40, 42, 43, 44, 47, 48, 51, 53, 54, 58, 60, 61, 63, 64, 65, 67, 69, 71, 76, 78, 79, 82, 86, 89, 92, 94, 95, 98, 101, 102, 104, 105, 106, 110, 111, 117, 118, 119, 120, 121, 122, 124, 125], "timelin": 1, "755": 1, "v2": [1, 49, 64, 65, 88], "schedul": [1, 28], "contribut": [1, 19, 25, 28, 58, 59], "pafilov": 1, "jath": [1, 58], "palasubramaniam": [1, 58], "richard": 1, "nemec": 1, "dave": 1, "allur": 1, "mmap": [1, 71, 72, 76, 79, 82, 86, 92, 94, 96, 101, 102, 111, 119, 124], "ani": [1, 2, 4, 6, 7, 9, 10, 12, 14, 15, 16, 19, 20, 21, 25, 28, 29, 32, 37, 42, 43, 44, 45, 46, 53, 54, 58, 59, 61, 63, 64, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 86, 88, 89, 91, 92, 93, 94, 96, 98, 104, 105, 107, 108, 110, 111, 112, 117, 120, 123, 124, 125], "759": 1, "writabl": [1, 89], "750": [1, 111], "safer": [1, 65], "registri": [1, 21], "manipul": [1, 64, 79], "overflow": [1, 14, 78, 124], "753": 1, "duplic": [1, 15, 21, 28], "label": [1, 2, 9, 15, 21, 24, 28, 33, 37, 40, 44, 54, 65, 69, 76, 79, 94, 96, 105, 110, 111, 124, 125], "763": 1, "751": 1, "replac": [1, 6, 10, 21, 32, 42, 44, 74, 92, 106, 121], "754": 1, "sphinx": [1, 6, 59, 62], "config": [1, 20, 24, 44, 51, 54, 60, 81], "recent": [1, 9, 20, 41, 49, 58, 67, 69, 71, 73, 78, 105, 109, 122, 124, 125], "numpydoc": [1, 24], "749": 1, "pacifi": 1, "futurewarn": [1, 83], "760": 1, "collect": [1, 2, 6, 12, 15, 19, 20, 21, 33, 37, 38, 42, 43, 45, 71, 79, 86, 96, 104, 105, 108, 124], "mutablemap": [1, 77, 79, 120], "762": 1, "761": 1, "altern": [1, 6, 8, 10, 13, 24, 79, 92, 105, 123], "axi": [1, 2, 15, 40, 44, 56, 63, 64, 68, 70, 71, 76, 88, 92, 95, 104, 105, 110, 111, 114, 116, 117, 120, 123], "base": [1, 9, 10, 11, 12, 19, 25, 30, 32, 40, 42, 45, 61, 65, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "641": 1, "produc": [1, 10, 11, 21, 64, 72, 96, 104, 108, 111], "other": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 24, 25, 28, 32, 33, 36, 37, 39, 42, 43, 48, 51, 53, 56, 59, 60, 61, 64, 65, 71, 72, 73, 78, 79, 80, 86, 89, 90, 91, 92, 97, 100, 104, 105, 107, 108, 111, 117, 118, 119, 120, 122, 123, 124, 125, 127], "delimit": [1, 37, 42, 104], "eof": 1, "720": 1, "soichi": [1, 58], "hayashi": [1, 58], "brainmodel": [1, 79], "parcel": [1, 15, 68, 79], "vertex": [1, 15, 79, 94, 96], "739": 1, "nifti_xform_template_oth": 1, "xform": [1, 65, 70, 96], "743": 1, "skip": [1, 4, 21, 79, 92, 109, 113], "refcheck": 1, "construct": [1, 19, 20, 65, 77, 79, 89, 91, 104, 112, 114, 120], "719": 1, "724": 1, "726": 1, "jon": [1, 58], "haitz": [1, 58], "legarreta": [1, 58], "gorro\u00f1o": [1, 58], "sort": [1, 11, 20, 28, 40, 64, 68, 78, 81, 89, 104, 117], "728": 1, "samir": [1, 58], "reddigari": [1, 58], "reorient": [1, 112], "dim_info": [1, 12, 64, 65, 105, 106], "konstantino": [1, 58], "raktivan": [1, 58], "upstream": [1, 28, 44, 45, 51, 53, 54], "711": 1, "705": 1, "738": 1, "speed": [1, 3, 32, 92], "699": 1, "increas": [1, 17, 19, 30, 37, 40, 63, 69, 78, 79, 105, 106, 124], "coveral": 1, "722": 1, "732": 1, "zenodo": [1, 28, 58, 69], "author": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 28, 29, 61, 94], "copyright": [1, 28, 32, 58, 59, 62], "742": 1, "restor": [1, 21, 28], "six": 1, "714": 1, "gael": 1, "varoquaux": [1, 58], "toggl": 1, "crosshair": 1, "ctrl": 1, "701": 1, "miguel": [1, 58], "estevan": [1, 58], "moreno": [1, 58], "par": [1, 3, 12, 58, 62, 68, 69, 80], "correspond": [1, 2, 7, 9, 10, 15, 18, 24, 29, 37, 42, 43, 57, 65, 70, 76, 79, 88, 89, 91, 92, 94, 96, 100, 104, 105, 110, 111, 112, 114, 117, 120, 123, 124, 125], "adc": 1, "map": [1, 9, 10, 15, 18, 32, 34, 35, 37, 38, 63, 64, 65, 70, 71, 72, 76, 77, 79, 82, 86, 89, 90, 91, 94, 96, 101, 102, 104, 105, 106, 110, 111, 112, 116, 117, 118, 119, 120, 124, 125, 127], "685": 1, "gregori": [1, 58], "r": [1, 2, 12, 28, 31, 38, 40, 42, 45, 56, 58, 63, 64, 65, 67, 71, 72, 76, 79, 82, 86, 88, 92, 94, 96, 101, 102, 104, 108, 110, 111, 115, 119, 124], "lee": [1, 58], "item": [1, 30, 37, 65, 68, 118, 120, 124, 125], "igor": [1, 58], "solovei": [1, 58], "issubdtyp": 1, "bool_": 1, "707": 1, "help": [1, 4, 7, 9, 14, 19, 20, 24, 25, 27, 32, 45, 47, 49, 51, 59, 60, 67, 81, 83, 89, 117], "682": 1, "roo": [1, 58], "asscalar": 1, "686": 1, "qa": 1, "direct": [1, 2, 6, 9, 12, 15, 40, 42, 61, 63, 88, 94, 104, 105, 110], "flake8": 1, "695": 1, "doi": [1, 28, 88], "link": [1, 3, 6, 9, 16, 33, 36, 45, 51, 53, 78, 88, 123], "org": [1, 4, 6, 7, 8, 9, 20, 21, 28, 33, 36, 58, 60, 61, 78, 79, 81, 83, 88, 96, 104, 106, 107, 114, 120], "703": 1, "katrin": [1, 58], "leinweb": [1, 58], "fromstr": 1, "700": 1, "bz2file": [1, 108], "mutabl": 1, "byte": [1, 9, 18, 21, 32, 37, 41, 42, 63, 65, 72, 75, 78, 86, 89, 92, 93, 94, 96, 104, 105, 120, 124, 125, 126], "hack": [1, 45, 54, 105, 106], "disabl": [1, 45], "bytearrai": 1, "readinto": [1, 68, 108], "strategi": [1, 28], "alloc": [1, 70, 120], "buffer": [1, 12, 79, 92, 96, 104, 108, 120, 126], "compar": [1, 2, 7, 23, 33, 53, 63, 80, 84, 88, 100, 102, 104, 109, 124], "617": 1, "672": 1, "678": 1, "pradeep": 1, "raamana": 1, "numer": [1, 88, 96, 104, 105, 108, 114, 124], "655": 1, "ndim": [1, 68, 71, 72, 82, 86, 92, 101, 105, 106, 110, 111], "674": 1, "deduct": 1, "degener": 1, "647": 1, "0m": 1, "mgh": [1, 12, 15, 58, 69, 72, 94], "653": 1, "ppc64": 1, "littl": [1, 2, 7, 8, 18, 19, 21, 32, 41, 42, 45, 51, 64, 80, 86, 88, 96, 105, 111], "long": [1, 2, 4, 6, 14, 19, 22, 25, 27, 28, 32, 37, 59, 70, 78, 89, 106, 111, 120], "doubl": [1, 32, 37, 78], "658": 1, "correct": [1, 9, 12, 13, 20, 25, 38, 78, 81, 86, 95, 105, 116, 120, 124], "666": 1, "d": [1, 2, 8, 9, 21, 22, 28, 37, 39, 40, 42, 44, 45, 58, 59, 64, 81, 83, 104, 105, 110, 112, 124, 125], "persist": [1, 37, 105], "index": [1, 2, 6, 9, 10, 12, 15, 18, 28, 32, 33, 40, 42, 58, 62, 72, 76, 79, 86, 92, 96, 104, 105, 111, 116, 117, 120, 123, 124], "679": 1, "semant": [1, 9, 37], "646": 1, "minor": [1, 9, 20, 25, 81], "associ": [1, 2, 3, 7, 10, 13, 14, 15, 18, 32, 37, 61, 64, 67, 71, 76, 77, 79, 82, 86, 89, 94, 96, 100, 101, 102, 105, 106, 110, 111, 117, 118, 119, 120], "651": 1, "606": 1, "550": 1, "simplfii": 1, "mghimag": [1, 15, 68], "footer": [1, 94], "569": 1, "forc": [1, 14, 28, 53, 73, 89, 92, 104, 107], "sform": [1, 62, 105], "qform": [1, 62, 105], "575": 1, "fill": [1, 3, 14, 28, 40, 57, 71, 82, 86, 92, 105, 112, 115, 124], "color": [1, 44, 79, 94, 123], "tabl": [1, 15, 21, 37, 79, 80, 94, 96, 111, 115], "592": 1, "604": 1, "tim": 1, "coalson": 1, "empti": [1, 9, 42, 57, 70, 71, 74, 79, 82, 86, 92, 94, 96, 104, 105, 106, 108, 111, 118, 119, 120, 124, 125], "611": 1, "nii": [1, 2, 7, 8, 10, 11, 12, 14, 15, 20, 29, 32, 39, 43, 56, 57, 61, 63, 64, 65, 67, 69, 79, 82, 99, 105], "621": 1, "orfano": [1, 58], "take": [1, 2, 4, 7, 8, 9, 10, 12, 19, 21, 25, 28, 30, 32, 38, 40, 42, 45, 54, 63, 65, 67, 71, 78, 89, 92, 104, 105, 110, 111, 117, 124], "advantag": [1, 2], "drop_handl": 1, "flag": [1, 28, 29, 33, 37, 42, 45, 54, 71, 80, 82, 92, 105, 111, 124, 125], "614": [1, 96], "preserv": [1, 7, 9, 10, 12, 15, 30, 65, 70, 100, 104], "first": [1, 2, 3, 6, 8, 9, 11, 12, 13, 19, 21, 22, 32, 33, 37, 38, 40, 41, 45, 53, 55, 56, 57, 60, 63, 64, 65, 67, 70, 71, 76, 78, 79, 86, 87, 88, 89, 91, 92, 104, 105, 107, 108, 110, 111, 114, 117, 120, 124], "point": [1, 6, 7, 8, 9, 11, 12, 15, 17, 19, 20, 24, 27, 29, 31, 32, 35, 36, 37, 38, 40, 41, 42, 45, 54, 55, 60, 63, 64, 65, 70, 73, 78, 79, 80, 82, 89, 92, 96, 104, 105, 106, 111, 112, 115, 117, 120, 124, 127], "lazytractogram": [1, 68], "588": 1, "nil": 1, "goyett": 1, "stop": [1, 40, 45, 79, 92], "ad": [1, 2, 3, 6, 9, 10, 19, 20, 24, 25, 27, 28, 44, 45, 54, 65, 79, 81, 82, 91, 92, 94, 111, 112, 120], "extran": 1, "pad": [1, 105, 120], "593": 1, "stutter": [1, 58], "lower": [1, 2, 63, 67, 84, 124], "600": [1, 9], "kesshi": [1, 58], "jordan": [1, 58], "597": 1, "eleftherio": [1, 58], "garyfallidi": [1, 58], "unboundlocalerror": 1, "607": 1, "do": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 19, 21, 22, 24, 28, 29, 33, 37, 40, 42, 44, 46, 47, 48, 51, 53, 54, 56, 57, 59, 60, 61, 64, 65, 67, 71, 72, 73, 76, 78, 81, 82, 83, 86, 88, 89, 91, 92, 93, 94, 96, 100, 101, 102, 104, 107, 109, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124], "crash": [1, 42, 51], "importerror": [1, 109], "failur": 1, "618": 1, "638": 1, "ssh": [1, 45, 47], "kei": [1, 6, 9, 10, 11, 16, 21, 25, 47, 64, 68, 71, 76, 77, 79, 80, 81, 89, 91, 94, 96, 104, 111, 115, 117, 118, 120, 123, 124, 125], "auth": 1, "587": 1, "doctest": [1, 28, 69, 80, 95], "print": [1, 2, 4, 10, 20, 28, 42, 60, 64, 65, 69, 75, 76, 79, 80, 88, 96, 98, 102, 104, 105, 107, 115, 124, 125], "591": 1, "refactor": [1, 10, 24, 45], "599": 1, "unreach": 1, "602": 1, "l": [1, 42, 56, 64, 68, 70, 71, 78, 110, 111], "program": [1, 3, 7, 29, 33, 36, 76, 80, 94], "601": 1, "615": 1, "encourag": [1, 6, 19], "637": 1, "accordingli": [1, 6, 20, 92, 95], "keep_file_open_default": [1, 71, 72, 76, 82, 86, 94, 101, 102, 119], "same": [1, 2, 3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 21, 22, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 45, 51, 57, 64, 65, 70, 71, 72, 73, 76, 78, 79, 80, 82, 86, 88, 89, 90, 92, 94, 95, 96, 101, 102, 104, 110, 111, 112, 114, 116, 117, 119, 120, 121, 124, 125], "orthoview": [1, 68, 117], "564": 1, "defer": [1, 6, 16], "ufunc": [1, 44], "memmap": [1, 71, 72, 76, 82, 86, 94, 96, 101, 102, 111, 119, 124], "freez": [1, 72, 86, 101], "572": 1, "582": 1, "576": 1, "580": 1, "bennet": [1, 58], "fauber": [1, 58], "maco": [1, 28], "newer": 1, "583": 1, "script": [1, 4, 22, 28, 36], "conda": 1, "584": 1, "249": 1, "mrtrix": [1, 11, 120], "486": 1, "arnaud": 1, "bore": [1, 2], "j": [1, 2, 6, 9, 12, 32, 34, 38, 58, 63, 88, 104, 114, 120], "donald": 1, "tournier": 1, "jean": [1, 58], "christoph": [1, 58], "houd": 1, "retriev": [1, 6, 15, 86, 89, 96, 117], "551": 1, "name": [1, 6, 7, 10, 11, 12, 15, 16, 18, 20, 22, 25, 28, 29, 32, 33, 37, 39, 40, 41, 42, 45, 47, 53, 54, 55, 61, 64, 68, 71, 77, 79, 80, 81, 82, 83, 88, 89, 90, 91, 94, 96, 97, 100, 104, 105, 107, 108, 109, 111, 115, 120, 121, 124, 125, 126, 127], "507": 1, "512": [1, 86], "concaten": [1, 12, 13, 68, 79, 95, 96, 111], "495": 1, "multipl": [1, 2, 6, 9, 10, 12, 15, 17, 19, 24, 27, 79, 86, 88, 96, 111, 114, 115, 120, 124, 127], "494": 1, "500": 1, "502": 1, "specifi": [1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 37, 40, 63, 65, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 86, 88, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 114, 116, 117, 120, 124, 125], "input": [1, 2, 6, 9, 10, 11, 19, 63, 70, 72, 73, 79, 84, 88, 89, 92, 95, 96, 104, 110, 112, 114, 116, 117, 124], "485": 1, "headerless": 1, "effici": [1, 14, 19, 30, 57, 73, 92], "521": 1, "unknown": [1, 9, 37, 40, 43, 64, 65, 96, 105, 120, 125], "fsl": [1, 7, 9, 29, 30], "528": 1, "__getitem__": [1, 8, 15, 104, 124, 125], "533": 1, "deleg": 1, "544": [1, 106], "mark": [1, 6, 9, 58, 65, 84], "hymer": [1, 58], "552": 1, "reader": [1, 9, 63, 104], "493": 1, "vincent": [1, 58], "corner": [1, 2, 19, 40, 114, 120], "516": 1, "517": 1, "536": 1, "perez": [1, 51], "venki": [1, 58], "reddi": [1, 58], "514": 1, "ivan": [1, 58], "gonzalez": [1, 58], "509": 1, "503": 1, "renam": [1, 10, 54, 107], "spec": [1, 9, 15, 21, 22, 65, 72, 79, 96, 104, 105], "entri": [1, 20, 65, 77, 79, 81, 86, 89, 92, 104, 112, 115, 116, 120, 124], "evalu": [1, 19, 107], "instead": [1, 2, 9, 11, 14, 19, 39, 40, 53, 54, 62, 71, 76, 79, 82, 89, 94, 96, 100, 104, 105, 109, 110, 111, 119, 120, 124], "none": [1, 3, 8, 14, 15, 19, 21, 22, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126], "differ": [1, 2, 4, 6, 7, 9, 10, 11, 12, 18, 19, 23, 28, 31, 33, 37, 38, 40, 41, 42, 50, 63, 64, 65, 70, 74, 78, 80, 89, 92, 104, 105, 110, 111, 112, 117, 120], "eventu": [1, 6, 38], "current": [1, 7, 9, 10, 11, 13, 21, 24, 25, 28, 29, 30, 38, 42, 44, 45, 53, 55, 58, 59, 67, 69, 82, 84, 86, 89, 93, 94, 96, 100, 104, 105, 108, 117, 120, 123, 124, 125], "391": 1, "bago": [1, 58], "amirbekian": [1, 58], "samuel": [1, 58], "st": [1, 37, 44, 58], "prototyp": [1, 6], "404": 1, "proto": 1, "ivanov": [1, 123], "resampl": [1, 15, 32, 112, 116, 117], "smooth": [1, 12, 25, 112], "ndimag": [1, 112, 116], "255": [1, 73, 94, 112], "abil": [1, 3, 19, 29, 45], "morphologi": 1, "414": 1, "296": 1, "kastman": [1, 58], "geometri": [1, 15, 58, 69, 94], "460": 1, "gramfort": [1, 58], "jaakko": [1, 58], "lepp\u00e4kanga": [1, 58], "rec": [1, 3, 12, 58, 62, 69, 80, 111, 124], "429": 1, "427": 1, "diffus": [1, 9, 36, 104, 111], "426": 1, "sophist": [1, 45, 71, 105], "409": 1, "fewer": [1, 65, 92, 105, 111, 112], "declar": [1, 107], "strict": [1, 9, 61, 111], "matrix": [1, 15, 32, 38, 40, 43, 64, 70, 71, 76, 79, 86, 88, 94, 96, 101, 102, 104, 105, 106, 110, 111, 114, 117, 118, 119, 120, 127], "413": 1, "assumpt": [1, 65], "posit": [1, 2, 35, 37, 38, 40, 41, 42, 63, 68, 69, 72, 74, 78, 79, 88, 89, 90, 92, 93, 94, 96, 104, 105, 108, 110, 114, 116, 117, 119, 120, 123, 124, 125], "439": 1, "m": [1, 2, 7, 9, 12, 28, 33, 34, 36, 37, 39, 40, 41, 45, 54, 58, 70, 79, 86, 88, 94, 104, 105, 110, 112, 114, 118], "baker": [1, 58], "robust": [1, 36, 114], "privat": [1, 3, 7, 9, 10, 21, 25, 30, 32, 33, 38, 39, 41, 42, 104, 127], "393": 1, "try": [1, 3, 4, 6, 8, 9, 10, 13, 16, 21, 28, 36, 37, 40, 55, 59, 63, 65, 67, 71, 72, 74, 76, 81, 82, 86, 89, 92, 94, 96, 101, 102, 104, 111, 117, 118, 119, 122, 124], "exist": [1, 7, 9, 11, 16, 25, 28, 40, 42, 65, 79, 80, 81, 86, 87, 89, 105, 106, 109, 117, 121, 124], "455": 1, "show": [1, 2, 43, 45, 53, 55, 63, 68, 70, 80, 83, 111, 117, 123, 124], "statist": [1, 18, 80, 99], "437": 1, "348": [1, 64, 65, 71], "yarik": 1, "rotat": [1, 2, 38, 70, 88, 104, 105, 111, 114, 117], "matric": [1, 2, 42, 114], "comprehens": [1, 16, 50, 58], "surfac": [1, 18, 32, 37, 68, 79, 89, 94, 96, 105], "352": [1, 65, 105], "355": 1, "360": 1, "365": 1, "403": 1, "328": 1, "329": 1, "446": 1, "shebang": 1, "virtualenv": [1, 28, 59], "pip": [1, 58, 62, 69], "434": 1, "pil": 1, "pillow": 1, "framework": [1, 9, 28], "345": 1, "end": [1, 2, 12, 21, 24, 28, 32, 36, 37, 38, 40, 42, 43, 45, 53, 70, 79, 87, 88, 89, 91, 94, 95, 96, 105, 110, 121], "478": 1, "jasper": [1, 58], "f": [1, 2, 8, 11, 15, 28, 37, 38, 40, 42, 45, 58, 71, 72, 73, 75, 78, 80, 92, 93, 94, 105, 110, 117, 124], "den": [1, 58], "bosch": [1, 58], "breakag": 1, "dataerror": [1, 20, 68], "too": [1, 4, 10, 19, 29, 84, 92, 124], "few": [1, 9, 25, 28, 45, 111], "headererror": [1, 68], "track": [1, 2, 6, 7, 16, 21, 23, 24, 27, 30, 39, 41, 44, 53, 120], "true": [1, 2, 7, 8, 9, 11, 12, 24, 29, 31, 32, 37, 38, 41, 42, 43, 44, 56, 57, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 125], "typeerror": [1, 74, 89, 117, 124], "align": [1, 2, 12, 15, 30, 56, 65, 76, 105, 112, 116, 119, 127], "scanner": [1, 12, 30, 33, 40, 63, 64, 65, 105, 111, 120, 127], "get_head": [1, 7], "broken": [1, 2, 42, 78], "from_filespec": 1, "class_map": 1, "instanc": [1, 14, 35, 37, 45, 64, 71, 72, 73, 74, 76, 79, 81, 82, 85, 86, 89, 90, 94, 95, 96, 98, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 117, 118, 119, 120, 123, 124], "attribut": [1, 7, 9, 14, 15, 22, 35, 39, 40, 64, 65, 67, 71, 72, 73, 74, 76, 77, 79, 82, 83, 89, 90, 94, 96, 97, 101, 102, 104, 105, 106, 107, 111, 112, 116, 117, 118, 119, 120, 127], "ext_map": 1, "spatialhead": [1, 68, 71, 76, 86, 94, 101, 111], "binopen": 1, "get_metadata": 1, "get_rgba": 1, "giftidataarrai": [1, 68], "get_labelt": 1, "set_labelt": 1, "get_meta": [1, 10], "set_meta": 1, "data_tag": 1, "num_dim": [1, 68, 96], "from_arrai": 1, "constructor": [1, 3, 7, 10, 79, 95, 108, 120, 124], "to_xml_open": 1, "to_xml_clos": 1, "to_xml": [1, 68, 77, 96, 126], "parse_gifti_fast": [1, 68], "outputt": 1, "giftiimagepars": [1, 68], "parse_gifti_fil": 1, "pars": [1, 39, 68, 76, 79, 86, 89, 96, 104, 111, 126], "which_analyze_typ": 1, "where": [1, 2, 6, 7, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 27, 28, 29, 31, 32, 37, 38, 40, 42, 45, 51, 54, 61, 63, 64, 67, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 91, 92, 93, 94, 95, 104, 105, 108, 110, 111, 112, 114, 116, 117, 120, 123, 124], "each": [1, 2, 6, 7, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 24, 28, 32, 35, 37, 38, 39, 40, 42, 45, 70, 71, 79, 80, 82, 86, 88, 92, 94, 96, 101, 102, 104, 105, 110, 111, 115, 119, 120, 123, 124], "dure": [1, 6, 10, 12, 24, 39, 42, 44, 45, 79, 80, 96, 104, 111, 126], "325": 1, "unusu": [1, 6], "332": 1, "336": 1, "340": 1, "347": 1, "339": 1, "363": 1, "358": 1, "permit": [1, 11, 37, 61, 76, 105], "379": 1, "workaround": 1, "regress": 1, "383": 1, "except": [1, 2, 10, 13, 15, 20, 40, 42, 44, 73, 74, 78, 79, 81, 83, 85, 89, 90, 91, 92, 94, 95, 101, 104, 110, 111, 112, 116, 117, 120, 122, 124, 125], "trigger": [1, 107], "inspect": [1, 64, 81], "prior": [1, 16, 61, 96, 111], "also": [1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 21, 22, 24, 25, 28, 30, 31, 32, 33, 36, 37, 38, 40, 43, 44, 45, 55, 57, 58, 60, 61, 63, 64, 65, 67, 69, 71, 72, 76, 78, 79, 81, 82, 86, 88, 89, 92, 94, 101, 102, 104, 105, 106, 110, 111, 114, 117, 118, 119, 120, 124, 125], "catch": 1, "tripwireerror": [1, 68, 109], "clemen": [1, 58], "bauer": [1, 58], "freec84": [1, 58], "bugfix": [1, 24, 45], "concat_imag": [1, 68], "unsign": [1, 37, 42, 78, 96, 111, 112], "302": 1, "autom": [1, 28, 60], "earli": [1, 3, 96], "307": 1, "312": [1, 76], "c": [1, 2, 8, 9, 12, 15, 28, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 45, 54, 58, 59, 60, 61, 65, 70, 71, 72, 73, 75, 76, 78, 82, 83, 86, 87, 88, 92, 94, 96, 101, 102, 104, 105, 111, 115, 119, 124, 125], "ico7": 1, "315": 1, "page": [1, 18, 21, 24, 25, 26, 28, 36, 37, 42, 45, 47, 49, 50, 52, 53, 57, 58, 59, 65, 78], "host": [1, 37, 50], "neuroimag": [1, 2, 11, 20, 30, 43, 58, 69, 80], "mail": [1, 3, 4, 6, 7, 14, 16, 19, 25, 28, 40, 45, 54, 68, 81], "had": [1, 2, 9, 13, 14, 21, 22, 45, 56, 57, 65, 67, 82, 110, 124], "nolan": [1, 58], "nichol": [1, 58], "basil": [1, 58], "pinsard": [1, 58], "johnson": 1, "nikolaa": [1, 58], "n": [1, 6, 9, 15, 28, 32, 33, 37, 40, 42, 58, 64, 65, 70, 77, 79, 86, 88, 93, 94, 104, 105, 106, 110, 112, 114, 117, 120, 121, 124], "oosterhof": [1, 58], "offset": [1, 9, 32, 38, 42, 67, 68, 71, 72, 73, 75, 76, 80, 86, 92, 94, 100, 104, 105, 111, 124], "begin": [1, 2, 6, 9, 38, 40, 41, 42, 94, 104, 105, 108, 110, 120], "befor": [1, 4, 5, 6, 7, 10, 12, 19, 25, 28, 38, 45, 57, 64, 65, 73, 79, 81, 83, 92, 95, 96, 105, 120, 124], "behavior": [1, 12, 14, 32, 57, 65, 71, 72, 73, 76, 82, 86, 94, 95, 96, 101, 102, 104, 111, 119, 121, 123, 124], "keep": [1, 2, 7, 15, 19, 21, 23, 27, 28, 39, 41, 45, 54, 57, 64], "zero": [1, 2, 4, 9, 38, 40, 42, 65, 67, 70, 71, 73, 78, 79, 86, 88, 93, 99, 104, 105, 110, 112, 114, 117, 124], "necessari": [1, 2, 9, 11, 14, 16, 19, 24, 25, 29, 63, 67, 81, 82], "room": [1, 2, 124], "overrid": [1, 3, 9, 15, 29, 71, 117], "explicitli": [1, 15, 16, 37, 107], "To": [1, 2, 5, 6, 8, 9, 10, 11, 15, 20, 21, 22, 31, 37, 38, 40, 42, 43, 44, 45, 59, 65, 74, 78, 82, 88, 94, 98, 105, 107, 108, 111, 120], "look": [1, 2, 3, 4, 6, 7, 8, 9, 11, 20, 21, 22, 28, 32, 33, 37, 40, 41, 42, 43, 45, 49, 53, 59, 60, 63, 71, 86, 88, 91, 104, 105, 106, 108, 121, 124, 125], "inter": [1, 15, 65, 68, 71, 72, 73, 105, 119, 124], "cach": [1, 7, 14, 29, 62, 73, 82, 85, 88, 100, 104, 120], "in_memori": [1, 7, 62, 68, 82], "alreadi": [1, 4, 7, 11, 12, 21, 28, 31, 32, 36, 37, 45, 53, 54, 57, 59, 64, 79, 82, 88, 89, 92, 95, 107, 114, 117, 120, 124], "keyword": [1, 8, 9, 10, 12, 37, 58, 62, 71, 72, 73, 76, 81, 82, 86, 89, 94, 96, 100, 101, 102, 104, 105, 108, 111, 119, 120], "whether": [1, 2, 3, 6, 7, 8, 12, 19, 20, 21, 22, 23, 27, 28, 36, 37, 42, 61, 71, 72, 73, 76, 78, 79, 81, 82, 86, 88, 89, 92, 94, 101, 102, 105, 108, 113, 117, 118, 119, 120, 124, 125], "should": [1, 2, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24, 25, 28, 33, 37, 40, 41, 44, 45, 47, 50, 53, 59, 63, 64, 65, 70, 71, 72, 74, 76, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 123, 124, 125, 126], "slowli": 1, "phase": [1, 9, 12, 16, 105, 111], "out": [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 19, 29, 34, 35, 42, 43, 54, 60, 61, 63, 65, 78, 79, 80, 84, 86, 89, 92, 94, 101, 102, 103, 116, 117, 121, 123, 124], "algorithm": [1, 4, 15, 19, 20, 21, 24, 36, 40, 42, 65, 71, 81, 92, 114, 118], "unnecessari": 1, "possibl": [1, 3, 6, 9, 10, 11, 14, 15, 16, 21, 23, 25, 28, 37, 39, 45, 51, 56, 61, 64, 65, 72, 73, 74, 75, 79, 80, 82, 87, 88, 104, 114, 118, 124], "time": [1, 6, 8, 9, 10, 13, 14, 15, 18, 21, 24, 25, 30, 33, 35, 37, 39, 40, 45, 46, 62, 63, 64, 65, 68, 71, 72, 76, 79, 82, 86, 89, 92, 93, 94, 96, 101, 102, 103, 105, 107, 108, 111, 112, 117, 119, 120, 124], "due": 1, "advic": [1, 3, 6, 59], "jeff": 1, "stevenson": 1, "bennett": 1, "landman": 1, "dtifit": 1, "fslview": 1, "analysi": [1, 25, 30], "pipelin": [1, 7, 9, 14], "preliminari": [1, 45, 62, 102], "ly": [1, 2, 58], "nguyen": [1, 58], "ohind": 1, "vox2ras_tkr": 1, "unscal": [1, 38, 71, 100, 104, 117, 118, 124], "get_unsc": [1, 68, 72, 100, 111, 117], "previou": [1, 2, 8, 14, 21, 29, 42, 45, 86, 89, 111], "wai": [1, 2, 3, 4, 6, 7, 9, 10, 11, 13, 16, 18, 21, 25, 28, 30, 37, 38, 40, 42, 44, 45, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 68, 71, 78, 89, 92, 104, 107, 124], "wa": [1, 2, 6, 7, 10, 19, 20, 21, 28, 29, 30, 33, 37, 40, 42, 45, 60, 61, 64, 74, 79, 80, 86, 88, 96, 108, 109, 119, 120], "rang": [1, 32, 37, 40, 73, 78, 79, 102, 103, 111, 112, 124], "did": [1, 14, 31, 42, 45, 64, 71, 104], "base64": 1, "didn": [1, 9, 42], "wrong": [1, 45, 91], "russ": 1, "poldrack": 1, "diagnosi": 1, "read_annot": [1, 68], "orig_id": [1, 94], "vertic": [1, 15, 18, 40, 79, 94, 105], "introductori": 1, "lot": [1, 7, 8, 9, 104, 120, 124], "common": [1, 2, 10, 11, 12, 13, 15, 21, 29, 30, 31, 37, 44, 51, 58, 63, 65, 69, 76, 80, 89, 96, 120, 125], "mechan": [1, 6, 20, 37, 78, 125], "special": [1, 6, 10, 15, 30, 37, 42, 61, 86, 107, 124], "jb": [1, 58], "polin": [1, 58], "triangl": [1, 15, 94, 96], "threshold": [1, 78, 88, 92, 104, 110, 114, 124], "rank": 1, "defici": 1, "normal": [1, 6, 15, 30, 33, 37, 56, 64, 74, 88, 107, 114], "137": 1, "longdoubl": [1, 78], "debian": [1, 20, 24, 33, 49, 61, 62, 81], "ppc": [1, 28, 78], "halchecko": 1, "diagnos": 1, "hope": [1, 3, 9, 21, 22, 37], "them": [1, 3, 6, 7, 9, 10, 11, 16, 19, 21, 28, 29, 30, 32, 33, 37, 45, 54, 56, 63, 65, 79, 88, 91, 96, 104, 107, 120, 124], "float128": [1, 78], "platform": [1, 22, 28, 59, 78], "real": [1, 2, 6, 14, 16, 21, 32, 37, 38, 45, 88, 101, 114, 120], "ieee": [1, 78, 104], "binary128": [1, 78], "particular": [1, 2, 3, 7, 9, 10, 11, 20, 21, 28, 29, 33, 37, 40, 42, 43, 45, 61, 63, 71, 104, 107, 120], "diagnost": [1, 80, 125], "dx": [1, 32], "column": [1, 2, 9, 12, 18, 34, 37, 38, 42, 70, 72, 79, 86, 88, 94, 96, 104, 112, 114, 115, 124], "miss": [1, 4, 9, 28, 29, 42, 92, 104, 111, 112, 115, 116, 120, 122], "dicomf": [1, 28, 59, 68], "krish": [1, 58, 94], "subramaniam": [1, 58, 94], "cinde": [1, 58], "madison": [1, 58], "f\u00e9lix": [1, 58], "morenc": [1, 58], "fuse": [1, 68], "filesystem": [1, 22, 29, 85], "round": [1, 38, 41, 78, 89, 124], "transform": [1, 9, 32, 37, 40, 42, 43, 65, 70, 71, 79, 88, 92, 94, 95, 96, 104, 105, 110, 111, 112, 114, 117, 119, 120, 123, 127], "rgb": [1, 96], "yannick": [1, 58], "schwartz": [1, 58], "displai": [1, 2, 28, 37, 65, 71, 79, 96, 123, 125, 127], "about": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 18, 20, 21, 22, 25, 28, 30, 33, 35, 37, 40, 42, 43, 45, 54, 58, 61, 63, 67, 68, 70, 79, 81, 82, 88, 100, 104, 107, 120], "burn": [1, 58], "jarrod": [1, 6, 25, 58, 61], "millman": [1, 6, 25, 58, 61], "substanti": [1, 28, 61], "mm": [1, 2, 16, 35, 38, 40, 42, 43, 70, 79, 104, 112, 120, 124], "neg": [1, 2, 40, 69, 71, 78, 86, 88, 92, 96, 104, 105, 110, 111, 114], "voxel_ord": [1, 11, 68, 120], "filo": 1, "problem": [1, 2, 7, 8, 12, 13, 14, 16, 21, 38, 40, 45, 57, 58, 71, 74, 88, 94, 98, 107, 111, 124, 125], "ruopeng": 1, "forum": [1, 6, 79, 106], "routin": [1, 7, 12, 20, 21, 32, 39, 42, 56, 70, 71, 75, 78, 87, 88, 92, 109, 110, 112, 116, 119, 120], "give": [1, 6, 9, 10, 12, 19, 20, 21, 22, 25, 28, 32, 37, 38, 40, 41, 42, 43, 44, 45, 47, 51, 55, 58, 69, 71, 72, 74, 76, 78, 79, 81, 82, 84, 86, 88, 89, 92, 94, 96, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 119, 123, 124, 125, 127], "approxim": [1, 8, 31, 56, 105], "form": [1, 2, 3, 9, 12, 15, 20, 22, 28, 37, 40, 42, 53, 61, 64, 65, 79, 81, 86, 94, 105, 114, 120], "ra": [1, 3, 15, 56, 63, 64, 65, 70, 79, 94, 104, 110, 111, 112, 117, 120, 127], "lp": [1, 2, 111], "hash": [1, 7, 21, 75, 124], "infer": [1, 111, 123], "incorrect": [1, 38], "h": [1, 15, 42, 44, 94], "one": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 30, 32, 37, 40, 42, 45, 47, 54, 61, 63, 64, 65, 70, 71, 72, 74, 76, 79, 80, 81, 82, 86, 89, 91, 92, 94, 96, 101, 102, 104, 105, 107, 108, 110, 111, 119, 120, 123, 124, 125], "gracefulli": 1, "cote": 1, "level": [1, 4, 9, 10, 16, 30, 32, 43, 67, 74, 81, 98, 108, 125], "doe": [1, 2, 3, 6, 7, 8, 9, 10, 12, 16, 19, 20, 22, 28, 29, 32, 36, 37, 40, 41, 42, 57, 63, 64, 65, 67, 71, 72, 74, 78, 79, 80, 81, 82, 83, 86, 89, 92, 94, 104, 105, 106, 108, 109, 110, 112, 117, 120, 121, 124, 125], "pair": [1, 9, 10, 21, 40, 42, 64, 71, 76, 77, 79, 80, 82, 88, 89, 91, 92, 94, 96, 101, 102, 104, 105, 106, 111, 114, 119, 120, 124, 127], "leak": [1, 45], "rw": [1, 53, 67, 68, 71, 76, 79, 86, 89, 94, 101, 105, 111, 119], "spm": [1, 7, 9, 12, 13, 23, 27, 29, 30, 31, 34, 35, 36, 38, 40, 41, 59, 65, 71, 100, 104, 119], "swap": [1, 71, 73, 94, 104, 124, 125], "odd": [1, 37, 42, 104], "comparison": [1, 22, 33, 80], "lead": [1, 6, 7, 38, 40, 42, 114], "public": [1, 7, 21, 25, 28, 45, 120], "complet": [1, 4, 6, 9, 12, 21, 28, 30, 42, 43, 53, 64, 105, 111, 124], "rewrit": 1, "pure": [1, 15, 59], "It": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 21, 24, 30, 33, 36, 37, 38, 40, 42, 43, 44, 45, 50, 53, 54, 56, 57, 59, 61, 63, 64, 65, 67, 71, 73, 76, 78, 79, 80, 81, 82, 86, 88, 89, 94, 101, 102, 104, 105, 106, 108, 111, 117, 118, 119, 120, 123, 124, 125], "design": [1, 6, 23, 25, 27, 30, 43, 60, 73, 76], "simpler": [1, 2, 42, 105], "easier": [1, 3, 10, 14, 30, 45, 82, 124], "fairli": [1, 8, 10, 21, 32, 104], "matlab": [1, 9, 12, 18, 32, 36, 42, 78, 94, 119], "mat": [1, 9, 13, 32, 34, 114, 119], "basic": [1, 20, 53, 59, 60, 71, 86, 92, 118, 119, 126], "simpl": [1, 3, 8, 9, 11, 18, 19, 21, 22, 25, 32, 54, 65, 70, 77, 79, 81, 104, 105, 117], "pleas": [1, 4, 5, 6, 8, 19, 24, 28, 43, 47, 54, 58, 59, 69, 83, 100, 102, 105, 107, 110, 121], "let": [1, 2, 7, 8, 9, 12, 14, 21, 22, 37, 38, 40, 45, 53, 56, 57, 60, 65, 88, 92, 104, 111], "know": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 19, 21, 22, 29, 31, 32, 37, 38, 40, 43, 45, 56, 57, 63, 65, 78, 82, 89, 104, 105, 107, 111, 116, 117, 120], "highli": [1, 6, 9, 88], "experiment": [1, 18], "ian": [1, 58], "nimmo": [1, 58], "smith": [1, 58], "closest": [1, 2, 87, 95, 104, 105, 110, 114], "conon": 1, "right": [1, 2, 11, 12, 15, 18, 28, 38, 40, 42, 44, 45, 53, 56, 61, 63, 70, 71, 79, 88, 104, 111, 120, 124], "back": [1, 2, 4, 8, 9, 10, 14, 18, 28, 29, 31, 36, 37, 42, 45, 54, 57, 62, 64, 89, 104, 105, 110, 117, 120, 124], "front": [1, 2, 18, 40, 110], "third": [1, 2, 9, 32, 38, 40, 56, 63, 79, 111, 124], "down": [1, 2, 8, 9, 40, 45, 46, 57, 64, 71, 92, 115, 117, 123], "taylor": 1, "stephen": 1, "util": [1, 12, 60, 68, 70, 75, 78, 81, 92, 93, 94, 100, 103, 107, 110, 111, 115, 123, 124], "rip": 1, "edit": [1, 9, 28, 44, 48, 51, 54], "huge": [1, 7], "downward": 1, "step": [1, 14, 15, 16, 28, 32, 33, 37, 42, 46, 64, 70, 79, 92], "qualiti": 1, "mostli": [1, 107], "good": [1, 3, 4, 6, 10, 15, 28, 44, 45, 49, 51, 53, 61, 124], "haven": [1, 7, 60, 102], "even": [1, 6, 8, 19, 28, 31, 37, 42, 43, 45, 54, 61, 71, 80, 92, 118, 119, 124, 125], "soon": [1, 21], "modif": [1, 57, 61, 74, 108], "done": [1, 4, 6, 11, 14, 24, 29, 36, 45, 50, 54, 59, 65, 80, 105, 107, 110, 117, 125], "indic": [1, 2, 6, 9, 15, 37, 40, 42, 72, 79, 92, 94, 96, 104, 105, 111, 117, 119, 120, 123], "close": [1, 3, 9, 27, 28, 45, 53, 56, 68, 88, 95, 104, 108, 114, 123], "statement": [1, 37, 41, 58, 104, 121], "id": [1, 22, 37, 86, 94], "queri": [1, 9, 22], "visit": [1, 37], "niftiformat": 1, "vx2": 1, "unfortun": [1, 2, 12, 86], "interact": [1, 25, 45, 117], "between": [1, 7, 9, 10, 11, 12, 14, 15, 19, 20, 25, 31, 32, 35, 37, 40, 41, 42, 63, 64, 70, 71, 73, 76, 78, 79, 80, 86, 89, 92, 94, 96, 101, 102, 104, 105, 106, 111, 117, 118, 119, 120, 123, 127], "garbag": 1, "librari": [1, 6, 9, 12, 16, 18, 19, 25, 28, 30, 43, 59, 64, 78, 121, 124], "dictionari": [1, 9, 10, 11, 32, 64, 76, 79, 81, 86, 89, 96, 104, 111, 117, 120, 124, 127], "bogu": 1, "assign": [1, 6, 37, 79, 104, 120], "niftiimag": 1, "517920": 1, "length": [1, 2, 4, 9, 12, 18, 41, 63, 65, 70, 72, 79, 92, 93, 94, 95, 103, 104, 110, 111, 112, 115, 116, 120, 124, 127], "short": [1, 6, 9, 16, 37, 42, 43, 47, 92], "edata": 1, "whose": [1, 15, 30, 96], "aim": [1, 80, 111], "stabil": [1, 6], "result": [1, 2, 7, 10, 13, 14, 15, 18, 20, 21, 24, 29, 35, 38, 40, 42, 57, 61, 63, 65, 69, 70, 71, 72, 74, 76, 78, 79, 81, 82, 86, 92, 94, 95, 96, 98, 101, 102, 104, 110, 115, 119, 120, 124, 125], "standard": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 28, 30, 34, 35, 38, 39, 40, 42, 57, 60, 67, 78, 79, 83, 86, 89, 91, 96, 104, 105, 107, 117, 119, 120, 121, 122, 124, 125, 127], "whole": [1, 7, 8, 9, 11, 12, 37, 40, 41, 57, 88, 92, 101, 102], "restructur": [1, 24, 115], "clib": 1, "redirect": 1, "sure": [1, 2, 4, 6, 7, 9, 13, 28, 29, 44, 45, 82, 86, 100, 120, 124], "break": [1, 2, 16, 24, 41, 42, 79, 96, 104, 107, 121], "thei": [1, 2, 3, 4, 6, 7, 9, 10, 12, 16, 19, 20, 21, 24, 25, 28, 29, 30, 37, 38, 40, 45, 55, 63, 65, 67, 71, 73, 74, 79, 80, 81, 82, 88, 96, 104, 107, 111, 114, 117, 120, 124, 125], "emb": 1, "serializ": 1, "automat": [1, 4, 10, 19, 53, 65, 79, 94, 105], "expand": [1, 6, 9, 30, 51, 70, 71, 92, 105, 106], "upon": [1, 121], "meta": [1, 6, 15, 18, 22, 37, 58, 68, 69, 79, 86, 89, 96, 104, 117], "dump": [1, 9, 10, 37, 41], "embed": [1, 43, 70, 116], "secur": [1, 21, 37], "implic": [1, 24], "becaus": [1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 28, 30, 31, 33, 35, 36, 37, 38, 40, 42, 45, 53, 56, 57, 59, 63, 64, 65, 70, 71, 76, 78, 79, 81, 82, 88, 92, 96, 100, 104, 105, 114, 119, 120, 124, 125], "actual": [1, 2, 6, 7, 8, 10, 11, 21, 32, 37, 38, 44, 45, 57, 79, 80, 82, 92, 104, 120, 124], "execut": [1, 19, 107], "risk": 1, "niftiextens": [1, 105], "handler": 1, "memmappedniftiimag": 1, "root": [1, 4, 20, 28, 81, 91, 104], "cropimag": 1, "old": [1, 9, 94], "vx2q": 1, "defin": [1, 2, 3, 9, 10, 11, 15, 18, 20, 21, 22, 33, 34, 35, 37, 38, 42, 63, 65, 70, 71, 72, 78, 79, 81, 82, 88, 89, 90, 91, 93, 94, 96, 97, 104, 105, 108, 111, 113, 116, 120, 124, 126], "cal_min": [1, 64, 65, 71, 105, 106, 118, 119], "cal_max": [1, 64, 65, 71, 105, 106, 118, 119], "remain": [1, 6, 41, 42, 45, 74, 79, 104, 120], "modifi": [1, 6, 8, 19, 23, 27, 37, 41, 43, 45, 57, 61, 71, 72, 74, 82, 92, 95, 100, 120, 124], "xyzt_unit": [1, 12, 43, 64, 65, 105, 106], "xyz_unit": 1, "time_unit": 1, "former": [1, 25], "see": [1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 18, 19, 20, 21, 22, 24, 25, 28, 30, 32, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 49, 50, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 72, 73, 76, 78, 79, 82, 84, 86, 88, 92, 94, 95, 96, 98, 101, 104, 105, 106, 110, 111, 112, 114, 120, 124, 125], "getxyzunit": 1, "setxyzunit": 1, "gettimeunit": 1, "settimeunit": 1, "manuipul": 1, "getqformcod": 1, "setqformcod": 1, "getsformcod": 1, "setsformcod": 1, "qform_cod": [1, 64, 65, 105, 106], "sform_cod": [1, 64, 65, 105, 106], "readabl": [1, 9, 19, 42, 45, 74, 89, 104], "its": [1, 2, 6, 9, 10, 11, 13, 16, 25, 28, 29, 30, 37, 38, 40, 43, 57, 61, 70, 72, 82, 84, 89, 94, 96, 105, 117, 120, 121, 124], "__str__": [1, 125], "pickl": 1, "switch": [1, 14, 45, 54], "procedur": [1, 6, 37, 58, 60], "optim": [1, 8, 15, 24, 29, 32, 92], "swig": [1, 36], "introduc": [1, 127], "__version__": [1, 109], "canon": [1, 3, 15, 56, 79, 92, 95, 105, 124], "updateqformfromquarternion": 1, "intern": [1, 7, 14, 23, 43, 57, 82, 94, 120, 125], "howev": [1, 6, 10, 21, 31, 38, 45, 61, 64, 65, 79, 100, 105, 117], "getscaleddata": 1, "unmodifi": [1, 3, 54, 95, 124], "unicod": [1, 79], "properli": [1, 9, 61], "charact": [1, 37, 41, 42, 79, 96, 115], "ga\u00ebl": [1, 58], "minim": [1, 9, 31, 74, 117], "nifticlib": 1, "makefil": [1, 28], "posix": [1, 87], "local": [1, 2, 4, 20, 21, 28, 45, 52, 55, 81], "built": [1, 28, 65, 92, 108], "On": [1, 2, 7, 12, 20, 45, 59, 67, 87, 104], "still": [1, 2, 6, 7, 9, 12, 25, 28, 29, 37, 41, 42, 45, 64, 65, 67, 71, 78, 112, 121], "proper": [1, 24, 28], "guarante": [1, 15, 72, 125], "setup_egg": 1, "wrap": [1, 10, 36, 101, 102, 104, 112, 124, 125], "accident": [1, 4, 55], "e": [1, 6, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 24, 28, 31, 37, 40, 42, 43, 45, 51, 59, 65, 74, 76, 79, 80, 83, 89, 91, 94, 98, 103, 104, 105, 111, 120, 124], "g": [1, 6, 9, 10, 12, 15, 16, 18, 19, 20, 21, 24, 28, 37, 40, 42, 43, 45, 51, 65, 74, 76, 79, 83, 88, 89, 91, 94, 98, 103, 104, 105, 111, 120, 124], "pointer": [1, 7, 35, 42, 54, 126], "honor": 1, "sync": 1, "flush": 1, "again": [1, 6, 8, 21, 34, 37, 38, 44, 45, 56, 64, 65, 82, 107, 117, 121], "circular": [1, 107], "destructor": 1, "merg": [1, 6, 9, 17, 25, 27, 28, 30, 48, 51, 53, 55, 61], "bashism": 1, "patch": [1, 6, 9, 15, 19, 24, 52, 53, 81], "docstr": [1, 3, 19, 24, 57, 71, 104, 110, 124], "profil": [1, 37], "epydoc": 1, "pylint": [1, 24], "consist": [1, 6, 11, 15, 19, 25, 29, 37, 38, 68, 77, 79, 80, 86, 89, 94, 96, 104, 114], "q": [1, 2, 9, 38, 70, 88, 104, 110, 111, 114], "setfilenam": 1, "benjamin": [1, 58], "thyreau": 1, "setpixdim": 1, "store": [1, 2, 4, 7, 9, 10, 12, 14, 15, 18, 20, 21, 22, 29, 30, 31, 37, 38, 39, 41, 43, 63, 64, 65, 71, 76, 79, 82, 86, 89, 94, 96, 101, 102, 104, 105, 106, 111, 117, 118, 119, 120, 124], "meaningless": 1, "pyarray_fromdimsanddata": 1, "uncompress": [1, 21, 108], "compil": [1, 10, 28, 37, 78, 104], "under": [1, 4, 20, 58, 61, 69, 111], "mingw": [1, 78], "just": [1, 6, 7, 8, 10, 16, 21, 22, 28, 29, 32, 37, 39, 40, 41, 42, 45, 46, 47, 50, 53, 54, 55, 59, 64, 70, 71, 86, 89, 95, 104, 105, 116, 117, 118, 119, 124], "libniftiio": 1, "znzlib": 1, "those": [1, 9, 10, 13, 21, 22, 28, 35, 37, 39, 42, 43, 45, 51, 53, 58, 65, 70, 80, 82, 89, 95, 104, 105, 106, 107, 120], "relicens": 1, "mit": [1, 58, 61, 69], "licens": [1, 3, 27, 33, 36, 59, 62, 68, 86, 88], "www": [1, 9, 18, 21, 33, 36, 40, 79, 81, 88, 94, 96, 106, 120], "opensourc": 1, "php": [1, 79, 106], "442175": 1, "unload": 1, "damag": [1, 61], "integr": [1, 10, 30, 48, 71, 78, 105], "recov": [1, 31, 40], "pixdim": [1, 12, 64, 65, 71, 74, 86, 105, 106, 118, 119], "vanish": 1, "dim": [1, 12, 32, 42, 64, 65, 71, 79, 94, 104, 105, 106, 117, 118, 119], "vector": [1, 2, 9, 15, 18, 32, 38, 39, 40, 42, 70, 79, 88, 94, 104, 105, 106, 111, 112, 114, 119, 124], "element": [1, 10, 12, 13, 21, 30, 32, 35, 40, 42, 43, 70, 74, 77, 79, 82, 88, 91, 92, 94, 96, 104, 110, 111, 112, 114, 116, 120, 124, 127], "applic": [1, 7, 9, 31, 37, 70, 79, 80, 96, 100], "anymor": 1, "toward": [1, 2, 8, 17, 27, 40, 56, 63, 71, 78, 79, 112], "unittest": 1, "suit": [1, 11, 23, 27, 59, 60, 111, 120], "pynifti_pst": 1, "peristimulu": 1, "signal": [1, 12, 45, 54, 86, 104, 105, 112, 119, 124], "onset": 1, "getperistimulustimeseri": 1, "comput": [1, 37, 44, 55, 80, 88, 99, 105, 107, 111, 114, 120], "mean": [1, 2, 4, 6, 7, 8, 9, 12, 21, 25, 28, 30, 37, 38, 40, 42, 45, 55, 56, 57, 63, 64, 65, 67, 71, 78, 79, 80, 82, 88, 92, 94, 98, 100, 102, 105, 110, 112, 113, 116, 117, 124, 125], "varianc": 1, "among": [1, 15, 19, 25, 30, 78, 80], "timeseri": [1, 79], "deviat": [1, 111], "descript": [1, 3, 9, 18, 37, 40, 45, 76, 77, 79, 83, 88, 95, 96, 104, 105], "present": [1, 9, 15, 21, 30, 37, 42, 71, 73, 74, 78, 90, 104, 105, 108, 125], "note": [1, 3, 5, 8, 9, 14, 16, 18, 19, 20, 22, 28, 32, 33, 37, 39, 42, 44, 45, 53, 54, 55, 58, 64, 65, 68, 69, 78, 79, 80, 81, 82, 83, 86, 88, 92, 94, 96, 100, 104, 105, 106, 110, 111, 114, 117, 120, 121, 124, 125], "relev": [1, 6, 9, 10, 16, 18, 28, 36, 37, 41, 42, 58, 71, 87, 100, 101, 102, 108], "accessor": [1, 107], "repetit": [1, 9, 88, 94, 117], "dt": [1, 32, 37, 74, 124], "determin": [1, 38, 43, 76, 104, 105, 111, 114, 123], "bound": [1, 2, 92, 105], "box": [1, 2, 66, 104], "corrupt": [1, 21], "ioerror": 1, "filetyp": 1, "revers": [1, 2, 8, 28, 31, 38, 56, 110, 124], "seem": [1, 7, 9, 12, 13, 37, 40, 41, 42, 78, 92, 96, 104, 111, 120], "often": [1, 3, 6, 12, 13, 14, 19, 22, 28, 29, 30, 32, 37, 45, 57, 100, 125], "sourc": [1, 4, 6, 9, 10, 15, 20, 27, 28, 29, 33, 36, 58, 61, 62, 71, 81, 86], "tarbal": [1, 20, 28, 59], "readm": [1, 4, 20, 28, 33, 45, 76], "html": [1, 6, 7, 8, 9, 18, 24, 28, 40, 76, 81, 83, 88, 107, 114, 120], "upload": [1, 20, 28], "archiv": [1, 6, 9, 21, 24, 28, 36, 58, 60, 61, 81], "413049": 1, "extent": [1, 64, 65, 70, 71, 105, 118, 119], "volext": 1, "timepoint": [1, 79], "niftifil": 1, "fulfil": 1, "wish": [1, 13, 37, 65], "libfslio": 1, "seven": [1, 105], "dimension": [1, 9, 12, 15, 42, 70, 79, 80, 94, 95, 105, 114, 123], "dataset": [1, 10, 12, 32, 37, 39, 42, 57, 76, 79, 104, 105, 111, 118], "go": [1, 2, 3, 6, 7, 8, 9, 20, 21, 24, 28, 32, 37, 40, 42, 44, 45, 47, 53, 54, 55, 59, 63, 64, 72, 78, 79, 80, 82, 92, 104, 115], "three": [2, 6, 7, 9, 11, 12, 14, 15, 21, 28, 30, 37, 40, 42, 45, 64, 65, 79, 88, 96, 105, 112, 117, 120, 124], "thing": [2, 6, 7, 8, 14, 21, 30, 48, 51, 54, 64, 67, 74, 78, 80, 104, 109, 121, 124], "3d": [2, 9, 12, 18, 32, 34, 38, 42, 63, 70, 71, 76, 79, 86, 88, 95, 104, 105, 116, 117, 123], "4d": [2, 9, 12, 18, 32, 33, 86, 95, 104, 117, 123], "tell": [2, 6, 12, 22, 29, 33, 37, 40, 44, 54, 55, 56, 68, 72, 88, 104, 108, 111, 120, 124], "usual": [2, 3, 10, 12, 20, 28, 36, 37, 38, 45, 57, 64, 70, 79, 82, 89, 104, 109, 110, 111, 112, 117, 119], "how": [2, 7, 8, 9, 10, 11, 13, 16, 20, 21, 22, 25, 27, 29, 30, 37, 38, 42, 51, 53, 54, 59, 63, 65, 72, 76, 79, 82, 86, 107, 111, 120, 123, 126], "what": [2, 4, 7, 9, 10, 11, 16, 19, 20, 21, 24, 31, 37, 38, 40, 42, 45, 55, 56, 58, 59, 63, 64, 65, 71, 74, 76, 79, 80, 82, 86, 92, 94, 98, 100, 104, 109, 112, 113, 116, 121, 125], "scan": [2, 4, 9, 18, 21, 33, 64, 65, 111], "two": [2, 4, 6, 7, 9, 12, 20, 21, 22, 28, 30, 33, 37, 38, 40, 41, 42, 56, 65, 67, 76, 79, 82, 96, 104, 105, 111, 114, 115, 123, 124, 125], "mri": [2, 10, 12, 18, 63, 103, 105, 111], "brain": [2, 12, 15, 30, 61, 63, 71, 79, 94, 112], "epi": [2, 111], "In": [2, 3, 6, 7, 8, 9, 10, 12, 15, 20, 21, 22, 25, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 48, 52, 56, 57, 61, 63, 64, 65, 67, 71, 76, 78, 79, 82, 86, 88, 89, 92, 94, 95, 96, 100, 101, 102, 104, 105, 106, 110, 111, 113, 114, 117, 118, 119, 120, 124, 125], "never": [2, 3, 6, 105], "person": [2, 4, 19, 21, 37, 44, 61], "someones_epi": 2, "gz": [2, 20, 43, 56, 57, 60, 61, 63, 64, 65, 69, 75, 76, 82, 91, 108], "someones_anatomi": [2, 63], "epi_img": 2, "download": [2, 20, 21, 33, 49, 59, 60, 63, 69, 96], "epi_img_data": 2, "53": [2, 32, 64, 111], "61": [2, 9, 45], "33": [2, 9, 28, 76], "Then": [2, 7, 14, 21, 28, 33, 38, 40, 41, 42, 43, 45, 54, 55, 59, 60, 88], "pyplot": [2, 63], "plt": [2, 38, 63, 117, 123], "def": [2, 3, 4, 8, 11, 14, 15, 73, 74, 107, 124], "show_slic": 2, "fig": [2, 68, 123], "subplot": 2, "1": [2, 4, 6, 9, 10, 11, 12, 14, 20, 21, 22, 28, 31, 32, 33, 35, 37, 38, 40, 41, 42, 45, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 83, 84, 86, 88, 92, 93, 94, 95, 96, 98, 99, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 124, 125], "len": [2, 4, 9, 22, 70, 71, 92, 105, 106, 112, 124, 125], "enumer": [2, 79], "imshow": [2, 38, 63], "cmap": [2, 63, 68, 123], "grai": [2, 15, 63, 105], "slice_0": 2, "26": [2, 8, 9, 62, 64, 65, 111], "slice_1": 2, "30": [2, 9, 39, 59, 62, 65, 74, 95, 110, 111, 125], "slice_2": 2, "16": [2, 10, 15, 33, 37, 43, 61, 62, 64, 65, 70, 96, 104, 106, 111], "suptitl": 2, "center": [2, 35, 38, 40, 71, 79, 94, 100, 111, 119, 120, 124], "png": [2, 59, 63], "hire": [2, 63], "pdf": [2, 63, 88, 96, 104], "anatom": [2, 18, 29, 40, 76, 79], "session": 2, "anat_img": 2, "anat_img_data": 2, "57": [2, 64, 65], "67": 2, "56": [2, 65], "28": [2, 33, 62, 63, 65, 70], "As": [2, 3, 8, 9, 19, 21, 29, 36, 37, 57, 63, 64, 78, 98, 121], "magnet": [2, 37, 103], "y": [2, 9, 12, 18, 32, 40, 42, 57, 71, 79, 88, 94, 96, 104, 107, 111, 114, 117, 123], "pixel": [2, 12, 34, 35, 37, 38, 42, 103, 104, 111], "abov": [2, 4, 7, 8, 9, 12, 19, 20, 21, 22, 24, 25, 28, 32, 33, 37, 38, 40, 41, 42, 44, 45, 53, 60, 61, 63, 65, 78, 79, 81, 86, 88, 91, 92, 104, 107, 111, 112, 115, 116, 124], "2d": [2, 12, 38, 70, 88, 104, 115, 120], "plot": [2, 117, 123], "grayscal": [2, 37], "grade": 2, "black": 2, "white": [2, 15, 105], "repres": [2, 6, 9, 11, 15, 37, 45, 64, 70, 78, 79, 82, 84, 88, 92, 96, 104, 120, 124], "certain": [2, 24], "thick": [2, 35, 79, 94, 111, 115], "select": [2, 9, 12, 15, 28, 31, 36, 37, 45, 58, 59, 64, 69, 79, 82, 96, 104, 105, 116, 123], "For": [2, 3, 4, 7, 8, 9, 10, 12, 14, 15, 20, 21, 22, 24, 28, 29, 31, 32, 37, 38, 39, 40, 42, 43, 44, 45, 50, 53, 56, 57, 59, 60, 63, 64, 65, 69, 70, 71, 73, 74, 78, 79, 82, 84, 86, 89, 94, 95, 96, 104, 105, 107, 110, 111, 112, 114, 116, 117, 120, 121, 123, 124], "middl": [2, 40, 63, 92], "n_i": 2, "n_j": 2, "n_k": 2, "center_i": 2, "2": [2, 3, 6, 7, 9, 10, 11, 12, 14, 20, 21, 28, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 81, 83, 86, 88, 89, 92, 94, 95, 96, 100, 104, 105, 106, 107, 110, 111, 112, 114, 116, 117, 118, 119, 120, 124, 125], "divis": 2, "center_j": 2, "center_k": 2, "center_vox_valu": 2, "81": [2, 111], "5492877960205": 2, "rel": [2, 9, 10, 35, 36, 40, 44, 45, 63, 78, 80, 81, 104, 111], "0": [2, 4, 7, 8, 9, 10, 12, 14, 15, 17, 20, 21, 22, 25, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 45, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126], "goe": [2, 42, 56, 72], "52": [2, 65, 76], "similarli": [2, 7, 19, 40, 63, 79, 88, 96, 108], "60": [2, 9, 39], "32": [2, 9, 10, 12, 32, 37, 38, 40, 42, 43, 56, 64, 65, 79, 86, 96, 106], "almost": [2, 63, 105], "noth": [2, 7, 22, 29, 74], "came": [2, 21, 33], "term": [2, 4, 6, 9, 10, 12, 14, 15, 19, 32, 35, 37, 40, 42, 58, 63, 69, 70, 78, 86, 92, 110, 111, 124], "sai": [2, 6, 7, 9, 10, 12, 14, 20, 21, 28, 31, 37, 38, 40, 42, 45, 53, 56, 57, 60, 65, 92], "idea": [2, 3, 6, 9, 19, 23, 28, 43, 63, 67, 86], "arbitrari": [2, 9, 55, 65, 80, 88, 104, 114], "within": [2, 6, 9, 21, 24, 36, 37, 41, 61, 71, 73, 78, 79, 88, 92, 96, 104], "took": [2, 56], "transvers": [2, 111], "moder": 2, "angl": [2, 70, 88, 114], "floor": [2, 78], "ceil": [2, 38, 78, 104], "consol": [2, 111], "red": [2, 79, 96], "block": [2, 37, 38, 64, 71, 79, 86, 92, 94, 104, 105, 106, 118, 119, 121, 123, 124, 125], "border": 2, "parallel": [2, 29], "quit": [2, 11, 37, 45], "isocent": [2, 63, 111], "later": [2, 3, 6, 9, 37, 40, 58, 64, 67, 69, 89, 92, 107], "want": [2, 3, 4, 8, 9, 10, 12, 13, 14, 20, 21, 22, 28, 29, 30, 32, 37, 38, 40, 41, 42, 44, 46, 48, 54, 55, 56, 57, 58, 59, 60, 64, 65, 76, 79, 82, 83, 92, 100, 107, 111, 117, 121, 124, 125], "relat": [2, 3, 6, 9, 10, 11, 15, 20, 21, 24, 25, 28, 37, 45, 53, 58, 64, 65, 79, 94, 96, 103, 104, 105, 111, 114, 116], "easili": [2, 4, 10, 11, 15, 24, 25, 43, 79, 96], "moment": [2, 7, 8, 10, 12, 13, 14, 20, 21, 22, 28, 60, 96], "locat": [2, 15, 20, 21, 22, 24, 30, 35, 40, 58, 64, 70, 71, 81, 86, 87, 94, 96, 117, 120], "solv": [2, 8, 10, 16, 21, 59], "relationship": [2, 8, 10, 21, 37, 63, 71, 76, 86, 94, 101, 102, 105, 106, 111, 117, 118, 119], "spatial": [2, 9, 10, 12, 63, 79, 94, 97, 105, 112, 116, 117, 123], "equival": [2, 8, 20, 21, 30, 32, 37, 63, 64, 65, 70, 74, 78, 87, 89, 92, 94, 96, 99, 104, 108, 110, 111, 114, 117, 124], "phrase": 2, "our": [2, 3, 4, 9, 12, 14, 19, 21, 22, 24, 25, 28, 29, 30, 31, 32, 36, 40, 41, 50, 53, 55, 56, 59, 64, 65, 71, 79, 86, 88, 89, 92, 105, 107, 116, 117, 123], "world": [2, 3, 21, 31, 32, 43, 56, 64, 65, 70, 71, 76, 86, 94, 101, 102, 104, 105, 106, 111, 112, 117, 118, 119, 120, 127], "3": [2, 7, 8, 9, 11, 12, 14, 15, 20, 21, 32, 33, 35, 37, 38, 40, 41, 42, 44, 57, 59, 61, 62, 63, 64, 65, 67, 70, 71, 74, 75, 76, 79, 81, 82, 83, 86, 88, 89, 94, 96, 100, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125], "independ": [2, 15, 43, 76, 79, 89, 111, 117], "decid": [2, 6, 7, 8, 21, 25, 92], "choos": [2, 8, 13, 45, 62, 64], "orthogon": [2, 38, 40, 105, 123], "millimet": [2, 38, 64, 79, 112], "imagin": [2, 21, 29, 40, 63, 104, 110, 116], "observ": 2, "stand": [2, 6, 125], "behind": [2, 19, 29, 51, 63], "bed": [2, 40], "travel": [2, 6], "closer": [2, 7], "draw": [2, 68, 123], "definit": [2, 3, 9, 10, 11, 12, 18, 21, 35, 42, 63, 79, 92, 101, 102, 104, 105, 108, 111, 127], "z": [2, 12, 18, 32, 34, 38, 42, 70, 71, 79, 88, 94, 96, 104, 105, 111, 114, 117, 123], "5": [2, 8, 9, 11, 12, 28, 32, 33, 37, 42, 59, 62, 63, 64, 65, 70, 71, 72, 76, 78, 79, 82, 88, 89, 94, 95, 99, 100, 104, 105, 107, 110, 112, 113, 115, 118, 119, 120, 121, 123, 124], "10mm": 2, "fiction": 2, "5mm": 2, "3mm": 2, "foot": [2, 40, 111], "known": [2, 10, 20, 22, 29, 37, 43, 65, 71, 79, 88, 94, 97, 105, 120, 124, 125], "xyz": [2, 18, 40, 79, 88, 105, 114], "predecessor": 2, "acr": 2, "nema": [2, 9, 104], "face": [2, 3, 15, 94], "posterior": [2, 12, 18, 40, 56, 63, 71, 96, 111], "anterior": [2, 12, 18, 56, 63, 79, 96, 111], "inferior": [2, 12, 18, 56, 71, 96, 111], "superior": [2, 12, 18, 56, 79, 111], "mai": [2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 19, 20, 21, 22, 24, 25, 28, 29, 30, 37, 38, 39, 40, 42, 44, 45, 46, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 87, 89, 91, 94, 95, 96, 105, 107, 108, 110, 111, 114, 117, 120, 121, 124, 125], "might": [2, 3, 4, 7, 8, 9, 10, 12, 13, 20, 21, 22, 24, 28, 29, 37, 40, 44, 48, 57, 60, 67, 71, 72, 74, 76, 78, 82, 89, 90, 92, 94, 104, 105, 110, 112, 116, 117, 120, 121, 124], "prefer": [2, 4, 6, 7, 8, 9, 15, 19, 40, 45, 57, 58, 65, 78, 82, 92, 96, 100, 111], "deal": [2, 10, 12, 13, 61, 72, 78, 88, 115, 124], "patient": [2, 34, 35, 37, 38, 42, 61, 63, 86, 104], "come": [2, 9, 18, 21, 25, 43, 45, 51, 54, 65, 72, 86, 88, 92, 105, 116, 120, 125], "reorder": [2, 9, 12, 56, 92, 95, 111], "although": [2, 80, 101, 102, 114], "convent": [2, 3, 9, 24, 56, 88, 96, 104, 120, 127], "univers": [2, 61], "word": [2, 7, 37, 44, 45, 92], "lpi": [2, 33], "ll": [2, 3, 4, 7, 8, 9, 21, 22, 35, 37, 39, 40, 41, 42, 44, 45, 53, 55, 124], "interpret": [2, 63, 65, 79, 92, 105, 112, 125], "peopl": [2, 4, 6, 14, 43, 53, 58, 63, 71], "hand": [2, 7, 8, 12, 28, 40, 63, 88], "side": [2, 6, 19, 40, 57, 63, 71, 88], "carefulli": 2, "familiar": [2, 7, 19], "folk": 2, "agre": [2, 4, 25, 111], "friend": [2, 59], "enemi": 2, "yet": [2, 7, 14, 21, 28, 33, 36, 60, 64, 82, 83, 104, 111], "made": [2, 6, 7, 19, 21, 25, 37, 44, 45, 53, 54, 58, 60, 69, 71, 117, 118, 119], "k": [2, 6, 12, 33, 40, 63, 79, 88, 104, 114, 116, 120, 124, 125], "theori": [2, 61, 104], "complic": [2, 9, 36, 37, 45, 64, 70, 78, 100, 111, 121], "linear": [2, 45, 61, 70, 120], "practic": [2, 6, 7, 12, 15, 28, 32, 44, 63, 107, 124], "regular": [2, 6, 64, 65, 71, 105, 107, 108, 118, 119], "grid": [2, 15, 38], "compris": [2, 16, 37, 104], "translat": [2, 9, 10, 15, 38, 40, 64, 70, 71, 79, 105, 111, 119, 124], "wikipedia": [2, 40, 78, 88, 114], "diagon": [2, 63, 70, 71, 95, 112, 116], "p": [2, 12, 31, 32, 37, 45, 53, 58, 70, 71, 110, 111], "bmatrix": [2, 38, 40], "theta": [2, 88, 114], "radian": [2, 12, 70, 79, 88], "co": [2, 6, 28, 44, 88], "sin": [2, 88, 123], "phi": [2, 10], "gamma": [2, 88], "obviou": [2, 7, 9, 20, 21, 22, 40, 56, 88], "turn": [2, 6, 7, 9, 38, 45, 79], "abcd": 2, "abc": [2, 79, 120], "b": [2, 7, 9, 15, 28, 31, 37, 40, 42, 45, 61, 64, 65, 70, 77, 79, 88, 92, 104, 105, 106, 110, 111, 113, 120, 123, 124], "addit": [2, 6, 9, 10, 24, 25, 30, 40, 58, 100, 117, 120, 124], "fact": [2, 3, 4, 6, 7, 8, 9, 12, 22, 32, 33, 37, 63, 64, 65, 79, 86, 88, 89, 117], "4": [2, 3, 7, 9, 10, 11, 12, 20, 21, 28, 32, 37, 38, 40, 41, 42, 43, 56, 57, 59, 62, 63, 64, 65, 67, 70, 71, 74, 76, 78, 79, 83, 86, 88, 89, 94, 95, 96, 97, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 114, 116, 117, 118, 119, 120, 123, 124], "exactli": [2, 8, 22, 31, 37, 64, 78, 79, 124], "m_": [2, 40], "why": [2, 9, 16, 20, 45, 54, 64, 78], "extra": [2, 3, 4, 9, 10, 20, 69, 71, 76, 79, 82, 86, 89, 94, 96, 101, 102, 104, 105, 106, 108, 111, 112, 117, 118, 119], "rephras": [2, 40, 92], "homogen": [2, 70, 71, 76, 79, 86, 94, 101, 102, 105, 106, 111, 112, 116, 117, 118, 119], "trick": [2, 12, 124], "put": [2, 3, 4, 9, 10, 11, 18, 24, 36, 42, 63, 98, 104, 120], "part": [2, 6, 10, 11, 12, 19, 21, 28, 33, 37, 42, 63, 67, 70, 71, 72, 78, 79, 86, 88, 104, 105, 107, 111, 112, 114, 116], "separ": [2, 6, 9, 10, 11, 13, 20, 23, 29, 32, 37, 38, 42, 45, 63, 64, 79, 81, 82, 89, 105, 111, 119], "One": [2, 4, 9, 10, 11, 12, 13, 21, 29, 71, 79, 86], "compon": [2, 15, 38, 40, 60, 70, 79, 104, 105], "mathemat": [2, 15, 120], "inconveni": 2, "anoth": [2, 7, 9, 10, 11, 16, 18, 21, 22, 28, 29, 37, 40, 42, 44, 64, 71, 89, 92, 94, 104, 105, 111, 116, 120], "pleasant": [2, 9], "invert": [2, 110], "ident": [2, 4, 29, 31, 42, 43, 56, 64, 79, 105, 112, 114, 116, 117, 123], "That": [2, 7, 8, 10, 14, 21, 32, 37, 40, 71, 110, 120, 124], "decim": [2, 15, 37, 56, 64, 65], "set_printopt": [2, 56, 64, 65], "78": [2, 9, 63], "76": 2, "split": [2, 4, 6, 9, 10, 13, 15, 67, 70, 78, 81, 86, 91], "dot": [2, 10, 38, 42, 70, 88, 114, 116], "impress": 2, "epi_vox_cent": 2, "205": [2, 41], "8": [2, 6, 9, 10, 12, 35, 37, 41, 42, 59, 62, 63, 64, 65, 70, 71, 74, 78, 79, 96, 105, 106, 111, 112, 118, 119, 126], "453": 2, "2mm": [2, 20], "multipli": [2, 9, 40, 65, 79, 100, 114], "linalg": [2, 116], "npl": 2, "epi_vox2anat_vox": 2, "inv": [2, 32, 116], "364": 2, "31": [2, 9, 12, 28, 38, 40, 42, 62, 86], "562": 2, "36": [2, 9, 56, 64, 65, 70, 104, 111], "165": 2, "anat_vox_cent": 2, "27": [2, 28, 62], "nearli": [2, 7, 8, 19, 37, 78, 95, 114], "half": [2, 120], "across": [2, 9, 10, 12, 21, 28, 30, 32, 37, 86, 95, 111, 112], "9": [2, 8, 9, 12, 21, 33, 37, 42, 62, 64, 65, 70, 78, 108], "ey": [2, 7, 32, 43, 56, 64, 65, 68, 70, 79, 83, 88, 89, 95, 99, 105, 117], "sens": [2, 6, 7, 9, 12, 13, 15, 16, 22, 29, 63, 73, 78, 92], "think": [2, 4, 6, 7, 8, 21, 32, 38, 40, 45, 54, 63, 78, 86], "shown": [2, 25, 37, 83], "onto": [2, 21, 32, 45, 82], "equat": 2, "next": [2, 6, 7, 28, 33, 37, 40, 41, 42, 57, 63, 64, 65, 71, 78, 82, 86, 107, 120], "green": [2, 79, 96], "scaling_affin": 2, "after": [2, 6, 7, 10, 11, 14, 19, 20, 24, 25, 28, 37, 41, 42, 45, 47, 65, 71, 74, 79, 82, 83, 92, 93, 94, 96, 104, 105, 106, 107, 120, 124], "one_vox_axis_0": 2, "cos_gamma": 2, "sin_gamma": 2, "rotation_affin": 2, "affine_so_far": 2, "yellow": [2, 44], "figur": [2, 37, 43, 80, 117, 123], "bottom": [2, 18, 40, 63, 105], "translation_affin": 2, "whole_affin": 2, "bring": [2, 19, 45, 120], "fanci": [2, 45, 92], "softwar": [2, 9, 12, 20, 21, 36, 37, 39, 58, 61, 63], "regist": [2, 9, 21, 28], "templat": [2, 20, 21, 25, 60, 61, 82, 89, 91, 117], "montreal": [2, 61], "neurolog": [2, 61, 71, 86, 127], "institut": [2, 61], "mni": [2, 61, 65, 76], "registr": [2, 30, 32, 37], "chang": [2, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 24, 25, 28, 30, 32, 40, 42, 44, 46, 48, 54, 55, 57, 58, 62, 64, 65, 71, 72, 76, 78, 79, 83, 89, 92, 105, 106, 107, 108, 111, 117, 120, 121, 123, 124, 125], "probabl": [2, 8, 9, 12, 14, 21, 22, 54, 63, 74, 100, 104, 111, 119, 124], "commissur": [2, 96], "cross": [2, 38, 40, 42, 66, 115], "midlin": 2, "ac": [2, 9, 15], "hemispher": [2, 15, 79], "exact": [2, 4, 37, 78], "somewhat": [2, 9, 35, 42], "There": [2, 3, 4, 6, 9, 10, 11, 18, 20, 21, 22, 24, 30, 32, 33, 36, 37, 38, 41, 42, 43, 45, 49, 50, 51, 58, 60, 64, 65, 68, 69, 76, 78, 79, 82, 86, 88, 89, 104, 111], "talairach": [2, 18, 65, 96, 105], "atla": [2, 65], "pc": [2, 78], "trajectori": 2, "regardless": [2, 6, 18, 19, 32, 82, 113], "underli": [2, 7, 8, 12, 14, 92, 95, 104, 112, 124, 125], "chose": [2, 3, 9, 65], "popular": [2, 33, 59], "enforc": [2, 4, 44, 80, 96, 105], "consult": [2, 19], "radiolog": [2, 71, 86, 124, 127], "progress": [3, 6, 16, 23, 25, 45, 54], "transpar": [3, 8, 79, 94], "zen": 3, "gui": [3, 33, 36, 60], "spring": 3, "mind": 3, "implicit": [3, 7, 37, 78], "silent": [3, 14, 79, 96, 105, 126], "ambigu": [3, 88], "refus": 3, "temptat": 3, "guess": [3, 67, 71, 81, 86, 87, 89, 91, 92, 100, 105, 118, 119, 120, 125], "hard": [3, 11, 21, 45, 92], "explain": [3, 16, 19, 21, 42, 45, 51, 54, 74, 124], "bad": [3, 6, 28, 74, 85], "tri": [3, 9, 25, 42, 43, 109], "fastest": [3, 8, 9, 12, 18, 71, 78, 105, 108], "vari": [3, 9, 36, 111, 120], "rest": [3, 9, 42, 45, 53, 111, 115], "learn": [3, 15, 19, 50, 51], "realli": [3, 4, 9, 59, 105, 114], "top": [3, 4, 9, 10, 18, 38, 40, 45, 53, 58, 63, 67, 69, 105, 109, 116, 124], "excel": [3, 36, 51, 54, 59], "job": [3, 21, 29, 31, 36, 40, 78, 92, 116], "someon": [3, 6, 7, 21, 22, 45, 53, 61, 98, 109, 127], "els": [3, 7, 19, 21, 22, 45, 54, 58, 65, 71, 72, 73, 74, 79, 105, 113, 120], "test_image_api": 3, "testparrecapi": 3, "loadimageapi": 3, "loader": 3, "self": [3, 8, 14, 15, 71, 73, 74, 76, 79, 81, 84, 86, 90, 91, 94, 104, 105, 107, 108, 111, 118, 119, 120, 124], "fname": [3, 4, 7, 20, 22, 29, 32, 67, 76, 81, 89, 91, 96, 117, 121, 124, 126], "example_imag": 3, "parrec_example_imag": 3, "test_parrec": 3, "inherit": [3, 10, 11, 65, 71, 76], "strongli": [3, 19, 59], "free": [3, 6, 58, 61, 82], "alwai": [3, 4, 7, 8, 9, 12, 13, 17, 19, 21, 27, 29, 32, 37, 40, 41, 56, 57, 58, 64, 65, 69, 76, 78, 82, 86, 92, 94, 96, 97, 105, 111, 113, 119, 120, 124, 127], "ones": [3, 6, 10, 32, 42, 43, 79], "consid": [3, 6, 12, 15, 19, 21, 28, 40, 48, 53, 54, 71, 74, 80, 92, 96, 104, 110, 111, 117, 120], "test_proxy_api": [3, 72], "file_map": [3, 64, 71, 76, 79, 82, 86, 89, 90, 94, 96, 100, 101, 102, 105, 106, 111, 117, 118, 119], "least": [3, 6, 10, 12, 14, 19, 20, 21, 22, 25, 28, 31, 40, 72, 76, 78, 81, 86, 90, 96, 97, 104, 108, 115, 124], "get_data_dtyp": [3, 32, 43, 64, 65, 68, 71, 72, 76, 79, 86, 94, 101, 102, 105, 111, 117], "get_data_shap": [3, 64, 68, 71, 72, 76, 79, 94, 101, 102, 105, 106, 111, 117, 118, 119], "from_file_map": [3, 68, 71, 76, 79, 82, 86, 89, 94, 96, 101, 102, 111, 117, 119], "parrecimag": [3, 68], "test_my_format_name_her": 3, "extract": [3, 36, 42, 60, 76, 80, 81, 86, 96, 104, 114], "enough": [3, 22, 43, 89, 92, 104, 117, 125], "fit": [3, 61, 124], "forget": [3, 4, 28, 42], "mayb": [3, 7, 9, 10, 21, 22, 29, 33, 45, 63, 70, 71, 73, 86, 92, 100, 108, 111, 120, 124], "from_fileboj": 3, "repositori": [3, 4, 6, 20, 21, 27, 28, 46, 53, 54, 58, 59, 69], "test_parrec_data": [3, 4], "ask": [3, 6, 19, 21, 22, 29, 32, 37, 40, 48, 57, 64, 67, 92, 109], "easiest": [3, 54], "conserv": 4, "directori": [4, 6, 15, 20, 21, 22, 24, 28, 37, 43, 44, 45, 46, 55, 59, 60, 81, 87, 104, 121], "below": [4, 6, 7, 9, 19, 20, 21, 25, 37, 40, 41, 61, 74, 78, 79, 84, 86, 88, 104, 110, 111, 114, 124, 125], "larger": [4, 21, 25, 29, 30, 70, 73, 111], "own": [4, 9, 11, 13, 19, 21, 22, 28, 37, 38, 43, 45, 48, 50, 51, 52, 53, 54, 55, 71, 79, 86, 89, 105, 117, 123], "50k": 4, "less": [4, 6, 7, 12, 21, 33, 37, 41, 63, 64, 79, 80, 87, 117, 120, 124], "By": [4, 6, 10, 12, 20, 21, 25, 40, 56, 64, 65, 67, 71, 73, 81, 82, 86, 94, 107, 111, 118, 119, 120, 124, 125], "zlib": [4, 21], "sy": [4, 20, 22, 81], "argv": 4, "rb": [4, 89, 90, 108], "fobj": [4, 22, 76, 89, 93, 108, 111, 121], "smaller": [4, 15, 30, 37, 73], "uninterest": 4, "yourself": [4, 19, 32, 45, 47, 55, 65], "repo": [4, 6, 28, 45, 47, 53, 54, 81], "reason": [4, 6, 7, 9, 10, 12, 19, 21, 25, 30, 37, 43, 45, 63, 73, 89, 117], "shame": 4, "pddl": [4, 61], "cc0": 4, "distribut": [4, 21, 22, 24, 28, 29, 58, 59, 61, 64, 69], "opportun": [4, 6, 15, 19, 28], "cite": [4, 68], "who": [4, 6, 16, 25, 28, 43, 44, 53, 54, 58, 107], "easi": [4, 10, 11, 15, 22, 24, 30, 36, 39, 43, 51, 59, 62, 78], "fine": [4, 6, 14, 43, 59], "kind": [4, 6, 19, 20, 21, 24, 61, 78], "new": [4, 6, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 42, 43, 46, 48, 53, 54, 55, 57, 59, 60, 62, 64, 65, 68, 70, 71, 72, 76, 80, 82, 86, 89, 92, 94, 95, 101, 102, 105, 108, 114, 117, 119, 120, 125], "yarikopt": [4, 25, 61], "nitest": [4, 61], "balls1": [4, 61], "despit": 4, "bitbucket": 4, "internet": 4, "someth": [4, 7, 8, 10, 19, 21, 22, 24, 28, 29, 31, 38, 40, 44, 45, 54, 55, 59, 64, 71, 73, 92, 102, 109, 116, 117, 121, 124, 125], "rosetta": 4, "sampl": [4, 15, 32, 34, 64, 79, 117], "your": [4, 6, 9, 14, 19, 20, 21, 27, 28, 44, 48, 51, 52, 53, 54, 60, 62, 71, 81, 88, 96, 100, 120], "stage": [4, 45], "area": [4, 6, 37, 63], "needs_nibabel_data": 4, "nibabel_data": 4, "get_nibabel_data": 4, "rosetta_data": 4, "pjoin": [4, 81], "test_someth": 4, "travi": [4, 28], "checkout": [4, 44, 45, 51, 53, 54, 59], "project": [4, 6, 18, 20, 21, 24, 25, 30, 32, 45, 47, 50, 51, 58, 61, 79, 96], "init": [4, 5, 73], "hundr": 4, "megabyt": 4, "ok": [4, 9, 20, 28, 29, 42, 125], "joi": 4, "aren": [4, 9, 20], "anyth": [4, 10, 43, 45, 54, 58, 65, 74, 92], "aw": [4, 9, 73], "resourc": [5, 9, 24, 27, 28, 36, 37, 50, 52, 59], "intens": [5, 32, 59, 100], "nipy_extra_test": 5, "slow": [5, 12, 18, 28, 78], "machin": [5, 9, 18, 37, 41, 51, 78, 96], "4gb": 5, "ram": 5, "berkelei": [6, 28], "edu": [6, 9, 28, 61, 88, 94], "statu": [6, 7, 9, 11, 12, 13, 14, 15, 16, 28, 44, 45, 51, 54, 86], "draft": [6, 9, 10, 11, 12, 13, 15, 16, 21, 25], "2020": [6, 14, 59, 62], "06": [6, 9, 104], "25": [6, 56, 62, 64, 65, 76], "enhanc": [6, 27, 62, 104], "propos": [6, 10, 11, 13, 16, 17, 21, 27, 30, 44], "primari": 6, "featur": [6, 16, 19, 24, 29, 30, 36, 40, 43, 44, 48, 53, 54, 59, 62, 65, 69], "gone": [6, 9], "concis": 6, "technic": [6, 16, 51], "rational": 6, "respons": [6, 19, 27, 37, 61, 89], "consensu": [6, 25], "dissent": 6, "opinion": [6, 16, 25], "revis": [6, 22, 45], "histori": [6, 19, 21, 51, 59], "histor": 6, "necessarili": [6, 31, 67, 100, 124], "surround": 6, "event": [6, 25, 61], "languag": [6, 9, 10, 21, 115], "itself": [6, 10, 19, 20, 21, 22, 25, 37, 64, 89, 117], "codebas": [6, 13], "develop": [6, 16, 20, 21, 28, 30, 33, 46, 51, 52, 53, 58, 61, 62, 69], "inject": 6, "focus": [6, 24], "success": [6, 30, 109], "tend": 6, "doubt": 6, "sever": [6, 7, 24, 37, 41, 50, 54, 68, 74, 79, 89, 96, 120, 124, 125], "champion": 6, "shepherd": [6, 19], "appropri": [6, 10, 15, 25, 64, 79, 83, 105], "ascertain": 6, "suitabl": [6, 20, 61, 108, 115], "post": [6, 13, 16, 19, 40, 44, 51, 58, 79, 92, 124], "best": [6, 21, 31, 33, 37, 54, 59, 65, 73, 78, 86, 87, 92, 105, 110, 124], "devel": [6, 28], "biap_": 6, "rst": [6, 21, 22, 28, 104, 115], "four": [6, 21, 30, 37, 79, 94, 104], "digit": [6, 9, 21, 56, 58, 64, 65, 69, 78], "biap_0000": 6, "instruct": [6, 20, 25, 28, 33, 45, 46, 47, 49, 53, 55, 58, 59, 60], "onc": [6, 11, 19, 20, 25, 28, 38, 47, 59, 82, 89, 107, 116], "section": [6, 9, 16, 20, 21, 25, 35, 37, 40, 42, 44, 45, 53, 59, 63, 65, 78, 81, 82, 104, 111], "backward": [6, 7, 13, 21, 24, 92, 113], "impact": [6, 25], "broader": 6, "scope": [6, 30], "detail": [6, 24, 25, 36, 37, 43, 47, 48, 51, 52, 57, 58, 60, 62, 65, 67, 69, 70, 82, 89, 104, 105, 106, 110], "At": [6, 7, 8, 10, 12, 13, 14, 21, 22, 24, 41, 42, 43, 45, 64, 78, 96, 108, 115], "earliest": 6, "conveni": [6, 11, 22, 40, 51, 57, 70, 104, 120, 123, 124], "etc": [6, 9, 10, 11, 13, 19, 20, 22, 28, 32, 37, 38, 79, 80, 87, 89, 91, 104, 105, 115, 125], "sound": [6, 45, 78], "principl": [6, 13, 15, 20, 22, 23, 25, 27], "impract": 6, "subject": [6, 15, 37, 61, 63, 127], "wip": 6, "incorpor": [6, 32, 53], "main": [6, 11, 20, 21, 24, 28, 33, 43, 53, 54, 55, 60, 68, 70, 86, 92], "gather": [6, 35], "feedback": 6, "api": [6, 7, 9, 10, 12, 13, 17, 19, 21, 25, 27, 43, 44, 57, 58, 62, 67, 72, 79, 86, 89, 111, 117, 120], "provision": [6, 15, 32], "inclus": 6, "unlik": [6, 9, 14, 25, 65, 100, 112], "reject": [6, 7, 8, 16, 25], "withdrawn": [6, 16], "releas": [6, 19, 20, 24, 27, 58, 61, 62, 68, 69, 80], "wherev": [6, 21], "reli": [6, 29, 78], "challeng": 6, "wider": 6, "ecosystem": [6, 16, 25], "core": [6, 27, 30, 44, 49], "perhap": [6, 8, 13, 21, 22, 45], "said": 6, "similar": [6, 7, 11, 12, 16, 28, 37, 47, 60, 65, 78, 104], "themselv": [6, 91], "compet": 6, "supersed": [6, 16], "render": [6, 63], "obsolet": [6, 32], "activ": [6, 16, 25, 28, 51, 89, 117], "meant": [6, 107, 112], "interest": [6, 11, 16, 21, 22, 25, 35, 37, 58, 64, 69, 79], "contributor": [6, 19, 28, 61], "concret": [6, 25, 79], "reach": [6, 25, 28, 37, 53, 124], "readi": [6, 28, 45, 51, 120], "send": [6, 19, 37, 54, 58, 69, 102], "email": [6, 16, 54], "bodi": 6, "latest": [6, 9, 24, 26, 52, 59, 120], "briefli": 6, "sentenc": [6, 25], "substant": 6, "7": [6, 9, 12, 28, 35, 37, 40, 45, 56, 59, 62, 64, 65, 70, 71, 78, 79, 83, 86, 104, 105, 112, 119, 121, 124], "dai": [6, 14], "anyon": [6, 19, 25, 29, 45, 58], "everyon": [6, 111], "verg": 6, "chanc": [6, 10, 120], "respond": [6, 19, 25, 37], "comment": [6, 9, 19, 38, 42, 86, 94, 105], "period": [6, 35, 84], "beyond": 6, "shouldn": 6, "goal": 6, "rigid": 6, "polici": [6, 81], "game": 6, "err": 6, "compromis": 6, "offici": [6, 24], "followup": 6, "notifi": 6, "celebratori": 6, "emoji": 6, "state": [6, 19, 21, 24, 28, 29, 37, 45, 59, 62, 107], "continu": [6, 7, 9, 12, 19, 25, 30, 35, 38, 42, 79, 92, 124], "disagr": [6, 25], "approach": [6, 10, 15, 16], "escal": [6, 25], "steer": 6, "council": 6, "controversi": [6, 30], "ultim": 6, "natur": [6, 8, 30, 37], "utf": [6, 96, 126], "restructuredtext": 6, "restructuredtextprim": 6, "web": [6, 9, 19, 22, 28, 37, 40], "date": [6, 9, 16, 28, 33, 37, 44, 96], "dd": [6, 16], "mmm": 6, "yyyi": [6, 16], "random": [6, 56, 65], "dom": 6, "ain": 6, "given": [6, 9, 12, 14, 21, 22, 28, 32, 37, 38, 40, 41, 42, 63, 64, 65, 70, 71, 72, 79, 80, 81, 84, 86, 88, 89, 90, 91, 92, 94, 96, 100, 104, 105, 106, 108, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126], "older": [6, 9, 14, 64, 78], "brows": 6, "2011": [7, 8, 9, 12, 61, 62, 96], "03": [7, 8, 9, 11], "23": [7, 9, 62, 64, 65, 70, 78, 114], "retir": [7, 37], "nibabel_imag": 7, "images_and_memori": [7, 8], "uncach": [7, 14, 62, 68, 82], "is_as_load": 7, "implicitli": 7, "typic": [7, 10, 12, 15, 20, 22, 30, 70, 79, 91, 104, 109, 124], "arr": [7, 8, 12, 71, 73, 78, 83, 92, 94, 100, 105, 110, 117, 119, 124], "arang": [7, 11, 57, 64, 65, 67, 70, 71, 73, 83, 89, 92, 95, 105, 117, 124], "24": [7, 10, 43, 57, 62, 64, 65, 67, 70, 78, 83, 89, 105, 117], "_data": [7, 8], "px_img": 7, "px_arr": 7, "actual_arr": 7, "asarrai": [7, 57, 72], "isinst": 7, "ndarrai": [7, 15, 43, 57, 71, 72, 76, 78, 80, 82, 86, 92, 94, 96, 100, 104, 105, 110, 111, 117, 120, 124], "isn": [7, 40, 64, 102, 107], "anywher": 7, "distinct": [7, 20, 32], "tempt": [7, 19], "me": [7, 33], "large_img1": 7, "large1": 7, "large_img2": 7, "large2": 7, "li1_mean": 7, "li2_mean": 7, "got": [7, 45, 53, 119], "unproxi": [7, 8], "insid": [7, 30, 58, 59, 72, 82, 92], "off": [7, 8, 24, 53, 64], "scalefactor": [7, 14, 23, 27, 32, 71, 73, 100, 119, 124], "expens": [7, 9, 21, 78], "subsequ": [7, 37, 42, 80, 104], "faster": [7, 78, 104, 120], "hit": [7, 79, 96], "frequent": 7, "ve": [7, 8, 9, 12, 22, 35, 36, 37, 45, 53, 54, 55, 63, 107], "stuff": [7, 8, 10, 21, 29, 32, 45, 50, 53, 59, 67], "run_spm_thing_on": 7, "run_spn_th": 7, "receiv": [7, 37], "run_spm_th": 7, "everi": [7, 9, 11, 15, 21, 28, 37, 43, 64, 71, 72, 76, 82, 86, 94, 101, 102, 119, 120], "dirti": [7, 29], "Not": [7, 15, 69, 78], "some_filenam": [7, 67], "With": [7, 15, 18, 31, 91, 94, 115], "viviani": 7, "thought": [7, 8, 38, 40, 45], "whenev": [7, 94, 111, 120], "intend": [7, 16, 21, 24, 28, 30, 65, 71, 125], "summari": [7, 9, 16, 23, 24, 25, 44, 48, 52, 80, 88, 100], "leav": [7, 14, 28, 54, 57, 82], "doesn": [7, 9, 19, 40, 45, 61, 89, 94, 105, 106, 107, 109, 120, 124], "bui": 7, "won": [7, 21, 35, 100], "manual": [7, 11, 24, 28, 45, 52, 53, 58, 59, 69, 81, 105, 106], "my": [7, 20, 21, 22, 28, 44, 45, 53, 60], "get_data_copi": 7, "situat": [7, 9, 29, 31, 43, 45, 63, 74, 88], "instanti": [7, 120], "shy": 7, "cheat": [7, 51], "ref": [7, 45, 120], "worri": [7, 45, 104], "mess": 7, "consequ": 7, "philosophi": [7, 27], "is_proxi": [7, 8, 64, 68, 82, 86, 101, 111], "kwarg": [7, 70, 72, 73, 76, 77, 78, 79, 80, 81, 83, 84, 85, 89, 90, 91, 94, 96, 98, 100, 101, 103, 104, 105, 107, 108, 110, 111, 117, 120, 122, 125, 126], "99": [7, 9, 57, 67, 70, 82, 107], "affect": [7, 14, 16, 45, 72, 76, 82, 89, 111, 117], "thu": [7, 9, 20, 21, 28, 37, 40, 62, 71, 76, 78, 79, 86, 88, 96, 98, 104, 107, 110, 114, 120], "unproxy_if_this_is_a_proxy_do_nothing_otherwis": 7, "behav": [7, 57, 79, 120], "hdr": [7, 9, 11, 29, 43, 64, 71, 74, 86, 89, 91, 94, 105, 106, 117, 118, 119, 125], "aff": [7, 70, 105, 110, 111, 124], "upcom": [7, 28], "get_filenam": [7, 20, 29, 32, 64, 68, 81, 89], "tempnam": 7, "set_head": 7, "set_affin": 7, "conflict": [7, 9, 28, 37, 45], "hdr_affine_from": 7, "nasti": 7, "syntax": [7, 8, 28, 32, 37, 125], "img2": [7, 29, 67, 69, 95, 116, 117], "new_affin": 7, "new_head": [7, 65], "motiv": [8, 23], "biiig": 8, "my_huge_imag": 8, "individu": [8, 9, 10, 12, 37, 65, 79, 88], "get_slic": 8, "biap1": [8, 17, 27], "immut": [8, 17, 27], "defeat": 8, "involv": [8, 21, 25, 30, 79], "slowest": [8, 9, 12, 18, 71, 92, 105, 108], "anywai": [8, 92], "worth": [8, 19, 37, 42], "fortran": [8, 12, 63, 72, 73, 105, 124], "ugli": 8, "cours": [8, 9, 10, 11, 12, 15, 18, 21, 22, 29, 43, 44, 51, 109], "contigu": [8, 12, 32, 67, 72, 92], "obvious": [8, 21, 33, 38, 40, 42, 78], "deproxi": 8, "someimag": 8, "parent": [8, 79, 96], "slicedef": 8, "iscontingu": 8, "read_off_disk_somehow": 8, "hidden": [8, 30], "annoi": 8, "complex": [8, 10, 19, 73, 114], "copy_if": 8, "But": [8, 14, 40, 45, 70, 78, 107, 121], "ourselv": [8, 40], "thrash": 8, "Of": [8, 9, 11, 12, 22, 29, 37, 43, 44, 109], "boil": [8, 9], "bob": 9, "dougherti": 9, "wiki": [9, 21, 33, 78, 88, 114], "carri": [9, 15, 21, 25, 28, 89, 117], "nifti_ecode_ignor": 9, "nifti_ecode_dicom": 9, "medic": [9, 36, 37, 40, 58, 61, 69, 104], "nifti_ecode_afni": 9, "afni": [9, 13, 30, 58, 69, 70, 76], "nimh": [9, 76, 105], "nih": [9, 76, 105], "gov": [9, 76, 105], "afniextension1": 9, "6": [9, 10, 20, 28, 35, 37, 40, 42, 61, 62, 64, 65, 70, 71, 78, 79, 81, 86, 96, 104, 105, 106, 111, 112, 114, 118, 119, 120, 124], "nifti_ecode_com": 9, "nul": 9, "ascii": [9, 96, 111, 115, 120], "impli": [9, 11, 12, 21, 37, 38, 53, 61, 65, 88, 89, 92, 100, 105, 110, 112, 116, 117, 119, 124], "nifti_ecode_xced": 9, "xcede": 9, "nbirn": 9, "net": [9, 33, 43, 86], "htm": [9, 36, 94], "nifti_ecode_jimdiminfo": 9, "jim": 9, "contact": 9, "info": [9, 28, 32, 41, 76, 78, 111], "dr": 9, "horsfield": 9, "mah5": 9, "AT": [9, 37], "leicest": 9, "uk": 9, "12": [9, 32, 37, 38, 40, 42, 56, 62, 64, 65, 70, 71, 104, 111], "nifti_ecode_workflow_fwd": 9, "fiswidget": 9, "kraepelin": 9, "wpic": 9, "pitt": 9, "fissel": 9, "kate": 9, "entir": [9, 11, 37], "prospect": 9, "evid": 9, "wild": [9, 86], "heavi": [9, 10], "schema": 9, "candid": [9, 21, 28], "bxh": 9, "websit": [9, 24, 25, 59, 68, 88], "quiet": 9, "dead": 9, "dtd": 9, "understand": [9, 25, 32, 36, 37, 42, 104], "gordon": 9, "kindlmann": 9, "consider": [9, 10], "particularli": [9, 19, 28, 36], "team": [9, 25, 30, 61, 80], "summar": [9, 10, 25], "innov": 9, "axis_nam": 9, "transpos": [9, 38, 63, 104, 105, 110, 117], "struct": [9, 32, 42, 104], "incorrectli": 9, "primaci": 9, "ld": 9, "rdf": 9, "primer": 9, "essenti": [9, 32], "coupl": [9, 11], "uri": [9, 21], "derefer": 9, "pretti": [9, 20, 44, 124, 125], "nipy_header_vers": 9, "has_label": 9, "clash": 9, "sparql": 9, "rdflib": 9, "act": [9, 10, 11, 72], "serial": [9, 15, 30, 89, 96, 126], "databas": [9, 21, 45], "engin": [9, 114], "context": [9, 37, 98, 108, 121], "prefix": [9, 20, 22, 24, 28, 37, 60, 81, 111, 121], "dcm": [9, 38, 104], "placehold": [9, 20, 44], "neurolex": 9, "categori": [9, 20, 24], "echo_tim": [9, 10], "45": [9, 44], "repetition_tim": 9, "occur": [9, 15, 25, 37, 88, 91, 94, 111, 114], "unrel": 9, "forward": [9, 25, 53, 81, 82], "manufactur": [9, 36, 37], "im": [9, 54, 111], "capit": 9, "letter": 9, "further": [9, 15, 22, 27, 28, 33, 37, 40, 70, 78, 89, 95, 112], "writer": [9, 73, 108], "outsid": [9, 10, 22, 28, 72, 78, 111, 112], "my_field1": 9, "my_field2": 9, "extended_mysoft": 9, "mysoft_on": 9, "mysoft_two": 9, "axis_metadata": 9, "constraint": [9, 92, 107], "omit": [9, 16, 79, 96, 108], "represent": [9, 45, 53, 61, 76, 78, 79, 89, 94, 105, 111, 117, 120, 124, 127], "vr": [9, 37, 41, 104], "00080070": 9, "lo": [9, 37, 39], "reconstruct": [9, 31, 35, 38, 42, 65, 104, 105, 114], "lossless": 9, "latter": [9, 19, 20, 25, 79, 94], "recod": [9, 68, 125], "welcom": [9, 19], "frequenc": [9, 12, 37, 64, 105], "identifi": [9, 10, 17, 21, 27, 30, 33, 35, 37, 42, 58, 69, 79, 86, 104], "nor": [9, 11, 24, 61], "5d": [9, 12], "datatyp": [9, 11, 32, 64, 65, 71, 74, 79, 80, 89, 94, 96, 105, 106, 110, 117, 118, 119, 124, 125], "int16": [9, 14, 43, 57, 64, 65, 78, 105, 124, 125], "distanc": [9, 15, 40, 70, 92], "240": 9, "fourth": [9, 40, 65, 76, 94, 123, 124], "absent": [9, 37, 40, 42], "superset": [9, 19], "union": [9, 37, 82, 89], "applies_to": 9, "delet": [9, 21, 48, 57, 82, 86], "clutter": 9, "hei": 9, "mi": 9, "casa": 9, "su": 9, "plai": 9, "role": [9, 27], "cannot": [9, 12, 20, 30, 42, 65, 71, 72, 73, 76, 82, 86, 89, 92, 94, 96, 101, 102, 104, 105, 106, 111, 117, 118, 119, 124], "scalar": [9, 11, 70, 73, 78, 79, 88, 92, 94, 105, 112, 114, 117, 120, 124], "along": [9, 12, 16, 37, 40, 56, 63, 64, 70, 76, 79, 88, 92, 95, 104, 111, 112, 115, 117, 120], "OR": [9, 15, 61, 72], "v_i": 9, "express": [9, 35, 37, 40, 61, 88, 92, 99, 104, 116], "cartesian": 9, "product": [9, 38, 40, 42, 61, 66, 70], "ie": [9, 37], "6x10": 9, "a_": [9, 40, 42], "contrast": [9, 15, 21, 37, 120], "constant": [9, 11, 40, 42, 100, 112], "shape_of_imag": 9, "image_nam": 9, "axis_indic": 9, "axis_length": 9, "any_other_list": 9, "uniqu": [9, 21, 35, 37, 53, 79, 111], "repeat": [9, 10, 19, 33, 47, 57, 75, 89, 104, 124], "NOT": [9, 61, 107], "gradient": [9, 12, 104, 111], "spatial_ax": 9, "bval": [9, 111], "bvec": [9, 111], "acquisit": [9, 12, 30, 33, 35, 42, 104, 105, 111], "millisecond": [9, 64], "choic": [9, 19, 44, 71, 105, 112, 120, 124], "decod": [9, 37, 42, 120], "sign": [9, 21, 28, 37, 43, 65, 96, 104, 111, 114], "6000": 9, "hour": 9, "loss": [9, 61, 117], "a_i": [9, 40], "ascend": [9, 40, 42], "sequenti": [9, 35, 105], "scheme": [9, 65], "20": [9, 32, 37, 62, 64, 65, 70, 95, 99, 107, 110, 120, 123], "40": [9, 65, 74, 98], "80": 9, "100": [9, 33, 43, 70, 79, 105, 118], "multi": [9, 10, 12, 18, 34, 40, 42, 89, 104], "rare": [9, 10, 12, 15], "accord": [9, 19, 25, 32, 37, 42, 65, 92, 104, 110, 112, 120], "slice_cod": [9, 64, 65, 105, 106], "slice_start": [9, 64, 65, 105, 106], "slice_end": [9, 64, 65, 105, 106], "120": 9, "480": 9, "toffset": [9, 64, 65, 105, 106], "equal": [9, 21, 37, 40, 44, 65, 79, 84, 88, 94, 96, 104, 114, 124], "200": [9, 12, 21], "110": [9, 88, 118], "210": 9, "220": 9, "130": 9, "230": 9, "140": 9, "per": [9, 10, 11, 12, 13, 15, 32, 38, 42, 76, 79, 80, 86, 92, 94, 100, 104, 105, 110, 111, 120], "nice": [9, 18, 36, 44, 51, 54, 60, 63, 80], "mytim": 9, "myslic": 9, "assert": [9, 29, 44, 79, 82, 121], "Being": [9, 53], "frequency1": 9, "frequency2": 9, "motion": [9, 12, 13], "86": [9, 56, 64, 65], "83": 9, "01": [9, 96], "71": 9, "91": [9, 32, 63], "114": [9, 10], "59": 9, "54": [9, 65], "13": [9, 37, 42, 62, 64, 65, 111], "42": [9, 45, 65, 82], "34": [9, 28, 65, 104], "87": 9, "38": [9, 18, 65], "92": [9, 32], "77": [9, 41, 111], "97": [9, 32, 56, 64, 65], "82": [9, 10, 76], "89": 9, "39": [9, 111], "95": [9, 65], "116": 9, "29": [9, 42, 70], "68": 9, "41": [9, 76], "93": 9, "02": 9, "118": 9, "35": [9, 28, 44, 56, 64, 65], "44": [9, 65, 70], "49": [9, 10, 76, 104], "62": [9, 111], "125": 9, "46": [9, 44, 65], "17": [9, 37, 40, 56, 59, 62, 64, 65, 70, 96, 104], "21": [9, 10, 37, 38, 40, 42, 64, 65, 96], "66": [9, 45, 96], "obei": 9, "partial": [9, 15, 28, 92, 111], "output_vector": 9, "spatial_axi": 9, "output_offset": 9, "2012": [10, 62], "11": [10, 12, 28, 37, 38, 40, 42, 56, 62, 64, 65, 70], "significantli": [10, 19], "spread": 10, "vast": 10, "amount": [10, 38, 79, 88, 96, 120, 126], "lost": [10, 15, 39, 45], "nb": [10, 15, 99], "256": [10, 37, 92, 112], "repetitiontim": 10, "3500": 10, "echotim": 10, "idx": [10, 79, 111], "xrang": 10, "65": [10, 96], "98": [10, 111], "131": 10, "acquisitiontim": 10, "110455": 10, "370000": 10, "110457": 10, "272500": 10, "387500": 10, "multidimension": 10, "dcmmeta": 10, "filter": [10, 64, 96, 117], "togeth": [10, 21, 37, 79], "const": 10, "per_slic": 10, "per_volum": 10, "classif": 10, "while": [10, 15, 19, 25, 28, 42, 43, 45, 64, 79, 85, 93, 111, 121], "simpli": [10, 20, 22, 43, 60, 79, 120], "json": [10, 13, 17, 27, 30], "chosen": [10, 16, 92], "flexibl": [10, 15, 43, 105], "ordereddict": [10, 80, 94, 104, 124], "nifti1extens": [10, 39, 68, 79], "coregist": 10, "niftiwrapp": 10, "blob": [10, 21, 28, 94, 111], "d157741": 10, "src": [10, 28], "l1232": 10, "meta_valid": 10, "against": [10, 21, 25, 29, 33, 36, 78, 102, 111], "classmethod": [10, 11, 15, 71, 76, 79, 82, 86, 89, 94, 96, 101, 102, 105, 106, 111, 117, 118, 119, 120, 125], "enclos": [10, 116], "potenti": [10, 94, 111], "popul": [10, 104], "four_to_thre": [10, 68], "three_to_four": 10, "todo": 10, "mosaic": [10, 33, 34, 36, 42, 104], "frame": [10, 12, 13, 34, 37, 39, 40, 86, 88, 104], "create_dcmmeta": 10, "variat": 10, "programmat": [10, 65], "manner": [10, 120], "live": [10, 20, 25], "perframefunctionalsequ": 10, "reclassifi": 10, "treat": [10, 15, 123, 124], "entiti": [10, 25, 127], "unimport": 10, "unpack": [10, 20, 21, 38, 59, 60, 63, 68], "join": [10, 20, 22, 25, 43, 56, 57, 64, 65, 76, 81, 82, 86, 121], "notat": [10, 40], "csaseri": 10, "subhead": [10, 13, 86], "mrphoenixprotocol": 10, "ulvers": 10, "somehow": 10, "recurs": [10, 81], "mini": [10, 115], "travers": 10, "lose": [10, 30, 31, 73, 92, 107], "capabl": [10, 43, 104, 107, 120, 124], "2013": [11, 61], "09": [11, 15], "greatli": 11, "benefit": [11, 16, 21, 44, 82, 92], "vtk": 11, "camino": 11, "mitk": 11, "moreov": [11, 120], "eas": 11, "my_trk": 11, "lazy_load": [11, 120], "base_format": 11, "my_tck": 11, "f2": 11, "data1": 11, "fa": 11, "from_nifti": 11, "data2": 11, "voxel_s": [11, 68, 104, 112, 116, 120], "get_empty_head": 11, "data3": 11, "kept": [11, 107, 120], "folder": [11, 28, 60], "iter": [11, 13, 74, 79, 104, 105, 114, 120, 124], "streamlinesfil": [11, 120], "get_magic_numb": 11, "cl": 11, "notimplementederror": [11, 14], "is_correct_format": [11, 68, 120], "fileobj": [11, 71, 72, 73, 76, 86, 89, 90, 92, 93, 94, 101, 105, 108, 111, 117, 120, 124, 125], "staticmethod": 11, "pretty_print": 11, "in_fileobj": 11, "out_filenam": 11, "streamlines_fil": 11, "detect_format": [11, 68], "ideal": [11, 24], "solut": [11, 16, 104], "commonhead": 11, "enum": [11, 69], "nb_fiber": 11, "dynamicstreamlinefil": 11, "offer": [11, 13, 43, 107], "append": [11, 39, 42, 68, 70, 79, 91, 92, 120], "2015": [12, 13, 61, 62], "07": [12, 13, 59, 105], "meaning": [12, 24, 37, 88], "my_4d": 12, "vol0": [12, 64], "vol1": [12, 57], "acquir": [12, 30, 35, 105], "3rd": [12, 24, 62, 95], "slice0": 12, "slice1": 12, "care": [12, 14, 25, 39, 43, 57, 65, 67, 78, 82, 100, 102, 111], "physicist": 12, "readout": 12, "stepwis": 12, "distort": 12, "hertz": [12, 79], "concentr": 12, "million": 12, "5th": [12, 105], "quot": [12, 18, 37, 78, 96], "spatiotempor": 12, "arrang": [12, 21, 37, 38, 40, 56, 63, 104], "happen": [12, 42, 63, 74, 78, 107, 110, 121], "deform": 12, "displac": 12, "y_highres001": 12, "121": 12, "145": 12, "width": [12, 78, 80, 106], "height": 12, "depth": [12, 51, 105], "nframe": [12, 86], "load_mgh": 12, "primarili": 12, "mnc2": 12, "minc2_4d": 12, "mnc": [12, 101, 102], "hdf5": [12, 13, 30], "f8": [12, 106], "xspace": 12, "i4": [12, 71, 78, 94, 105, 106, 118, 119, 124], "yspace": 12, "zspace": 12, "lineag": 12, "storag": [12, 20, 21, 30, 37, 40, 71, 72, 78, 79, 89, 104, 117, 124], "versu": 12, "dataspac": [12, 96], "chapter": 12, "brainvoyag": [12, 23, 27], "stc": [12, 15, 18], "vtc": [12, 18], "fast": [12, 18, 29, 33, 53], "seen": [12, 22, 28, 37, 64], "mr": [12, 18, 33, 35, 37, 41, 42, 104], "echo": [12, 33, 37, 103, 111], "fifth": 12, "thumb": [12, 40, 51, 88], "clearli": [12, 19, 21], "saw": [12, 57], "fmristat": 12, "plane": [12, 32, 35, 37, 40, 42, 70, 123], "standrd": 12, "attach": [12, 21, 30, 61, 64], "urgent": 12, "time_axis_index": 12, "axis_label": 12, "datarrai": 12, "xrai": 12, "panda": 12, "niminc1": 12, "niminc2": 12, "surpris": 12, "as_niminc": 12, "18": [13, 14, 18, 37, 62, 64, 65], "vista": 13, "lipsia": 13, "215": 13, "issuecom": 13, "122357444": 13, "estim": [13, 30, 42, 70, 88, 104, 114], "cumbersom": 13, "mix": 13, "investig": [13, 55], "nilearn": [13, 15, 30], "iter_img": 13, "slice_img": 13, "2018": [14, 62], "04": 14, "ship": [14, 20, 61], "earlier": 14, "difficult": [14, 19, 21, 32, 124], "predict": [14, 82, 92], "awar": [14, 76], "my_imag": [14, 64, 76], "trap": 14, "sum": [14, 40, 42, 78], "ran": 14, "teach": [14, 30], "sensibl": [14, 45, 53, 119, 124], "answer": [14, 21, 22], "scalng": 14, "_data_cach": 14, "asanyarrai": [14, 71, 76, 79, 82, 94, 101, 102, 105, 106, 111, 117, 118, 119], "_dataobj": 14, "trip": [14, 89], "accid": 14, "fdata": [14, 82], "issubclass": 14, "inexact": 14, "_fdata_cach": 14, "astyp": [14, 64, 71, 73, 78, 124], "pend": [14, 79, 96, 120], "april": [14, 62], "year": [14, 28, 30], "port": 14, "2021": [15, 82], "volumetr": [15, 79, 117], "adjac": [15, 40, 104], "pragmat": 15, "costli": 15, "reproduct": 15, "administr": 15, "consum": [15, 65, 70], "purpos": [15, 16, 17, 25, 27, 45, 61, 90, 124], "triplet": [15, 40, 79, 91], "overlin": [15, 115], "ab": [15, 74, 78, 80, 108], "topologi": [15, 96], "subset": [15, 79, 108, 111], "connect": [15, 55, 61], "mesh": [15, 94, 96, 105], "desir": [15, 21, 31, 104, 105], "densiti": 15, "lh": 15, "pial": [15, 105], "read_geometri": [15, 68], "write_geometri": [15, 68], "morphometri": [15, 58, 69, 94], "read_morph_data": [15, 68], "write_morph_data": [15, 68], "read_label": [15, 68], "subdivid": 15, "brainmodelaxi": [15, 68], "subspac": 15, "cortex": [15, 79], "medial": 15, "wall": 15, "subcort": 15, "wb": [15, 89, 94, 108], "mne": 15, "subjects_dir": 15, "n_vert": 15, "n_time": 15, "n_sensor": 15, "transfer": [15, 37], "absenc": 15, "signatur": [15, 21, 42, 73, 74, 104], "excess": 15, "consumpt": 15, "boundari": [15, 41, 112], "inflat": 15, "straightforward": [15, 45, 67, 88], "arithmet": 15, "paint": 15, "textur": 15, "possibli": [15, 16, 21, 38, 45, 74, 79, 86], "interpol": [15, 112], "downsampl": [15, 64], "sphere": 15, "reg": 15, "scikit": [15, 25], "coordaxi": 15, "coordinateaxi": 15, "load_structur": 15, "pointset": [15, 96], "get_indic": 15, "str": [15, 71, 76, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 94, 96, 100, 101, 104, 105, 106, 108, 109, 111, 112, 115, 119, 120, 121, 123, 124, 125, 126], "n_coord": 15, "get_coord": 15, "nx3": 15, "triangularmesh": 15, "n_triangl": 15, "get_triangl": 15, "mx3": 15, "get_mesh": 15, "get_nam": 15, "get_": [15, 65, 124], "coord": [15, 86, 94, 96], "ratio": [15, 100, 123], "overridden": [15, 71, 89], "ndgrid": 15, "ravel": 15, "triangular": [15, 94], "geometrycollect": 15, "from_spec": 15, "klass": [15, 89, 95], "glm": 15, "first_level": 15, "make_first_level_design_matrix": 15, "run_glm": 15, "bold": [15, 44], "from_filenam": [15, 68, 82, 89, 96, 111, 117], "hemi": 15, "l_bold": 15, "gii": [15, 96], "dm": 15, "beta": [15, 88], "l_beta": 15, "mgz": [15, 94, 108], "anat": [15, 76], "l_midthick": 15, "surf": [15, 96], "networkx": [15, 19], "weight": 15, "graph": [15, 44, 45, 53], "get_graph": 15, "distance_matrix": 15, "gaussian": [15, 112], "sigma": [15, 112], "wildli": 15, "ineffici": 15, "l_smooth": 15, "_bold": 15, "plot_surf": 15, "plot_surf_img": 15, "tstat": 15, "l_contrast": 15, "taskvsbase_tstat": 15, "fs_subject": 15, "freesurfersubject": 15, "fsaverage5": 15, "get_structur": 15, "01_task": 15, "rest_bold": 15, "dtseri": 15, "fslr_hemi": 15, "l_label": 15, "dlpfc_mask": 15, "anatomicalstructureprimari": 15, "cortexleft": [15, 79], "vtx_idc": 15, "dlpfc_idc": 15, "dlpfc_img": 15, "wbspec": 15, "caretspec": 15, "fslr": 15, "resolut": [16, 18, 25, 31, 35, 40, 80], "achiev": [16, 42, 45], "elong": 16, "dash": [16, 37], "mainli": [16, 35, 63, 79, 124], "wouldn": 16, "perspect": [16, 24, 25, 63], "Its": [16, 120], "high": [16, 18, 29, 43, 67, 84], "pseudo": 16, "illustr": [16, 19], "technologi": 16, "art": 16, "branch": [16, 19, 24, 28, 44, 48, 51, 53, 54, 55, 59], "discret": [16, 125], "justif": 16, "bullet": 16, "regard": 16, "awesom": [17, 30], "biap2": [17, 27], "slicecopi": [17, 27], "biap3": [17, 27, 30], "biap4": [17, 27, 30], "dcmstack": [17, 27, 30], "biap5": [17, 27], "biap6": [17, 27, 30], "biap7": [17, 27], "biap8": [17, 27], "biap9": [17, 27], "216": 18, "appar": [18, 36, 38, 41, 42, 104], "bvqxtool": 18, "vmr": 18, "tal": 18, "fmr": 18, "nativ": [18, 59, 71, 80, 105, 118, 119, 125], "nr": 18, "vmp": 18, "msk": 18, "ubb": 18, "forum8": 18, "000087": 18, "smp": 18, "nrofvertic": 18, "approv": [19, 25], "volunt": 19, "tremend": 19, "grate": [19, 58], "critic": [19, 74], "remind": [19, 45, 53], "felt": 19, "novic": 19, "mentorship": 19, "handhold": 19, "experi": [19, 25, 111], "liber": 19, "recogn": [19, 28, 71, 74, 78, 79, 105], "workflow": [19, 25, 48, 50, 52, 54], "realiz": 19, "gentl": 19, "polit": 19, "abandon": 19, "focu": 19, "global": [19, 21, 44, 54, 78, 98, 111, 125], "claim": [19, 61, 114], "explor": 19, "nitpicki": 19, "spell": 19, "mistak": [19, 45], "push": [19, 28, 45, 51, 54, 55], "notif": [19, 37], "concern": 19, "mere": 19, "understood": 19, "freeli": 19, "member": [19, 25, 32], "insight": 19, "great": [19, 43], "bug": [19, 24, 44, 45, 54, 59, 62, 78, 104], "vouch": 19, "serious": 19, "clarif": 19, "reproduc": [19, 61], "fix": [19, 24, 25, 28, 33, 42, 44, 45, 54, 59, 62, 74, 78, 86, 88, 92, 94, 120, 121, 125], "deem": [19, 114], "nich": 19, "devot": 19, "sustain": 19, "effort": [19, 36], "priorit": 19, "feel": 19, "belong": [19, 79, 94, 105], "mainten": [19, 24, 28, 62], "signific": [19, 30], "margin": 19, "speedup": 19, "wari": 19, "alien": 19, "explan": [19, 37, 40, 42, 45, 82], "meet": 19, "visibl": 19, "appeal": [19, 25], "empow": 19, "outcom": 19, "past": [19, 66], "pep8": 19, "pep257": 19, "neurostar": 19, "monitor": 19, "divid": [20, 73, 124], "atlas": [20, 21, 76], "programm": 20, "make_datasourc": [20, 68], "relpath": [20, 81], "icbm152": 20, "t1": [20, 61, 91], "absolut": [20, 78, 80, 92, 100, 104], "insist": 20, "datasourc": [20, 68], "traceback": [20, 67, 71, 73, 78, 105, 109, 122, 124, 125], "implaus": [20, 22, 71, 105], "example_data": 20, "get_data_path": [20, 60, 68], "search": [20, 58, 81, 91, 93, 104], "unix": [20, 81, 87], "nipy_data_path": [20, 81], "ini": [20, 22, 60, 75, 81], "nipy_dir": [20, 87], "home": [20, 21, 22, 28, 44, 47, 58, 60, 87], "glob": [20, 81, 104], "etc_dir": 20, "share": [20, 21, 22, 60, 71, 81, 92, 104, 118], "usr": [20, 22, 81], "ubuntu": [20, 49, 62, 81], "get_nipy_user_dir": [20, 68, 81], "satisfi": [20, 104], "obtain": [20, 40, 61, 76, 79, 82, 120], "rememb": [20, 40, 45, 53, 82], "umbrella": 20, "packagenam": 20, "twice": [20, 107], "pbrain": 20, "tree": [20, 21, 24, 28, 46, 58, 69, 81], "pattern": [20, 107], "txt": [20, 22, 28, 33, 81, 121], "colin27": 20, "somewher": [20, 21, 54], "subdirectori": 20, "signifi": [20, 105], "oppos": [20, 124], "data_fil": 20, "export": [20, 111], "rout": 20, "nipy_templ": 20, "cost": [20, 21, 29], "central": [20, 65, 70, 104, 119], "tar": [20, 60, 61], "1mm": [20, 112], "t1_brain": 20, "deliv": [20, 21], "sdist": [20, 28], "recreat": 20, "site": [20, 33], "examplepkg": 20, "machineri": [20, 60], "prove": [21, 78], "uncomfort": 21, "data_packag": 21, "100k": 21, "healthi": 21, "beat": 21, "clearer": 21, "0saga": 21, "model": [21, 25, 37, 54, 79, 104, 107], "believ": [21, 40, 42], "abstract": [21, 22, 27, 30, 32, 37, 79, 89, 120, 126], "life": [21, 104, 107], "enjoy": 21, "subvers": [21, 51], "mercuri": 21, "201": 21, "memor": 21, "restrict": [21, 37, 61, 71, 88], "static": [21, 79, 94, 107], "af5bd6": 21, "f745dc2": 21, "zipfil": 21, "server": [21, 28, 37], "discov": [21, 22, 54, 88], "remot": [21, 28, 44, 45, 51, 53, 54, 55], "unstabl": [21, 88], "lenni": 21, "contrib": 21, "deb": [21, 59], "11_3": 21, "i386": 21, "12_9": 21, "creation": [21, 30, 65, 81, 83, 125], "adapt": [21, 73, 86, 92, 100, 112, 113, 115], "datapkg": 21, "brief": 21, "plan": [21, 25, 30], "confirm": [21, 37], "verif": [21, 37], "verifi": [21, 71, 118, 119, 120], "apt": [21, 49, 59], "checksum": 21, "gpg": 21, "trust": [21, 25], "encrypt": 21, "decrypt": 21, "persuad": 21, "Their": 21, "hold": [21, 25, 28, 78, 82, 89, 104, 107, 117, 125], "wherea": [21, 38, 42, 65, 70, 120, 125], "decreas": [21, 37, 69, 79, 105], "ourpkg": 21, "default_registri": 21, "my_pkg_path": 21, "pathfor": 21, "mypkg": 21, "mypkg_path": 21, "runtimeerror": [21, 83, 84], "footnot": [21, 37, 63], "agreement": [21, 25], "bundl": 22, "dang": 22, "pth": [22, 81, 87, 91], "mkdtemp": [22, 121], "temporari": [22, 29, 121], "pinstanc": 22, "pri": 22, "pkg_name": 22, "localpathprundl": 22, "prun": 22, "listdir": 22, "prun_back": 22, "from_path": 22, "get_fileobj": 22, "a_fil": 22, "greater": [22, 37, 41, 42, 59, 84, 115, 117, 124], "encapsul": [22, 37, 89, 104, 117, 120], "dsrc": 22, "get_sourc": 22, "dquery_result": 22, "pkg": [22, 109], "loosevers": 22, "nix": 22, "local_si": 22, "local_usr": 22, "src_pool": 22, "sourcepool": 22, "dq_re": 22, "localpathdistribut": 22, "dst": 22, "register_m": 22, "win32": [22, 28], "_home_dpkg_sdir": 22, "_dpkg": 22, "_sys_driv": 22, "_": [22, 28, 40, 42, 109, 121, 124], "splitdriv": 22, "_home": 22, "expandus": [22, 60], "undefin": [22, 37, 65, 73, 78, 124], "home_ini": 22, "dsourc": 22, "sys_ini": 22, "background": [23, 27, 56, 63, 99, 127], "terminologi": [23, 86], "desiderata": 23, "usecas": [23, 27], "discoveri": 23, "overview": [23, 37, 43, 48, 52], "bv": 23, "introduct": [24, 34, 43, 51, 52, 127], "readthedoc": [24, 120], "io": [24, 28, 32, 45, 61, 68, 71, 79, 89, 96, 105, 108, 117, 120, 124, 125], "en": [24, 49, 78, 88, 114, 120], "finish": [24, 28, 45, 54], "dist": [24, 28, 76], "target": [24, 29, 80], "dev": [24, 28, 61, 83, 94], "unoffici": 24, "snapshot": [24, 28, 33, 59], "channel": 24, "neurodebian": [24, 59], "elsewher": 24, "clone": [24, 45, 46, 51, 54, 59], "classifi": 24, "bf": [24, 54], "rf": 24, "nf": [24, 44, 45, 95], "bw": 24, "opt": [24, 80], "bk": 24, "pl": 24, "happier": 24, "absorb": 24, "advis": [24, 45, 61], "toplevel": 24, "appendix": [24, 58], "neither": [24, 61, 124], "macroscop": 24, "perform": [24, 30, 37, 88, 105, 106, 117, 120], "parti": [24, 62], "bugtrack": 24, "criteria": 24, "conduct": 24, "particip": [25, 79], "deadlock": 25, "demonstr": 25, "ongo": 25, "vote": 25, "therebi": 25, "effigi": [25, 61], "oesteban": 25, "adher": 25, "nomin": [25, 35], "invit": 25, "lazi": [25, 120], "unanim": 25, "week": [25, 44], "voic": 25, "sc": 25, "strateg": 25, "fund": 25, "grant": [25, 61], "theirs": 25, "pursu": 25, "pictur": 25, "timefram": 25, "mih": 25, "tracker": [25, 30], "occasion": [25, 125], "seek": [25, 42, 68, 71, 72, 76, 86, 89, 90, 92, 93, 94, 108, 111, 124], "group": [25, 37, 42, 79, 104], "distinguish": [25, 42], "fundament": [25, 30, 37], "perceiv": 25, "flaw": 25, "membership": 25, "land": 25, "confid": 25, "outlin": 25, "mission": 25, "formal": 25, "taken": [25, 43, 61, 79, 111, 116], "advoc": 25, "suffici": [25, 105], "dan": 25, "schult": 25, "changelog": [27, 28, 58, 62], "acknowledg": [27, 28], "And": [27, 32, 71, 89], "roadmap": 27, "recip": 27, "checklist": 27, "advanc": [27, 52, 59, 72], "announc": [28, 58, 104], "outstand": 28, "grep": 28, "cut": 28, "uniq": 28, "shortlog": 28, "ae": [28, 37], "perl": 28, "dedup": 28, "stdin": 28, "stackoverflow": 28, "question": [28, 29, 58, 69, 92], "6482436": 28, "6482473": 28, "mailmap": 28, "nse": 28, "conf": [28, 104], "refresh": [28, 54], "long_descript": 28, "rst2html": 28, "tmp": [28, 45, 121], "numpy_min_vers": 28, "yml": 28, "buildbot": 28, "try_branch": 28, "nibotmi": 28, "bewar": 28, "bic": 28, "builder": 28, "sys_vers": 28, "r266": 28, "84374": 28, "aug": [28, 62], "2010": [28, 42, 61, 62], "00": [28, 111], "51": [28, 111], "gcc": [28, 59], "appl": 28, "inc": [28, 59], "5493": 28, "commit_sourc": 28, "substitut": [28, 61], "np_version": 28, "commit_hash": 28, "25b4125": 28, "pkg_path": 28, "var": [28, 102], "jg": 28, "jgfz12zxhwgsfkd85xlplk": 28, "ti": [28, 94], "tmpgpid3": 28, "pylib": 28, "sys_execut": 28, "app": [28, 59], "sys_platform": 28, "pyc": 28, "mb312": 28, "dev_tre": 28, "pick": [28, 35, 45], "bin": [28, 125], "nifti1_diagnos": 28, "everyth": [28, 45, 59, 121], "compileal": 28, "_version_extra": 28, "workon": 28, "python26": 28, "distclean": 28, "deactiv": 28, "zibi": 28, "buildslav": 28, "py2": 28, "osx": [28, 49, 59], "amd64": 28, "bdist32": 28, "bdist64": 28, "intro": 28, "pypirc": 28, "warehous": 28, "usernam": 28, "password": 28, "legaci": 28, "nuke": 28, "fxd": 28, "gztar": 28, "twine": 28, "trunk": [28, 48, 55], "maint": 28, "bump": 28, "_version_micro": 28, "_version_minor": 28, "discard": [28, 42, 45, 57, 92, 111], "spuriou": 28, "plu": [28, 40, 79, 111, 123], "suffix": [28, 91, 96, 121], "abbrevi": [28, 37], "sha1": 28, "dsc": 28, "orig": [28, 76], "click": [28, 45, 47, 58, 69, 123], "minut": [28, 44], "deposit": 28, "button": [28, 45, 47], "badg": [28, 58, 69], "markdown": 28, "5281": 28, "60847": 28, "citabl": 28, "realign": 29, "img1": [29, 69, 116], "meanfunct": 29, "flirt": 29, "param": [29, 104, 105], "source_filenam": 29, "as_filenam": 29, "source_img": 29, "target_filenam": 29, "target_img": 29, "diverg": 29, "meantunct": 29, "mkstemp": [29, 67], "node": [29, 105], "farm": 29, "worker": 29, "lightweight": 29, "some_imag": [29, 32, 67], "_cach": 29, "complex64": 29, "quickli": 29, "prohibit": 29, "is_dirti": 29, "magic": [29, 51, 64, 65, 86, 105, 106], "scene": 29, "uncertainti": 29, "month": 30, "workbench": 30, "higher": [30, 71, 78, 84, 104, 105, 106, 124], "task": [30, 37, 45, 96], "broad": 30, "adopt": 30, "captur": [30, 79], "xarrai": 30, "visual": [30, 45], "layer": [30, 126], "vendor": 30, "lack": [30, 42, 81], "936": 30, "2171": 30, "toolbox": 30, "reus": 30, "itk": [30, 36, 40], "ant": 30, "niftyreg": 30, "nitransform": 30, "research": [30, 33], "aprim": 31, "perfect": 31, "pi": [31, 88, 114, 123], "r_dtype": 31, "s_dtype": 31, "cast_funct": 31, "r_prime": 31, "a_prim": 31, "upcast": [31, 124], "1d": [31, 70, 79, 124], "measur": [31, 35, 37, 92], "vol": 32, "character": 32, "subtl": 32, "spm_vol": 32, "109": 32, "pinfo": 32, "3x1": 32, "descrip": [32, 64, 65, 71, 105, 106, 118, 119], "1x1": 32, "128": [32, 37, 41, 42, 43, 57, 64, 65, 73, 78], "74": 32, "1x2": 32, "spm_type": 32, "ness": [32, 104], "jth": 32, "val": [32, 77, 78], "____________________________________________________________________________": 32, "mex": 32, "spm_map_vol": 32, "spm_unmap_vol": 32, "matlab4": 32, "spm94": 32, "_______________________________________________________________________": 32, "2005": 32, "wellcom": 32, "depart": 32, "neurosci": 32, "dat": 32, "91x109x91": 32, "file_arrai": 32, "mat_int": 32, "mni152": 32, "mat0": 32, "mat0_int": 32, "functional_01": 32, "191x1": 32, "img_arr": [32, 71], "spm_read_vol": 32, "new_fnam": 32, "another_imag": [32, 64], "new_vol": 32, "spm_write_vol": 32, "scratch": 32, "yet_another_imag": 32, "spm_create_vol": 32, "vox_z": 32, "spm_write_plan": 32, "dynam": [32, 35, 37, 105, 111, 114], "15": [32, 37, 43, 62, 64, 65, 86, 99], "hold_val": 32, "spline": [32, 112], "spm_sample_vol": 32, "0510": 32, "0531": 32, "arg": [32, 70, 72, 73, 76, 77, 78, 79, 80, 81, 83, 84, 85, 89, 90, 91, 94, 96, 98, 101, 103, 104, 105, 107, 108, 110, 111, 117, 120, 122, 125, 126], "dy": 32, "dz": 32, "0033": 32, "0012": [32, 33, 35], "0020": [32, 33, 35, 37, 40], "0017": 32, "wc": 32, "48": [32, 44, 65], "5000": [32, 79], "58": 32, "0000": [32, 37], "6792": 32, "odder": 32, "slice_mat": 32, "out_siz": 32, "slice_no": [32, 111], "fetch": [32, 45, 53, 55, 57, 64, 86, 89, 117], "arr_slic": 32, "spm_slice_vol": 32, "img_slice_4": 32, "simplest": [32, 38, 44, 54, 63], "spm_conv_vol": 32, "convolv": 32, "spm_render_vol": 32, "spm_vol_check": 32, "delphi": 33, "pascal": 33, "mricron": [33, 36], "nitrc": [33, 79, 96, 106, 120], "bsd": [33, 36, 58, 69], "lazaru": 33, "freepasc": 33, "mac": [33, 78], "installing_lazarus_on_macos_x": 33, "gave": [33, 43], "carbon": 33, "hu": 33, "macosx_version_min": 33, "k10": 33, "xr": 33, "sdk": 33, "macosx10": 33, "inspir": [33, 70], "neuro": 33, "pool": [33, 40], "dicomfastread": 33, "pa": [33, 111], "dicomcompat": 33, "imagetyp": [33, 42], "datetim": 33, "studyd": 33, "studytim": 33, "dicomtyp": 33, "acquisitionnumb": [33, 42], "echonumb": [33, 42], "presum": [33, 37, 42], "scanningsequ": 33, "seriesnumb": [33, 42], "differenti": 33, "is_4d": 33, "2001": [33, 96], "numberoftemporalposit": 33, "numberoffram": 33, "sortdicom": 33, "shellsortdcm": 33, "dcm1": 33, "dcm2": 33, "instancenumb": [33, 42], "0013": [33, 35], "0011": [33, 35, 37], "ever": [33, 43], "formula": [34, 42, 88, 114], "csa1": 34, "csa2": 34, "spm_dicom_dict": 34, "spm_dicom_head": [34, 36, 41], "spm_dicom_convert": [34, 36], "talk": [35, 63], "modal": [35, 37, 42], "0008": [35, 37], "0060": 35, "equip": [35, 37, 61], "uid": 35, "000e": 35, "0031": 35, "0032": [35, 37, 40], "1041": [35, 40], "unspecifi": [35, 37, 38, 78, 105], "0018": [35, 40], "0050": 35, "0088": [35, 40], "tocent": 35, "tempor": [35, 63, 94], "0100": [35, 37], "0105": 35, "total": [35, 79, 92, 120], "prescrib": 35, "0110": 35, "delta": [35, 40, 42, 94, 124], "0028": [35, 37, 40], "0009": 35, "aspect": [36, 123], "partli": 36, "grassroot": 36, "gdcm": [36, 41], "callabl": [36, 74, 84, 92, 109, 120, 124], "dcm2nii": 36, "battl": 36, "spm8": [36, 41, 42], "gpl": [36, 86], "dicom2nrrd": 36, "nrrd": 36, "ge": [36, 40, 42], "famou": 36, "cookbook": 36, "dicomcookbook": 36, "onlin": [36, 52, 58], "fr": 36, "dicomlink": 36, "barr": 36, "nom": 36, "pubimag": 36, "hcuge": 36, "ch": [36, 61], "8080": 36, "network": [37, 45], "iod": 37, "exchang": 37, "media": 37, "interchang": 37, "physic": 37, "14": [37, 45, 56, 59, 62, 64, 65, 70, 96, 111], "explanatori": 37, "wado": 37, "hl7": 37, "badli": 37, "hexadecim": 37, "0010": [37, 39, 40], "patientnam": 37, "0002": [37, 54], "0004": 37, "0006": 37, "annex": 37, "eeee": 37, "reserv": [37, 61, 79], "0001": [37, 54], "0003": 37, "0005": 37, "0007": 37, "ffff": 37, "collis": 37, "creator": [37, 39, 104], "gggg": 37, "00xx": 37, "portion": [37, 61], "xx": [37, 41], "xx00": 37, "xxff": 37, "0019": 37, "10ff": 37, "implementor": 37, "shall": [37, 40, 61], "00ff": 37, "insert": [37, 42, 45, 68, 71, 79, 83, 86, 94, 118, 119, 120, 125], "identif": 37, "unus": [37, 41, 64, 69, 86], "unassign": 37, "vm": [37, 41], "1100": 37, "11ff": 37, "ff00": 37, "unreserv": 37, "AS": [37, 61], "ag": 37, "da": 37, "fl": 37, "fd": [37, 39], "lt": 37, "ob": [37, 41, 42, 124], "OF": [37, 61], "ow": 37, "pn": 37, "sh": 37, "sl": [37, 111], "sq": 37, "ss": [37, 111], "tm": 37, "ui": 37, "ul": 37, "un": 37, "ut": 37, "unlimit": 37, "termin": [37, 41, 59, 93], "ffffffffh": 37, "negoti": 37, "excerpt": 37, "patientid": 37, "0021": 37, "issuer": 37, "issuerofpatientid": 37, "0022": 37, "typeofpatientid": 37, "0024": 37, "qualifi": 37, "issuerofpatientidqualifierssequ": 37, "0030": [37, 40], "birth": 37, "patientbirthd": 37, "patientbirthtim": 37, "shorter": 37, "indirectli": 37, "studi": 37, "fiduci": 37, "sr": 37, "waveform": 37, "spectroscopi": [37, 42], "stereometr": 37, "diagram": [37, 104], "atom": [37, 68], "sent": [37, 40, 120], "Such": [37, 74], "inher": 37, "composit": [37, 88], "ct": [37, 42], "classic": 37, "intrins": [37, 88], "serv": 37, "pd": 37, "reson": 37, "clinic": 37, "trial": [37, 86], "bolu": 37, "devic": 37, "specimen": 37, "22": [37, 38, 40, 42, 62, 64, 65], "overlai": 37, "voi": 37, "lut": 37, "compos": [37, 120], "mandatori": 37, "lastli": 37, "macro": 37, "referenc": 37, "0054": [37, 39], "0410": 37, "graviti": 37, "baselin": 37, "0412": 37, "1c": 37, "gantri": 37, "0414": 37, "scu": 37, "client": 37, "scp": 37, "arriv": [37, 96], "null": [37, 41, 104], "iop": [37, 104], "transmit": [37, 40], "preambl": 37, "dicm": [37, 42], "0103": 37, "pylab": 38, "dcm_data": [38, 104], "read_fil": [38, 104, 113], "my_fil": [38, 69], "pixel_arrai": [38, 40], "slab": [38, 104], "n_slice_row": [38, 104], "n_slice_col": [38, 104], "n_slab_row": [38, 104], "n_slab_col": [38, 104], "squar": [38, 42, 104, 114], "n_block": [38, 104], "n_slice": [38, 104], "numberofimagesinmosa": [38, 42, 104], "n_row_block": [38, 104], "n_col_block": [38, 104], "sqrt": [38, 104, 114], "mathbf": [38, 40], "diag": [38, 57, 64, 65, 70, 71, 104, 105, 112, 114, 116, 117, 119], "voxel_arrai": 38, "imageorientationpati": [38, 40, 42], "slicenormalvector": 38, "s_1": 38, "s_2": 38, "pixelspac": [38, 40, 42], "s_3": 38, "spacingbetweenslic": 38, "imagepositionpati": [38, 40, 42], "adjust": [38, 64, 104, 112, 117, 124], "c_x": 38, "c_y": 38, "c_z": 38, "rd_": 38, "col": [38, 115], "md_": 38, "faulti": 38, "rowss": 38, "rs_": 38, "rescaleslop": [38, 42], "rescaleintercept": [38, 42], "henc": [38, 78, 124], "amongst": 39, "ecod": [39, 105], "facilit": 39, "commerci": 39, "pmod": 39, "durat": [39, 105, 121], "0055": 39, "1001": 39, "1004": 39, "nim": 39, "pmod_pet": 39, "dcmext": 39, "bq": 39, "ml": 39, "pmod_1": 39, "13720": 39, "14320": 39, "30000": 39, "600000": 39, "get_cont": [39, 68, 105], "start_tim": 39, "0x0055": 39, "0x1001": 39, "0x1004": 39, "pet": [39, 86], "add_new": 39, "0x0054": 39, "0x0010": 39, "nifti1dicomextens": [39, 68], "pet_withdcm": 39, "Be": 39, "2009": [40, 61, 62], "2210": 40, "bipe": 40, "quadup": 40, "funni": [40, 54, 91], "doctor": 40, "held": 40, "her": 40, "spiderman": 40, "shoot": 40, "palm": 40, "finger": [40, 88], "7fe0": 40, "upper": [40, 124], "remaind": 40, "horizont": 40, "dcluni": 40, "faq": 40, "part2": 40, "cosin": [40, 42, 94], "0037": 40, "dpc": 40, "img_ornt_pat": 40, "rc": [40, 124], "conjunct": 40, "p_x": 40, "p_y": 40, "p_z": 40, "x_x": 40, "y_x": 40, "s_x": 40, "x_y": 40, "y_y": 40, "s_y": 40, "x_z": 40, "y_z": 40, "s_z": 40, "p_": 40, "s_": 40, "x_": 40, "y_": 40, "oh": 40, "dear": 40, "pixar": 40, "sorri": 40, "smallmatrix": [40, 42], "i_1": 40, "i_6": 40, "i_4": 40, "i_5": 40, "i_2": 40, "i_3": 40, "f_": [40, 42], "descend": 40, "k_1": 40, "k_2": 40, "k_3": 40, "n_1": [40, 42], "n_2": [40, 42], "n_3": [40, 42], "cdot": 40, "k_": 40, "frac": 40, "n_": 40, "spm_dicom_ori": [40, 42], "proport": [40, 104], "sliceloc": 40, "reliabl": [40, 86], "a_j": 40, "inner": 40, "neat": [40, 64, 65], "123": 40, "lambda": [40, 124], "syngo": 41, "0029": [41, 42], "num": 41, "20100114": [41, 42], "1010": 41, "11560": 41, "80248": 41, "csaimageheaderinfo": [41, 42], "whatev": 41, "sv10": 41, "csa_posit": 41, "sensibli": 41, "csa_max_po": 41, "n_tag": [41, 104], "uint32": 41, "abort": [41, 45], "s64": 41, "int32": [41, 78, 86, 95, 105, 124], "s4": [41, 71, 105, 106, 118, 119], "syngodt": 41, "nitem": 41, "item_len": 41, "tp": 41, "next_item_po": 41, "hdr_id": 41, "unused1": [41, 71, 118, 119], "unused2": 41, "filepoint": 41, "januari": [42, 62, 120], "cell": [42, 115], "john": [42, 118], "ahsburn": 42, "ja": 42, "subfunct": 42, "readdicomfil": 42, "po": [42, 89, 90, 117], "read_dicom": 42, "twin": 42, "excit": 42, "fffe": 42, "e00d": 42, "he": 42, "read_tag": 42, "x00x00": 42, "imagedelimitationitem": 42, "ahead": [42, 45], "4294967295": 42, "inf": [42, 78, 105, 118, 119, 120, 124], "reset": [42, 45, 65, 68, 73, 107], "ashburn": [42, 118], "jesper": 42, "andersson": 42, "sopclassuid": 42, "1107": 42, "1210": 42, "pt": [42, 70, 120], "startofpixeldata": 42, "samplesperpixel": 42, "bitsalloc": 42, "bitsstor": 42, "highbit": 42, "pixelrespresent": 42, "acquisitionmatrixtext": 42, "ice_dim": 42, "ice1": 42, "ic": [42, 104], "ice2": 42, "iff": [42, 71, 104, 108], "toler": [42, 80, 104, 110], "1e": [42, 104, 114], "sequencenam": 42, "seriesinstanceuid": 42, "z_dir_co": 42, "caught": 42, "recalcul": 42, "gap": [42, 78, 92, 111], "subtract": [42, 73, 124], "averag": 42, "work_list": 42, "bail": 42, "relic": 42, "is_process": 42, "hdr_vol_out": 42, "hdr_to_check": 42, "z_same_indic": 42, "zsind": 42, "emit": [42, 83, 111], "confusingli": [42, 63, 88], "dealt": 42, "analyze_to_dicom": 42, "grow": 43, "peculiar": 43, "data_path": [43, 56, 57, 64, 65, 81, 82], "example4d": [43, 56, 57, 64, 65, 76, 82], "example_filenam": 43, "96": [43, 57, 64, 65], "get_xyzt_unit": [43, 68, 105], "sec": 43, "setter": 43, "complianc": 43, "courag": 43, "structarr": [43, 68, 71, 125], "lowest": [43, 111], "safeti": 43, "trivial": [43, 108], "test4d": 43, "quick": [43, 54, 57, 80], "gitconfig": 44, "yourdomain": [44, 54], "br": 44, "wdiff": 44, "vim": 44, "shorten": 44, "lg": [44, 45], "cred": 44, "creset": 44, "cgreen": 44, "cr": 44, "abbrev": 44, "6d8e1e": 44, "ago": 44, "d304a73": 44, "hhuuggoo": 44, "terhorst": 44, "4aff2a8": 44, "test_bugfix": 44, "hugo": 44, "a7ff2e5": 44, "summit": 44, "corran": 44, "webster": 44, "68f6752": 44, "axisindex": 44, "index_bi": 44, "sketchi": 44, "corr": 44, "376adbd": 44, "b605216": 44, "joshu": 44, "2e991e8": 44, "outer": [44, 123], "7beda5a": 44, "throw": [44, 57, 71, 92], "65af65": 44, "956fbab": 44, "yuri": 44, "zaytsev": 44, "fork": [45, 48, 52, 54], "ipython": [45, 60, 64, 120], "stuck": 45, "organ": 45, "linux": [45, 51, 59], "strang": [45, 98, 104], "branchnam": 45, "fly": [45, 125], "buxfix": 45, "my_new_fil": 45, "am": [45, 54, 76], "ny": [45, 79], "untrack": 45, "new_file_nam": 45, "faith": [45, 54], "tangl": 45, "dropdown": 45, "menu": 45, "enter": [45, 124], "attent": 45, "happi": [45, 94, 111], "unwant": 45, "colon": 45, "account": [45, 48, 104, 111, 117], "admin": 45, "collabor": 45, "githhub": 45, "enh": 45, "graphic": [45, 63, 88], "gitk": 45, "cool": [45, 53], "meantim": 45, "sternli": 45, "messi": 45, "harmon": [45, 79, 105, 117], "replai": 45, "tear": 45, "backup": 45, "succinctli": 45, "man": 45, "luckili": 45, "notic": [45, 61], "forgot": 45, "reflog": 45, "8630830": 45, "immedi": [45, 64, 82, 94], "278dd2a": 45, "11ee694744f2552d": 45, "26aa21a": 45, "lib": [45, 86], "seek_gzip_factori": 45, "obj": [45, 71, 72, 73, 74, 76, 80, 82, 94, 101, 102, 105, 106, 111, 117, 118, 119, 120, 122, 124], "botch": 45, "embarass": 45, "poster": 45, "suppos": 45, "onelin": [45, 53], "eadc391": 45, "a815645": 45, "2dec1ac": 45, "13d7934": 45, "6ad92e5": 45, "maskedconst": 45, "29001ed": 45, "nep": 45, "copul": 45, "structured_array_extens": 45, "editor": [45, 60, 88], "reword": 45, "amend": 45, "squash": 45, "meld": 45, "fixup": 45, "THAT": 45, "WILL": 45, "BE": [45, 61], "ii": 45, "collaps": [45, 117], "detach": 45, "721fc64": 45, "foo": [45, 91], "199": 45, "0f22701": 45, "79": 45, "successfulli": 45, "went": 45, "recoveri": 45, "cd": [46, 54, 55, 60], "articl": [47, 78], "paus": 47, "hardcor": 47, "mirror": 48, "sudo": [49, 59, 60], "fedora": 49, "yum": 49, "msysgit": 49, "scm": 49, "book": [49, 51], "tailor": 50, "servic": [50, 61, 127], "quicker": [50, 92], "pro": 51, "sheet": 51, "video": 51, "snippet": [51, 58, 61, 126], "tos": 51, "intermedi": [51, 92], "parabl": 51, "concept": [51, 58, 124], "foundat": 51, "tip": 51, "svn": 51, "linu": 51, "torvald": 51, "scari": 53, "rebas": 53, "ff": 53, "rejoin": 53, "compact": [53, 65], "quickest": 54, "test_my_bug": 54, "warmli": 54, "deliber": [55, 63], "satisfact": 55, "voxel_data": 56, "single_line_axis_0": 56, "single_line_axis_1": 56, "single_line_axis_2": 56, "example_fil": [56, 57, 64, 121], "117": [56, 64, 65], "72": [56, 64, 65], "aff2axcod": [56, 64, 68], "rearrang": 56, "as_closest_canon": [56, 68], "canonical_img": [56, 95], "136": 56, "wait": [57, 89], "data_again": [57, 64, 82], "array_data": [57, 64, 65], "array_img": [57, 64, 65], "data_once_mor": 57, "proxy_img": 57, "data_arrai": 57, "unchang": [57, 64, 82, 105, 117], "awai": [57, 71, 72, 92], "plain": [58, 69], "spm99": [58, 69, 119], "spm2": [58, 69, 118], "brik": [58, 69, 76], "pynifti": [58, 62, 69], "offlin": 58, "rough": 58, "bertrand": 58, "thirion": 58, "balling": 58, "valentin": 58, "haenel": 58, "satrajit": 58, "gervai": 58, "justin": 58, "lecher": 58, "oliv": 58, "hind": 58, "kevin": 58, "hahn": 58, "erik": 58, "peter": 58, "fischer": 58, "syam": 58, "gadd": 58, "garc\u00eda": 58, "s\u00f3lon": 58, "beer": 58, "speech": 58, "subscript": [58, 104], "subscrib": 58, "sidebar": 58, "rpm": 59, "cmd": 59, "powershel": 59, "permiss": [59, 61], "aka": 59, "invok": 59, "fire": [59, 107], "sep": [59, 62, 80], "anaconda": 59, "credit": 59, "pyarg": 59, "curl": [60, 88], "zxvf": 60, "shell": [60, 96], "dir": [60, 121], "_nipi": [60, 87], "2019": [61, 62, 82], "gmail": 61, "unidesign": 61, "2006": [61, 62, 88, 104], "2014": [61, 62, 120], "umassm": 61, "onerussian": 61, "herebi": 61, "charg": 61, "sublicens": 61, "sell": 61, "whom": 61, "furnish": 61, "THE": 61, "warranti": 61, "BUT": 61, "TO": 61, "merchant": 61, "FOR": 61, "AND": [61, 118], "noninfring": 61, "IN": 61, "NO": 61, "holder": [61, 89, 117], "liabl": 61, "liabil": 61, "contract": 61, "tort": 61, "aris": [61, 88, 92], "WITH": 61, "1999": 61, "redistribut": 61, "met": 61, "disclaim": 61, "materi": 61, "enthought": 61, "endors": 61, "BY": 61, "regent": 61, "indirect": 61, "incident": 61, "exemplari": 61, "consequenti": 61, "procur": 61, "profit": 61, "busi": 61, "interrupt": [61, 92], "ON": 61, "neglig": 61, "IF": 61, "SUCH": 61, "jul": [61, 62], "2007": [61, 62], "stefan": 61, "der": 61, "walt": 61, "oset": 61, "pythonhost": 61, "d6": 61, "b1": 61, "a49498c699a3fda5d635cc1fa222ffc686ea3b5d04b84a3166c4cab0c57b": 61, "raymond": [61, 107], "hetting": [61, 107], "odict": 61, "bluedynam": 61, "allianc": 61, "austria": 61, "subsampl": [61, 117], "softwwar": 61, "1993": 61, "2004": 61, "loui": 61, "collin": 61, "mcconnel": 61, "centr": 61, "mcgill": 61, "fee": 61, "injuri": 61, "misus": 61, "phantom_epi_asc_clear_2_1": [61, 111], "phantom_epi_3mm_cor_20aptrans_15rlrot_sense_15_1": 61, "phantom_epi_3mm_cor_sense_8_1": 61, "phantom_epi_3mm_sag_15ap_sense_13_1": 61, "phantom_epi_3mm_sag_15fh_sense_12_1": 61, "phantom_epi_3mm_sag_15rl_sense_11_1": 61, "phantom_epi_3mm_sag_sense_7_1": 61, "phantom_epi_3mm_tra_": 61, "30ap_10rl_20fh_sense_14_1": 61, "phantom_epi_3mm_tra_15fh_sense_9_1": 61, "phantom_epi_3mm_tra_15rl_sense_10_1": 61, "phantom_epi_3mm_tra_sense_6_1": 61, "psydata": 61, "ovgu": 61, "philips_achieva_testfil": 61, "opendatacommon": 61, "dti": 61, "na": [61, 77, 79], "t2": [61, 91], "interleav": 61, "t2_": 61, "fieldmap": 61, "umass_anonym": 61, "courtesi": 61, "massachusett": 61, "school": 61, "fall": [62, 104, 105], "autosummari": 62, "orderedset": [62, 124], "mni_icbm152_t1_tal_nlin_asym_09a": 62, "mondai": 62, "2023": 62, "wednesdai": 62, "august": 62, "2022": 62, "saturdai": 62, "june": 62, "februari": 62, "novemb": [62, 82], "tuesdai": 62, "octob": 62, "fridai": 62, "march": 62, "decemb": 62, "septemb": 62, "sundai": 62, "2017": 62, "2016": [62, 104], "thursdai": 62, "feb": 62, "oct": 62, "20100706": 62, "tue": 62, "20100412": 62, "mon": 62, "apr": 62, "20090303": 62, "mar": 62, "20090205": 62, "20081017": 62, "fri": 62, "2008": 62, "20080710": 62, "20080630": 62, "jun": 62, "20080624": 62, "20070930": 62, "sun": 62, "20070917": 62, "20070905": 62, "wed": 62, "20070803": 62, "20070425": 62, "20070315": 62, "20070301": 62, "20070220": 62, "20070214": 62, "20061114": 62, "nov": 62, "radiologist": [63, 71], "feet": 63, "neurologist": [63, 71], "tast": 63, "stroke": 63, "lobe": 63, "dark": 63, "movement": [63, 123], "3x3": [63, 88, 114], "diag_affin": 63, "ijk": [63, 79], "screen": 63, "img_data": 63, "75": [63, 104], "a_slic": 63, "neurologi": 63, "commonli": [63, 117], "nipyer": 63, "conceptu": 63, "bear": 63, "radiog": 63, "exclus": [63, 76], "tab": 64, "nifti1head": [64, 65, 68, 106, 111], "sizeof_hdr": [64, 65, 68, 71, 105, 106, 118, 119], "data_typ": [64, 65, 71, 105, 118, 119], "db_name": [64, 65, 71, 105, 118, 119], "session_error": [64, 65, 71, 105, 118, 119], "intent_p1": [64, 65, 105, 106], "intent_p2": [64, 65, 105, 106], "intent_p3": [64, 65, 105, 106], "intent_cod": [64, 65, 96, 105, 106], "bitpix": [64, 65, 71, 74, 105, 106, 118, 119], "2000": [64, 65, 114], "vox_offset": [64, 65, 71, 105, 106, 118, 119], "scl_slope": [64, 65, 105, 106, 118, 119], "scl_inter": [64, 65, 105, 106, 118], "1162": [64, 65], "slice_dur": [64, 65, 71, 105, 106], "glmax": [64, 65, 71, 105, 118, 119], "glmin": [64, 65, 71, 105, 118, 119], "fsl3": [64, 65], "x00": [64, 65], "aux_fil": [64, 65, 71, 105, 106, 118, 119], "quatern_b": [64, 65, 105, 106], "94510681403e": [64, 65], "quatern_c": [64, 65, 105, 106], "996708512306": [64, 65], "quatern_d": [64, 65, 105, 106], "081068739295": [64, 65], "qoffset_x": [64, 65, 105, 106], "855102539": [64, 65], "qoffset_i": [64, 65, 105, 106], "7229423523": [64, 65], "qoffset_z": [64, 65, 105, 106], "24879837036": [64, 65], "srow_x": [64, 65, 105, 106], "srow_i": [64, 65, 105, 106], "srow_z": [64, 65, 105, 106], "intent_nam": [64, 65, 105, 106], "get_zoom": [64, 68, 71, 76, 86, 94, 101, 105, 106, 117], "19999": 64, "image_data": [64, 120], "farray_img": 64, "farray_data": 64, "cropped_img": 64, "array_equ": [64, 76, 96], "64mm": 64, "induc": 64, "spectrum": 64, "399998": 64, "img_again": 64, "my_image_again": 64, "set_filenam": [64, 68, 89], "pair_img": 64, "nifti1pair": [64, 68, 106], "my_pair_imag": 64, "ana_img": 64, "analyzeimag": [64, 68, 89, 105, 117, 119], "analyze_imag": 64, "example_ni1": 65, "n1_img": 65, "example_ni2": 65, "example_nifti2": 65, "n2_img": 65, "nifti2imag": [65, 68], "n1_header": 65, "540": [65, 106], "n2_header": 65, "nifti2head": [65, 68, 79], "eol_check": [65, 106], "unused_str": [65, 106], "1200": 65, "set_": 65, "overal": 65, "get_sform": [65, 68, 105], "set_sform": [65, 68, 105, 106], "qfac": 65, "get_qform": [65, 68, 105], "set_qform": [65, 68, 105, 106], "resort": [65, 104], "nibabbl": 65, "get_base_affin": [65, 68, 71, 117], "127": [65, 78], "get_best_affin": [65, 68, 71, 94, 105, 117, 119], "initialis": [65, 105, 106], "newli": 65, "furthermor": 65, "unabl": 65, "shear": [65, 70, 105], "uninitialis": 65, "new_data": 65, "new_img": 65, "array_head": 65, "get_slope_int": [65, 68, 71, 72, 76, 94, 105, 118, 119], "set_slope_int": [65, 68, 71, 105, 119], "scaled_imag": 65, "scaled_img": 65, "50": [65, 74, 98], "optimum": 65, "ata": 66, "medit": 67, "fusion": 67, "novel": 67, "hous": 67, "fp": [67, 111], "imageerror": 67, "filespec": [67, 76, 86, 89, 94], "futz": 67, "img3": [67, 69, 117], "img4": 67, "mod_data": 67, "prepar": 67, "img5": 67, "fname2": 67, "set_filespec": 67, "ioimp": 67, "guessed_imp": 67, "fname3": 67, "set_data_shap": [67, 68, 71, 94, 105, 106, 117, 118, 119], "slice_def": 67, "write_slic": 67, "imageioerror": 67, "quickstart": 68, "bench": [68, 75], "get_info": 68, "affineerror": 68, "append_diag": 68, "dot_reduc": 68, "from_matvec": 68, "to_matvec": [68, 116], "analyzehead": [68, 74, 118, 119], "as_analyze_map": [68, 71, 111], "data_from_fileobj": [68, 71, 86, 94, 101, 117], "data_to_fileobj": [68, 71, 101, 117], "default_structarr": [68, 71, 86, 94, 105, 106, 119, 125], "default_x_flip": [68, 71, 117, 119], "from_head": [68, 71, 76, 89, 94, 105, 111, 117], "get_data_offset": [68, 71, 72, 76, 94, 111], "guessed_endian": [68, 71, 86, 94, 125], "has_data_intercept": [68, 71, 105, 119], "has_data_slop": [68, 71, 105, 119], "may_contain_head": [68, 71, 79, 101, 102, 105, 106, 118], "raw_data_from_fileobj": [68, 71, 86], "set_data_offset": [68, 71, 111], "set_zoom": [68, 71, 94, 117, 119], "template_dtyp": [68, 71, 86, 94, 105, 106, 118, 119, 125], "imagearrayproxi": [68, 71, 76, 86, 94, 101, 111], "files_typ": [68, 71, 76, 79, 86, 89, 94, 96, 101, 105, 111, 119], "header_class": [68, 71, 76, 79, 86, 89, 94, 101, 102, 105, 106, 111, 117, 118, 119], "makeabl": [68, 71, 76, 79, 89, 94, 101, 111, 119], "to_file_map": [68, 71, 79, 86, 89, 94, 96, 105, 117, 119], "valid_ext": [68, 71, 76, 79, 86, 89, 94, 96, 101, 105, 108, 111], "arraylik": [68, 82], "get_obj_dtyp": 68, "reshape_dataobj": 68, "finite_rang": [68, 73, 75], "has_nan": [68, 73, 124], "out_dtyp": [68, 73, 124], "scaling_need": [68, 73], "scalingerror": 68, "slopearraywrit": 68, "calc_scal": [68, 73], "slopeinterarraywrit": 68, "writererror": 68, "make_array_writ": 68, "check_fix": [68, 74, 125], "check_onli": [68, 74], "log_rais": [68, 74, 98], "write_rais": [68, 74], "bench_array_to_fil": 68, "bench_arrayproxy_sl": 68, "bench_fileslic": [68, 92], "bench_finite_rang": 68, "bench_load_sav": 68, "butil": 68, "run_slic": 68, "print_git_titl": 68, "afniarrayproxi": 68, "afnihead": 68, "from_fileobj": [68, 76, 89, 94, 105, 111, 117, 125], "get_data_sc": [68, 76, 111], "get_spac": [68, 76], "get_volume_label": [68, 76, 111], "afniheadererror": 68, "afniimag": 68, "filespec_to_file_map": [68, 76, 89, 94], "afniimageerror": 68, "parse_afni_head": 68, "caretmetadata": [68, 79, 96], "castingerror": 68, "floatingerror": 68, "able_int_typ": 68, "as_int": 68, "best_float": 68, "ceil_exact": 68, "float_to_int": 68, "floor_exact": 68, "floor_log2": 68, "have_binary128": 68, "int_ab": 68, "int_to_float": 68, "longdouble_lte_float64": 68, "longdouble_precision_improv": 68, "ok_float": 68, "on_powerpc": 68, "shared_rang": 68, "type_info": 68, "ulp": 68, "cifti2_ax": 68, "parse_cifti2": 68, "cifti2brainmodel": 68, "vertex_indic": [68, 79], "voxel_indices_ijk": [68, 79], "cifti2head": 68, "from_ax": [68, 79], "get_axi": [68, 79], "get_index_map": [68, 79], "mapped_indic": [68, 79], "number_of_mapped_indic": [68, 79], "cifti2headererror": 68, "from_imag": [68, 79, 86, 89, 117], "nifti_head": [68, 79], "update_head": [68, 79, 105, 117], "cifti2label": 68, "rgba": [68, 79, 96], "cifti2labelt": 68, "cifti2matrix": 68, "cifti2matrixindicesmap": 68, "brain_model": [68, 79], "named_map": [68, 79], "difference_upd": [68, 79], "cifti2namedmap": 68, "label_t": [68, 79], "cifti2parcel": 68, "append_cifti_vertic": [68, 79], "pop_cifti2_vertic": [68, 79], "cifti2surfac": 68, "cifti2transformationmatrixvoxelindicesijktoxyz": 68, "cifti2vertexindic": 68, "cifti2vertic": 68, "cifti2volum": 68, "cifti2voxelindicesijk": 68, "limitednifti2head": 68, "from_index_map": 68, "from_mask": [68, 79], "from_surfac": [68, 79], "get_el": [68, 79], "iter_structur": [68, 79], "surface_mask": [68, 79], "to_cifti_brain_structure_nam": [68, 79], "to_map": [68, 79], "volume_mask": [68, 79], "volume_shap": [68, 79], "labelaxi": 68, "parcelsaxi": 68, "from_brain_model": [68, 79], "scalaraxi": 68, "seriesaxi": 68, "to_head": 68, "cifti2extens": 68, "cifti2pars": 68, "characterdatahandl": [68, 79, 96, 126], "endelementhandl": [68, 79, 96, 126], "startelementhandl": [68, 79, 96, 126], "flush_chardata": [68, 79, 96], "pending_data": [68, 79, 96], "nifti_dx": 68, "tck2trk": 68, "trk2tck": 68, "get_path": [68, 80], "getattr": [68, 80], "match_path": [68, 80], "readdir": [68, 80], "dummy_fus": 68, "fuse_python_api": [68, 80], "get_opt_pars": 68, "are_values_differ": 68, "display_diff": 68, "get_data_diff": 68, "get_data_hash_diff": 68, "get_headers_diff": 68, "proc_fil": 68, "verbos": [68, 69, 79, 96, 126], "lossless_slic": 68, "parse_slic": 68, "sanit": 68, "parse_arg": 68, "ap": [68, 81, 111], "safe_get": 68, "table2str": 68, "bomber": 68, "bombererror": 68, "list_fil": [68, 81], "versioneddatasourc": 68, "datasource_or_bomb": 68, "find_data_dir": 68, "futurewarningmixin": 68, "warn_messag": [68, 83], "moduleproxi": 68, "visibledeprecationwarn": 68, "alert_future_error": 68, "is_bad_vers": [68, 84], "cachingerror": 68, "dfterror": 68, "instancestackerror": 68, "volumeerror": 68, "clear_cach": 68, "get_studi": 68, "update_cach": 68, "ecathead": 68, "get_filetyp": [68, 86], "get_patient_ori": [68, 86], "ecatimag": 68, "get_fram": [68, 86], "get_frame_affin": [68, 86], "get_mlist": [68, 86], "get_subhead": [68, 86], "ecatimagearrayproxi": 68, "ecatsubhead": 68, "get_nfram": [68, 86], "get_frame_ord": 68, "get_series_framenumb": 68, "read_mlist": 68, "read_subhead": 68, "get_home_dir": 68, "get_nipy_system_dir": [68, 81], "angle_axis2eul": 68, "euler2angle_axi": 68, "euler2mat": 68, "euler2quat": 68, "mat2eul": 68, "quat2eul": 68, "filebasedhead": [68, 79, 82, 117, 126], "write_to": [68, 89, 105, 117, 125], "instance_to_filenam": [68, 89, 117], "make_file_map": [68, 89, 117], "path_maybe_imag": [68, 89], "imagefileerror": [68, 76, 94, 105, 106], "file_lik": [68, 72, 75, 76, 90, 94, 104, 111], "get_prepare_fileobj": [68, 90], "same_file_a": [68, 90], "fileholdererror": 68, "copy_file_map": 68, "typesfilenameserror": 68, "parse_filenam": 68, "splitext_addext": 68, "types_filenam": 68, "calc_slicedef": 68, "canonical_slic": 68, "fill_slic": 68, "is_fanc": 68, "optimize_read_slic": 68, "optimize_slic": 68, "predict_shap": 68, "read_seg": 68, "slice2len": 68, "slice2outax": 68, "slicers2seg": 68, "strided_scalar": 68, "threshold_heurist": 68, "read_zt_byte_str": 68, "mghformat": 68, "write_annot": 68, "mgherror": 68, "mghheader": 68, "as_byteswap": [68, 94, 125], "chk_version": [68, 94], "diagnose_binaryblock": [68, 94, 125], "get_data_bytespervox": [68, 94], "get_data_s": [68, 94], "get_footer_offset": [68, 94], "get_ras2vox": [68, 94], "get_vox2ra": [68, 94], "get_vox2ras_tkr": [68, 94], "writeftr_to": [68, 94], "writehdr_to": [68, 94], "squeeze_imag": 68, "gifticoordsystem": 68, "print_summari": [68, 96], "add_gifti_data_arrai": [68, 96], "get_arrays_from_int": [68, 96], "labelt": [68, 79, 96], "numda": [68, 96], "remove_gifti_data_arrai": [68, 96], "remove_gifti_data_array_by_int": [68, 96], "giftilabel": 68, "giftilabelt": 68, "get_labels_as_dict": [68, 96], "from_dict": [68, 96], "giftinvpair": 68, "giftiparseerror": 68, "read_data_block": 68, "spatial_axes_first": 68, "errorlevel": 68, "loggingoutputsuppressor": 68, "count_nonzero_voxel": 68, "mask_volum": 68, "get_scaled_data": [68, 101, 102], "minc1head": 68, "mincerror": 68, "minchead": [68, 102], "data_layout": [68, 101, 117], "mincimagearrayproxi": 68, "hdf5bunch": 68, "minc2fil": 68, "minc2head": 68, "minc2imag": 68, "mrierror": 68, "calculate_dwell_tim": 68, "csaread": 68, "dicomread": 68, "dwiparam": 68, "structread": 68, "ascconvparseerror": 68, "novalu": 68, "assign2atom": 68, "obj_from_atom": 68, "parse_ascconv": 68, "csaerror": 68, "csareaderror": 68, "get_acq_mat_txt": 68, "get_b_matrix": 68, "get_b_valu": 68, "get_csa_head": 68, "get_g_vector": 68, "get_ice_dim": 68, "get_n_mosa": 68, "get_scalar": 68, "get_slice_norm": 68, "get_vector": 68, "is_mosa": 68, "nt_str": 68, "dicomreaderror": 68, "mosaic_to_nii": 68, "read_mosaic_dir": 68, "read_mosaic_dwi_dir": 68, "slices_to_seri": 68, "mosaicwrapp": 68, "image_posit": [68, 104], "image_shap": [68, 104], "multiframewrapp": 68, "image_orient_pati": [68, 104], "is_multifram": [68, 104], "series_signatur": [68, 104], "siemenswrapp": 68, "b_matrix": [68, 104], "is_csa": [68, 104], "q_vector": [68, 104, 111], "slice_norm": [68, 104], "b_valu": [68, 104], "b_vector": [68, 104, 111], "get_pixel_arrai": [68, 104], "instance_numb": [68, 104], "is_same_seri": [68, 104], "rotation_matrix": [68, 88, 104, 114], "slice_ind": [68, 104], "wrappererror": 68, "wrapperprecisionerror": 68, "none_or_clos": 68, "wrapper_from_data": 68, "wrapper_from_fil": 68, "b2q": 68, "nearest_pos_semi_def": 68, "q2bg": 68, "find_private_sect": 68, "get_cod": [68, 105], "get_sizeondisk": [68, 105], "count": [68, 86, 99, 105, 124], "exts_klass": [68, 105], "get_dim_info": [68, 105], "get_int": [68, 105], "get_n_slic": [68, 105], "get_qform_quaternion": [68, 105], "get_slice_dur": [68, 105], "get_slice_tim": [68, 105], "is_singl": [68, 105, 106], "pair_mag": [68, 105, 106], "pair_vox_offset": [68, 105, 106], "quaternion_threshold": [68, 105, 106], "set_dim_info": [68, 105], "set_int": [68, 105], "set_slice_dur": [68, 105], "set_slice_tim": [68, 105], "set_xyzt_unit": [68, 105], "single_mag": [68, 105, 106], "single_vox_offset": [68, 105, 106], "as_reori": [68, 105, 117], "nifti1pairhead": 68, "nifti2pair": 68, "nifti2pairhead": 68, "onetimeproperti": 68, "resetmixin": 68, "deterministicgzipfil": 68, "imageopen": 68, "compress_ext_map": [68, 108], "bz2_def": [68, 108], "close_if_min": [68, 108], "compress_ext_icas": [68, 108], "default_compresslevel": [68, 108], "default_level_or_opt": [68, 108], "default_zst_compresslevel": [68, 108], "fileno": [68, 108], "gz_def": [68, 108], "zstd_def": [68, 108], "optional_packag": 68, "orientationerror": 68, "apply_orient": 68, "axcodes2ornt": 68, "inv_ornt_aff": 68, "io_orient": 68, "ornt2axcod": 68, "ornt_transform": 68, "parrecarrayproxi": 68, "parrecerror": 68, "parrechead": 68, "get_bvals_bvec": [68, 111], "get_def": [68, 111], "get_echo_train_length": [68, 111], "get_q_vector": [68, 111], "get_rec_shap": [68, 111], "get_slice_orient": [68, 111], "get_sorted_slice_indic": [68, 111], "get_water_fat_shift": [68, 111], "exts2par": 68, "one_lin": 68, "parse_par_head": 68, "vol_is_ful": 68, "vol_numb": 68, "adapt_affin": 68, "fwhm2sigma": 68, "resample_from_to": 68, "resample_to_output": 68, "sigma2fwhm": 68, "smooth_imag": 68, "dicom_test": 68, "angle_axis2mat": [68, 88], "angle_axis2quat": 68, "conjug": 68, "fillposit": 68, "invers": [68, 79, 94, 127], "isunit": 68, "mat2quat": 68, "mult": 68, "nearly_equival": 68, "norm": [68, 88, 104], "quat2angle_axi": 68, "quat2mat": [68, 88], "rotate_vector": 68, "rst_tabl": 68, "slice2volum": 68, "vox2out_vox": 68, "headerdataerror": [68, 71, 74, 76, 105, 119], "headertypeerror": [68, 71], "imagedataerror": [68, 76], "spatialfirstslic": 68, "check_slic": [68, 117], "slice_affin": [68, 117], "imageslic": [68, 117], "supported_np_typ": 68, "spm2analyzehead": 68, "spm2analyzeimag": 68, "spm99analyzehead": [68, 118], "get_origin_affin": [68, 119], "set_origin_from_affin": [68, 119], "spm99analyzeimag": [68, 118], "has_affin": [68, 119], "spmanalyzehead": [68, 105], "array_sequ": 68, "tractogram_fil": 68, "is_support": 68, "common_shap": [68, 120], "finalize_append": [68, 120], "is_array_sequ": 68, "is_sliced_view": [68, 120], "shrink_data": [68, 120], "total_nb_row": [68, 120], "create_arraysequences_from_gener": 68, "is_ndarray_of_int_or_bool": 68, "magic_numb": [68, 86, 120], "nb_point": [68, 120], "nb_properties_per_streamlin": [68, 120], "nb_scalars_per_point": [68, 120], "nb_streamlin": [68, 120], "step_siz": [68, 120], "voxel_to_rasmm": [68, 120], "eof_delimit": [68, 120], "fiber_delimit": [68, 120], "supports_data_per_point": [68, 120], "supports_data_per_streamlin": [68, 120], "create_empty_head": [68, 120], "lazydict": 68, "data_per_point": [68, 120], "data_per_streamlin": [68, 120], "from_data_func": [68, 120], "from_tractogram": [68, 120], "to_world": [68, 120], "perarraydict": 68, "perarraysequencedict": 68, "sliceabledatadict": 68, "affine_to_rasmm": [68, 120], "tractogramitem": 68, "is_data_dict": 68, "is_lazy_dict": 68, "datawarn": 68, "extensionwarn": 68, "headerwarn": 68, "tractogramfil": 68, "abstractclassmethod": 68, "header_s": [68, 120], "decode_value_from_nam": 68, "encode_value_in_nam": 68, "get_affine_rasmm_to_trackvi": 68, "get_affine_trackvis_to_rasmm": 68, "get_affine_from_refer": 68, "peek_next": 68, "ingivendirectori": 68, "is_tripwir": 68, "clim": [68, 123], "link_to": [68, 123], "n_volum": [68, 123], "set_posit": [68, 123], "set_volume_idx": [68, 123], "dtypemapp": 68, "add_cod": [68, 124], "value_set": [68, 124], "apply_read_sc": 68, "array_from_fil": 68, "best_write_scale_ftyp": 68, "better_float_of": 68, "fname_ext_ul_cas": 68, "int_scinter_ftyp": 68, "make_dt_cod": 68, "pretty_map": 68, "rec2dict": 68, "seek_tel": 68, "shape_zoom_affin": 68, "working_typ": 68, "write_zero": 68, "mapping": 68, "labeledwrapstruct": [68, 71, 94], "get_value_label": [68, 105, 125], "binaryblock": [68, 71, 79, 86, 94, 101, 102, 105, 106, 118, 119, 125], "wrapstructerror": 68, "xmlbasedhead": 68, "xmlparser": [68, 79, 96], "handler_nam": [68, 126], "xmlserializ": [68, 77, 79, 96], "other_fil": 69, "spm_file": 69, "my_file_copi": 69, "new_imag": 69, "extra_argv": 69, "mimic": 69, "nosetest": 69, "exitcod": 69, "raise_warn": 69, "timer": 69, "bool": [69, 70, 71, 73, 76, 79, 81, 82, 84, 88, 89, 90, 91, 92, 94, 97, 101, 104, 105, 109, 111, 114, 117, 118, 119, 124, 125], "nxm": 70, "aff_plu": 70, "inplac": [70, 74], "transformed_pt": 70, "contrari": 70, "freshli": 70, "dot_product": 70, "cardin": 70, "new_shap": 70, "nxn": 70, "4x3": 70, "v0": 70, "v1_ax1": 70, "tran": [70, 116], "rz": [70, 116], "euclidean": [70, 104], "vox_siz": 70, "mayo": 71, "apart": [71, 92], "inabl": 71, "rightmost": 71, "proceed": 71, "hdr1": [71, 118, 119], "native_cod": [71, 118, 119, 125], "binblock2": [71, 118, 119], "hdr2": [71, 118, 119], "opposit": [71, 110, 118, 119, 124], "hdr3": [71, 118, 119], "swapped_cod": [71, 118, 119, 125], "binblock3": [71, 118, 119], "hdr4": [71, 118, 119], "analyze_map": 71, "bytesio": [71, 89, 105, 108, 117, 124, 125], "str_io": [71, 105, 125], "tobyt": [71, 124], "getvalu": [71, 105, 124, 125], "fresh": [71, 105], "hdr_data": 71, "header_dtyp": 71, "sw_hdr_data": 71, "byteswap": [71, 105, 124, 125], "blank": [71, 86], "tie": 71, "breaker": 71, "1543569408": 71, "though": 71, "void": [71, 74, 105], "s10": [71, 86, 105, 118, 119, 124], "s18": [71, 105, 118, 119], "i2": [71, 76, 94, 105, 106, 118, 119, 124, 125], "s1": [71, 86, 105, 118, 119], "hkey_un0": [71, 118, 119], "vox_unit": [71, 118, 119], "cal_unit": [71, 118, 119], "s8": [71, 86, 118, 119], "dim_un0": [71, 118, 119], "f4": [71, 78, 86, 89, 94, 105, 117, 118, 119], "funused1": 71, "funused2": [71, 119], "funused3": [71, 118, 119], "s80": [71, 105, 106, 118, 119], "s24": [71, 105, 106, 118, 119], "scannum": [71, 118, 119], "patient_id": [71, 86, 118, 119], "exp_dat": [71, 118, 119], "exp_tim": [71, 118, 119], "hist_un0": [71, 118, 119], "s3": [71, 118, 119], "vols_ad": [71, 118, 119], "start_field": [71, 118, 119], "field_skip": [71, 118, 119], "omax": [71, 118, 119], "omin": [71, 118, 119], "smax": [71, 118, 119], "smin": [71, 118, 119], "kai": [71, 82, 94, 101, 102, 119], "file_typ": [71, 82, 86, 89, 94, 101, 102, 119], "lifetim": [71, 72, 76, 82, 86, 94, 101, 102, 119], "prox": 72, "slice_spec": 72, "stringent": 72, "storage_dtyp": 72, "_default_ord": 72, "min": [73, 78, 81, 102, 124], "max": [73, 78, 102, 110, 124], "check_scal": 73, "int8": [73, 78, 124], "finit": [73, 105, 124], "scaler_dtyp": 73, "254": 73, "strip": [73, 93, 104, 105], "out_typ": 73, "has_slop": 73, "has_intercept": 73, "batteri": 74, "runner": 74, "chk": 74, "btrun": 74, "fixed_obj": 74, "report_seq": 74, "problem_level": [74, 98], "problem_msg": 74, "fix_msg": 74, "chk_datatyp": 74, "rep": 74, "_data_type_cod": 74, "keyerror": [74, 105], "fix_problem_msg": 74, "chk_bitpix": 74, "items": [74, 92], "ret": [74, 124], "chk_pixdim": 74, "logger": [74, 98, 125], "error_level": [74, 98, 125], "log_level": 74, "filesl": 75, "file_": 75, "bz2": [75, 91, 108, 124], "zst": [75, 91, 108], "underlin": [75, 115], "pub": 76, "program_help": 76, "dataset_rank": 76, "denot": 76, "brick": 76, "parlanc": 76, "tradition": 76, "datadir": 76, "3511": 76, "tlrc": 76, "883363e": 76, "08": [76, 114], "holdov": 76, "elsedemo": 76, "afni_atlas_spac": 76, "niml": 76, "recogniz": [76, 89, 94], "byteorder_str": 76, "lsb_first": 76, "brick_typ": 76, "suppli": [77, 79], "child": [77, 79, 96], "md": [77, 79], "odditi": 78, "uint": [78, 124], "ityp": 78, "overflowerror": 78, "intel80": 78, "highest": [78, 111], "sparc": 78, "best_typ": 78, "flt_type": 78, "ceil_val": 78, "floor_val": 78, "significand": 78, "int_typ": 78, "infmax": 78, "clip": [78, 124], "delic": 78, "shared_min": 78, "shared_max": 78, "infin": 78, "iarr": 78, "c99": 78, "exce": 78, "32767": 78, "32768": 78, "log2": 78, "embarrassingli": 78, "binary_logarithm": 78, "abs_arr": 78, "magnitud": [78, 100], "msvc": 78, "power": [78, 79], "ibm": 78, "power7": 78, "mn": [78, 124], "mx": [78, 124], "2147483648": 78, "2147483520": 78, "np_type": [78, 117], "nexp": 78, "nmant": 78, "expon": [78, 79], "minexp": 78, "maxexp": 78, "finfo": [78, 114, 124], "2669": 78, "float96": 78, "protect": [78, 107], "ep": [78, 110, 114], "ulp_val": 78, "epsilon": [78, 110], "msg_id": [79, 106], "3738": [79, 106], "monoton": 79, "factori": 79, "tensor": [79, 96, 104], "descriptor": [79, 107], "colour": 79, "thalamu": 79, "bm_cortex": 79, "cortex_left": 79, "bm_thal": 79, "thalamus_left": 79, "cortic": 79, "2x2x2": 79, "indentifi": 79, "bm_full": 79, "hcp": 79, "grayordin": 79, "region": 79, "cifti_structure_cortex_left": 79, "cifti_structure_thalamus_left": 79, "slc": 79, "bm": 79, "surface_parcel": 79, "volume_parcel": 79, "combined_parcel": 79, "fmri": 79, "curvatur": [79, 94], "index_offset": 79, "index_count": 79, "model_typ": 79, "brain_structur": 79, "n_surface_vertic": 79, "indicesmaptodatatyp": 79, "cifti_index_type_brain_model": 79, "indexoffset": 79, "brainordin": 79, "indexcount": 79, "modeltyp": 79, "brainstructur": 79, "surfacenumberofvertic": 79, "cifti_model_type_surfac": 79, "vertexindic": 79, "voxelindicesijk": 79, "matrixindicesmap": 79, "cifti_model_typ": 79, "cifti_brain_structur": 79, "surface_number_of_vertic": 79, "cifti2_map": 79, "cimg": [79, 86, 89, 117], "alpha": [79, 88, 94, 96], "namedmap": 79, "cifti_index_type_label": 79, "mutablesequ": 79, "appliestomatrixdimens": 79, "applies_to_matrix_dimens": 79, "indices_map_to_data_typ": 79, "number_of_series_point": 79, "series_expon": 79, "series_start": 79, "series_step": 79, "series_unit": 79, "comma": 79, "numberofseriespoint": 79, "seriesexpon": 79, "seriesstart": 79, "seriesstep": 79, "005": 79, "quantiti": 79, "seriesunit": 79, "cifti_map_typ": 79, "map_nam": 79, "mapnam": 79, "ith": [79, 96], "pop": 79, "cifti_index_type_parcel": 79, "cerebellum": 79, "meter_expon": 79, "meterexpon": 79, "meter": 79, "sixteen": 79, "whitespac": 79, "volume_dimens": 79, "transform_matrix": 79, "volumedimens": 79, "transformationmatrixvoxelindicesijktoxyz": 79, "transformation_matrix_voxel_indices_ijk_to_xyz": 79, "tripl": 79, "nvertic": 79, "greyordin": 79, "array_lik": 79, "mim": 79, "nx": 79, "nz": 79, "nvertex": 79, "cortexright": 79, "brain_stem": 79, "cifti_model_type_voxel": 79, "yield": [79, 120], "left_cortex": 79, "leftcortex": 79, "test_nam": 79, "hcp_label": 79, "parcel_axi": 79, "named_brain_model": 79, "extension_cod": [79, 105], "runtim": [79, 105], "buffer_s": [79, 96, 120, 126], "3500000": 79, "expat": [79, 96, 126], "chunk": [79, 92, 93, 94, 96], "collat": [79, 96], "8k": [79, 96], "span": [79, 96], "attr": [79, 96, 104, 126], "fh": [80, 111], "fno": 80, "dummi": 80, "blow": 80, "header_field": 80, "data_max_abs_diff": 80, "data_max_rel_diff": 80, "max_ab": 80, "max_rel": 80, "maxim": 80, "lesser": 80, "cmp": 80, "md5": 80, "file_head": 80, "road": 80, "msg": [80, 81, 83, 122], "exit_cod": 80, "infil": [80, 124], "indent": 80, "allow_step": 80, "helplist": 80, "format_": 80, "verbose_level": 80, "hasattr": [81, 109], "base_path": 81, "prepend": [81, 104], "somedir": 81, "afil": 81, "path_part": 81, "file_list": 81, "config_filenam": 81, "config_filanam": 81, "pkg_def": 81, "viabl": 81, "hint": 81, "root_dir": 81, "data_dir": 81, "sys_dir": 81, "packaging_tool": 81, "msg05084": 81, "slash": 81, "rel_path": 81, "datobj": 82, "liter": [82, 105], "Will": [82, 96, 100, 107, 110, 113, 121], "reload": [82, 100], "img_fnam": 82, "ty": [82, 111], "npt": 82, "dtypelik": 82, "catch_warn": 83, "module_nam": 83, "nifti1_imag": 83, "userwarn": 83, "whatsnew": 83, "warning_class": [83, 84], "error_class": [83, 84], "warning_rec": 83, "error_rec": 83, "stacklevel": 83, "led": 83, "alert": 83, "guidanc": [83, 114], "version_compar": 84, "warn_class": 84, "__call__": 84, "version_str": 84, "is_bad": 84, "si": 85, "unsupport": [85, 117], "base_dir": 85, "followlink": 85, "mlist": 86, "hxist": 86, "ro": 86, "specul": 86, "xmedcon": 86, "sourceforg": 86, "tpc": 86, "cti": 86, "No": 86, "s14": 86, "original_filenam": 86, "s32": 86, "sw_version": 86, "u2": 86, "system_typ": 86, "serial_numb": 86, "scan_start_tim": 86, "u4": [86, 124], "isotope_nam": 86, "isotope_halflif": 86, "radiopharmaceut": 86, "gantry_tilt": 86, "gantry_rot": 86, "bed_elev": 86, "intrinsic_tilt": 86, "wobble_spe": 86, "transm_source_typ": 86, "distance_scan": 86, "transaxial_fov": 86, "angular_compress": 86, "coin_samp_mod": 86, "axial_samp_mod": 86, "ecat_calibration_factor": 86, "calibration_unit": 86, "calibration_units_typ": 86, "compression_cod": 86, "study_typ": 86, "s12": 86, "s16": [86, 105, 106], "patient_nam": 86, "patient_sex": 86, "patient_dexter": 86, "patient_ag": 86, "patient_height": 86, "patient_weight": 86, "patient_birth_d": 86, "physician_nam": 86, "operator_nam": 86, "study_descript": 86, "acquisition_typ": 86, "patient_orient": 86, "facility_nam": 86, "s20": 86, "num_plan": 86, "num_fram": 86, "num_gat": 86, "num_bed_po": 86, "init_bed_posit": 86, "bed_posit": 86, "plane_separ": 86, "lwr_sctr_thre": 86, "lwr_true_thr": 86, "upr_true_thr": 86, "user_process_cod": 86, "acquisition_mod": 86, "bin_siz": 86, "branching_fract": 86, "dose_start_tim": 86, "dosag": 86, "well_counter_corr_factor": 86, "data_unit": 86, "septa_st": 86, "nibabel_dir": 86, "dirnam": [86, 109], "__file__": 86, "ecat_fil": 86, "tinypet": 86, "frame0": 86, "data4d": 86, "ecat7": 86, "512l": 86, "numavail": 86, "nextdir": 86, "previousdir": 86, "numus": 86, "frame_offset": 86, "chronolog": 86, "id_dict": 86, "mlist_row": 86, "mlist_id": 86, "16842758": 86, "framenumb": 86, "ONE": [86, 111], "frame_dict": 86, "order_stor": 86, "block_no": 86, "nfree": 86, "prvblk": 86, "n_row": [86, 120], "nuse": 86, "recarrai": [86, 124], "home_dir": 87, "systemwid": 87, "nipy_user_dir": 87, "homedir": 87, "euler": 88, "euler_angl": 88, "mathworld": [88, 114], "wolfram": [88, 114], "attitud": 88, "jame": 88, "diebel": 88, "citeseerx": 88, "ist": 88, "psu": 88, "viewdoc": 88, "5134": 88, "theorem": 88, "stai": 88, "extrins": 88, "handed": 88, "vdash": [88, 114], "pitch": 88, "roll": 88, "yaw": 88, "cardan": 88, "tait": 88, "bryan": 88, "is_norm": [88, 114], "reduct": 88, "allclos": [88, 89, 104, 105, 114, 118], "vec": [88, 114], "counterclockwis": 88, "zrot": 88, "yrot": 88, "xrot": 88, "m1": 88, "m2": 88, "m3": 88, "composed_m": 88, "3x2": 88, "vecs2": 88, "counter": 88, "clockwis": 88, "zred": 88, "yred": 88, "xred": 88, "quat": [88, 114], "eulerparamet": [88, 114], "hamilton_product": [88, 114], "cy_thresh": 88, "arctan": 88, "atan2": 88, "r12": 88, "r11": 88, "asin": 88, "r13": 88, "r23": 88, "r33": 88, "cy": 88, "instabl": [88, 114], "gem": 88, "iv": 88, "heckbert": 88, "academ": 88, "press": 88, "1994": 88, "isbn": 88, "0123361559": 88, "ken": 88, "shoemak": 88, "graphicsgem": 88, "fmap": [89, 117], "characterist": 89, "sniff": 89, "sniff_max": 89, "maybe_imag": 89, "bytestr": [89, 105], "deseri": 89, "img_a": 89, "bstr": 89, "img_b": 89, "io_obj": 89, "seekabl": 89, "urllib": 89, "timeout": 89, "fileobject": [90, 94, 108], "tf": [90, 92, 104], "fm_copi": 90, "shallow": 90, "types_ext": 91, "trailing_suffix": 91, "match_cas": 91, "fileroot": 91, "trail": [91, 112, 116], "insensit": 91, "ext": [91, 108, 124], "splitext": 91, "guessed_typ": 91, "ext1": 91, "ext2": 91, "fnameext2": 91, "addext": 91, "froot": 91, "bar": [91, 114], "template_fnam": 91, "enforce_extens": 91, "types_fnam": 91, "tfn": 91, "bare": 91, "sliceobj": [92, 101, 102, 117], "in_shap": 92, "heurist": [92, 124], "segment": 92, "surplu": 92, "post_slic": 92, "dim_len": 92, "stride": 92, "read_shap": 92, "check_ind": 92, "can_slic": 92, "ellips": 92, "lock": 92, "_nulllock": 92, "sliced_arr": 92, "in_len": 92, "read_slic": 92, "trim": 92, "newaxi": [92, 123], "all_ful": 92, "is_slowest": 92, "to_read": 92, "heart": 92, "unalt": 92, "out_shap": [92, 112], "n_byte": [92, 104], "ctype": 92, "c_char_arrai": 92, "out_len": 92, "out_ax_ind": 92, "pretend": 92, "_positive_slic": 92, "strided_arr": 92, "broadcast": 92, "writeabl": 92, "6491": 92, "skip_thresh": 92, "trade": 92, "restart": 92, "n_string": 93, "bufsiz": 93, "exit": [93, 121], "byte_str": 93, "filepath": 94, "ctab": 94, "rgbt": 94, "surfer": 94, "nmr": 94, "harvard": 94, "fswiki": 94, "labelsclutsannotationfil": 94, "8b88b34": 94, "colortab": 94, "colort": 94, "n_vertic": 94, "n_label": 94, "read_metadata": 94, "read_stamp": 94, "voxels": 94, "xra": 94, "yra": 94, "zra": 94, "cra": 94, "nvtx": 94, "nface": 94, "volume_info": 94, "create_stamp": 94, "read_scalar": 94, "label_arrai": 94, "scalar_arrai": 94, "curv": 94, "pysurf": 94, "morpometri": 94, "fill_ctab": 94, "stamp": 94, "ctime": 94, "fnum": 94, "write_curv": 94, "grahamwideman": 94, "gw": 94, "surfacefileformat": 94, "curvnew": 94, "wstr": [94, 105, 125], "glean": 94, "mdc": 94, "pxyz_c": 94, "occupi": [94, 119], "resid": 94, "vox2ra": 94, "tkr": 94, "torig": 94, "coordinatesystem": 94, "dof": 94, "goodrasflag": 94, "flip_angl": 94, "te": 94, "fov": [94, 111], "processor": 95, "enforce_diag": 95, "check_affin": 95, "concat_img": 95, "squeez": 95, "squeezed_img": 95, "prod": 95, "ni1": [95, 105], "xformspac": 96, "dataarrai": 96, "nifti_intent_pointset": [96, 105], "stereotax": 96, "coordinatesystemtransformmatrix": 96, "nifti_xform_unknown": 96, "nifti_xform_scanner_anat": 96, "nifti_xform_aligned_anat": 96, "nifti_xform_talairach": 96, "nifti_xform_mni_152": 96, "nifti_intent_non": 96, "gifti_encoding_b64gz": 96, "coordsi": 96, "ext_fnam": 96, "ext_offset": 96, "fileoffset": 96, "darrai": 96, "data_type_cod": 96, "nifti_type_uint8": 96, "nifti_type_int32": 96, "nifti_type_float32": [96, 124], "gifti_encoding_cod": 96, "byteord": 96, "ind_ord": 96, "array_index_order_cod": 96, "rowmajorord": 96, "topo": 96, "dataarr": 96, "aggreg": [96, 111], "nifti_intent_time_seri": 96, "uncertain": 96, "proven": 96, "test_data": 96, "surf_img": 96, "coords_2": 96, "coords_3": 96, "array2str": 96, "072": 96, "188": 96, "267": 96, "706": 96, "054": 96, "233": 96, "402": 96, "071": 96, "nifti_intent_triangl": 96, "triangles_2": 96, "triangles_3": 96, "coords_4": 96, "triangles_4": 96, "triangles_5": 96, "coords_5": 96, "ten": 96, "func_img": 96, "timestep": 96, "642": 96, "series_2": 96, "series_3": 96, "series_4": 96, "35000000": [96, 126], "enc": [96, 126], "nifti_type_rgba32": 96, "nifti_intent_label": 96, "encount": 96, "data_dict": 96, "expaterror": 96, "preced": [97, 105], "geteffectivelevel": 98, "mm3": 99, "mask_data": 99, "u1": [99, 105, 106], "image_class": 100, "scaled_arr": [101, 102], "data_dtyp": [101, 102, 117], "minc_fil": 101, "my_funni": 102, "mincstat": 102, "water_fat_shift": 103, "echo_train_length": 103, "field_strength": 103, "dwell": 103, "water": [103, 111], "fat": [103, 111], "shift": [103, 111, 120], "train": [103, 111], "strength": 103, "tesla": 103, "3t": 103, "dwell_tim": 103, "varieti": 104, "manifesto": 104, "symmetr": 104, "semi": 104, "q_est": 104, "pack": 104, "op": 104, "obj_typ": 104, "obj_id": 104, "ast": 104, "assign_ast": 104, "default_class": 104, "line_ast": 104, "obj_root": 104, "obj_kei": 104, "ascconv_str": 104, "str_delim": 104, "input_str": 104, "prot_dict": 104, "asconvparseerror": 104, "csa_dict": 104, "csa_typ": 104, "presenc": [104, 105], "0x29": 104, "0x10": 104, "csa_info": 104, "tag_nam": 104, "sdash": 104, "occurr": 104, "csa_str": 104, "dicom_path": 104, "globber": 104, "check_is_dwi": 104, "dicom_kwarg": 104, "dwi": 104, "unit_gradi": 104, "csa_head": 104, "n_mosaic": 104, "light": 104, "idiosyncrasi": 104, "mosaic_s": 104, "dicom_mosa": 104, "img_po": 104, "sop": [104, 127], "began": 104, "supplement": 104, "dcmdata": 104, "perframefunctionalgroupssequ": 104, "sharedfunctionalgroupsequ": 104, "_not_": 104, "lr": [104, 111], "framecontentsequ": 104, "dimensionindexvalu": 104, "dimensionindexsequ": 104, "stackid": 104, "stack": 104, "part03": 104, "sect_c": 104, "figure_c": 104, "b0": 104, "imageorientpati": 104, "ij": 104, "dicom_orientaiton": 104, "dicom_orient": 104, "val1": 104, "val2": 104, "rtol": [104, 114], "05": [104, 114], "atol": [104, 114], "atal": 104, "dcm_w": 104, "tol": [104, 110], "symmetri": 104, "eigenvalu": [104, 114], "tight": 104, "niethamm": 104, "san": 104, "jose": 104, "estepar": 104, "bouix": 104, "shenton": 104, "westin": 104, "cf": 104, "proc": 104, "eng": 104, "med": 104, "biol": 104, "soc": 104, "2622": 104, "pubm": 104, "pmid": 104, "17946125": 104, "pmcid": 104, "pmc2791793": 104, "npd": 104, "l2": 104, "g_vector": 104, "norma": 104, "buf": 104, "ptr": 104, "1234567890": 104, "upk": 104, "567": 104, "fmt": 104, "group_no": 104, "0xff": 104, "regex": 104, "element_valu": 104, "element_start": 104, "parent_hdr": 105, "thin": [105, 126], "bystestr": 105, "baseclass": 105, "dedic": 105, "till": 105, "endiancod": [105, 125], "save_nifti": 105, "7th": 105, "icosahedron": 105, "309": 105, "load_nifti": 105, "freq": [105, 111], "medium": 105, "code_repr": 105, "score": 105, "1f": 105, "slice_tim": 105, "slice_order_cod": 105, "dc": 105, "5762786865234375e": 105, "disallow": 105, "poor": 105, "noqa": 105, "eeg": 105, "meg": 105, "allow_unknown": 105, "9999": 105, "strip_shear": 105, "ornt": [105, 110, 117], "flipud": [105, 110, 117], "update_affin": 105, "aff2": 105, "qaff": 105, "saff": 105, "oserror": [105, 106, 124], "ni2": 106, "661338147750939e": 106, "i1": 106, "i8": 106, "s15": 106, "cycl": 107, "overhead": 107, "untrigg": 107, "howto": 107, "datamodel": 107, "afterward": 107, "mixin": 107, "uniformtimeseri": 107, "sampling_r": 107, "t0": 107, "sampling_interv": 107, "chain": 107, "_no_reset": 107, "caveat": 107, "emptor": 107, "recomput": 107, "magicprop": 107, "__dict__": 107, "compresslevel": 108, "mtime": 108, "gzipfil": 108, "simul": 108, "discern": 108, "xb": 108, "timestamp": 108, "fileish": 108, "func_def": 108, "unord": 108, "_gzip_open": 108, "keep_open": 108, "_zstd_open": 108, "level_or_opt": 108, "zstd_dict": 108, "_name": 108, "trip_msg": 109, "min_vers": 109, "pkg_like": 109, "have_pkg": 109, "module_setup": 109, "setup_modul": 109, "not_a_packag": 109, "some_funct": 109, "subpkg": 109, "svd": 110, "axcod": 110, "t_arr": 110, "farr": 110, "tarr": 110, "shape_prim": 110, "transform_affin": 110, "transformed_affin": 110, "influenc": 110, "singular": 110, "start_ornt": 110, "end_ornt": 110, "ye": 111, "ec": 111, "dyn": 111, "ph": 111, "pix": 111, "angul": 111, "offcentr": 111, "dtime": 111, "ttime": 111, "avg": 111, "rr": 111, "turbo": 111, "grad": 111, "cont": 111, "00000": 111, "29035": 111, "28404e": 111, "003": 111, "1070": 111, "1860": 111, "69": 111, "000": 111, "90": 111, "1122": 111, "1951": 111, "1137": 111, "1977": 111, "rl": 111, "psl": 111, "274": 111, "275": 111, "strict_sort": 111, "cardiac": 111, "asl": 111, "image_type_mr": 111, "mag": 111, "4th": 111, "csv": 111, "dv": 111, "image_def": 111, "permit_trunc": 111, "iso": 111, "b_val": 111, "n_direct": 111, "pv": 111, "ri": 111, "sagitt": [111, 123], "coron": [111, 123], "slice_indic": 111, "sort_info": 111, "exts_sourc": 111, "par_head": 111, "long_str": 111, "mutli": 111, "general_info": 111, "image_info": 111, "slice_max": 111, "slice_min": 111, "is_ful": 111, "vol_no": 111, "sd": 112, "fwhm": 112, "n_dim": 112, "from_img": 112, "cval": 112, "out_class": 112, "mri_convert": 112, "output_shap": [112, 116], "lia": 112, "eight": 112, "__class__": 112, "isotrop": 112, "affine_transform": [112, 116], "out_img": 112, "kernel": 112, "to_vox_map": 112, "in_img": 112, "edg": 112, "strong": 112, "blur": 112, "smoothed_img": 112, "have_dicom": 113, "tag_for_keyword": 113, "180": 114, "degre": 114, "tvec": 114, "axis_and_angl": 114, "symbol": 114, "conjq": 114, "w2_thresh": 114, "wxyz": 114, "w2": 114, "invq": 114, "eigenvector": 114, "itzhack": 114, "aiaa": 114, "journal": 114, "1085": 114, "1087": 114, "issn": 114, "0731": 114, "5090": 114, "rotn": 114, "q1": 114, "q2": 114, "q12": 114, "equiv": 114, "identity_thresh": 114, "quaternions_and_spatial_rot": 114, "describing_rotations_with_quaternion": 114, "cell_valu": 115, "row_nam": 115, "col_nam": 115, "val_fmt": 115, "2f": 115, "format_char": 115, "thick_long": 115, "title_head": 115, "table_str": 115, "slice_shap": 116, "slice_aff": 116, "whole_aff": 116, "new_slic": 116, "mapped_voxel": 116, "output_affin": 116, "unscaled_data": 117, "dataoobj": 117, "return_spati": 117, "canonic": 117, "backend": 117, "reslic": 117, "spm_vol_ana": 118, "calibr": 118, "ditto": 118, "gl": 118, "cal": 118, "unset": 119, "multiformat": 120, "getting_start": 120, "highlight": 120, "d_1": 120, "d_2": 120, "d_d": 120, "cache_build": 120, "player": 120, "caller": 120, "seq_copi": 120, "deepcopi": 120, "seq": 120, "npz": 120, "new_seq": 120, "gen": 120, "pipermail": 120, "000859": 120, "coordinate_system": 120, "compliant": 120, "tck_file": 120, "lazili": 120, "friendli": 120, "n_t": 120, "piec": 120, "alongsid": 120, "p_i": 120, "m_i": 120, "lazy_tractogram": 120, "data_func": 120, "tractgogram": 120, "straight": 120, "data_for_streamlin": 120, "data_for_point": 120, "nt": 120, "mk": 120, "datadict": 120, "inconsist": 120, "voxmm": 120, "rasmm": 120, "trk_file": 120, "encoded_nam": 120, "max_name_len": 120, "latin": 120, "voxelmm": 120, "aff_tv2ra": 120, "peek": 120, "next_item": 120, "new_iter": 120, "untouch": 120, "wt": 121, "debug": 121, "inde": 121, "meanwhil": 121, "wipe": 121, "getcwd": 121, "temporarili": 121, "pathlib": 121, "my_cwd": 121, "write_text": 121, "isfil": 121, "misfortun": 122, "a_modul": 122, "do_silly_th": 122, "silli": 122, "drag": 123, "mous": 123, "scroll": 123, "decrement": 123, "linspac": 123, "axial": 123, "mpl": 123, "colormap": 123, "redraw": 123, "canvas": 123, "mapper": 124, "map_mak": 124, "code1": 124, "aliases1": 124, "code2": 124, "aliases2": 124, "label1": 124, "label2": 124, "thenc": 124, "__setitem__": [124, 125], "code_syn_seq": 124, "field1": 124, "field2": 124, "in_dtyp": 124, "bio": 124, "arr2": 124, "divslop": 124, "prescal": 124, "clipped_sc": 124, "clipped_scaled_clip": 124, "clipped_scaled_clipped_n2z": 124, "sio": 124, "ftype": 124, "better_typ": 124, "check_nan": 124, "flatten": 124, "1j": 124, "f1": 124, "mod_fnam": 124, "ifmt": 124, "imin": 124, "imax": 124, "default_out": 124, "extrem": 124, "iinfo": 124, "1e38": 124, "codes_seq": 124, "niistr": 124, "getterfunc": 124, "longest": 124, "clever": 124, "__iter__": 124, "short_field": 124, "longer_field": 124, "get_longer_field": 124, "getter": 124, "__getattribute__": 124, "dct": 124, "write0": 124, "x_flip": 124, "in_typ": 124, "wtype": 124, "block_siz": 124, "8194": 124, "largest": 124, "wherebi": 125, "__str_": 125, "__eq__": 125, "__ne__": 125, "fixabl": 125, "myfil": 125, "dx_result": 125, "good_fileobj": 125, "bad_fileobj": 125, "wstr1": 125, "fieldnam": 125, "_field_recod": 125, "bs_wstr": 125, "nbs_wstr": 125, "wstr2": 125, "an_int": 125, "etre": 126, "elementtre": 126, "fptr": 126, "dims": 127}, "objects": {"": [[69, 0, 0, "-", "nibabel"]], "nibabel": [[70, 0, 0, "-", "affines"], [71, 0, 0, "-", "analyze"], [72, 0, 0, "-", "arrayproxy"], [73, 0, 0, "-", "arraywriters"], [74, 0, 0, "-", "batteryrunners"], [69, 3, 1, "", "bench"], [75, 0, 0, "-", "benchmarks"], [76, 0, 0, "-", "brikhead"], [77, 0, 0, "-", "caret"], [78, 0, 0, "-", "casting"], [79, 0, 0, "-", "cifti2"], [80, 0, 0, "-", "cmdline"], [81, 0, 0, "-", "data"], [82, 0, 0, "-", "dataobj_images"], [83, 0, 0, "-", "deprecated"], [84, 0, 0, "-", "deprecator"], [85, 0, 0, "-", "dft"], [86, 0, 0, "-", "ecat"], [87, 0, 0, "-", "environment"], [88, 0, 0, "-", "eulerangles"], [89, 0, 0, "-", "filebasedimages"], [90, 0, 0, "-", "fileholders"], [91, 0, 0, "-", "filename_parser"], [92, 0, 0, "-", "fileslice"], [93, 0, 0, "-", "fileutils"], [94, 0, 0, "-", "freesurfer"], [95, 0, 0, "-", "funcs"], [69, 3, 1, "", "get_info"], [96, 0, 0, "-", "gifti"], [97, 0, 0, "-", "imageclasses"], [98, 0, 0, "-", "imageglobals"], [99, 0, 0, "-", "imagestats"], [100, 0, 0, "-", "loadsave"], [101, 0, 0, "-", "minc1"], [102, 0, 0, "-", "minc2"], [103, 0, 0, "-", "mriutils"], [104, 0, 0, "-", "nicom"], [105, 0, 0, "-", "nifti1"], [106, 0, 0, "-", "nifti2"], [107, 0, 0, "-", "onetime"], [108, 0, 0, "-", "openers"], [109, 0, 0, "-", "optpkg"], [110, 0, 0, "-", "orientations"], [111, 0, 0, "-", "parrec"], [112, 0, 0, "-", "processing"], [113, 0, 0, "-", "pydicom_compat"], [114, 0, 0, "-", "quaternions"], [115, 0, 0, "-", "rstutils"], [116, 0, 0, "-", "spaces"], [117, 0, 0, "-", "spatialimages"], [118, 0, 0, "-", "spm2analyze"], [119, 0, 0, "-", "spm99analyze"], [120, 0, 0, "-", "streamlines"], [69, 3, 1, "", "test"], [121, 0, 0, "-", "tmpdirs"], [122, 0, 0, "-", "tripwire"], [123, 0, 0, "-", "viewers"], [124, 0, 0, "-", "volumeutils"], [125, 0, 0, "-", "wrapstruct"], [126, 0, 0, "-", "xmlutils"]], "nibabel.affines": [[70, 1, 1, "", "AffineError"], [70, 3, 1, "", "append_diag"], [70, 3, 1, "", "apply_affine"], [70, 3, 1, "", "dot_reduce"], [70, 3, 1, "", "from_matvec"], [70, 3, 1, "", "obliquity"], [70, 3, 1, "", "rescale_affine"], [70, 3, 1, "", "to_matvec"], [70, 3, 1, "", "voxel_sizes"]], "nibabel.affines.AffineError": [[70, 2, 1, "", "__init__"]], "nibabel.analyze": [[71, 1, 1, "", "AnalyzeHeader"], [71, 1, 1, "", "AnalyzeImage"]], "nibabel.analyze.AnalyzeHeader": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "as_analyze_map"], [71, 2, 1, "", "data_from_fileobj"], [71, 2, 1, "", "data_to_fileobj"], [71, 2, 1, "", "default_structarr"], [71, 4, 1, "", "default_x_flip"], [71, 2, 1, "", "from_header"], [71, 2, 1, "", "get_base_affine"], [71, 2, 1, "", "get_best_affine"], [71, 2, 1, "", "get_data_dtype"], [71, 2, 1, "", "get_data_offset"], [71, 2, 1, "", "get_data_shape"], [71, 2, 1, "", "get_slope_inter"], [71, 2, 1, "", "get_zooms"], [71, 2, 1, "", "guessed_endian"], [71, 4, 1, "", "has_data_intercept"], [71, 4, 1, "", "has_data_slope"], [71, 2, 1, "", "may_contain_header"], [71, 2, 1, "", "raw_data_from_fileobj"], [71, 2, 1, "", "set_data_dtype"], [71, 2, 1, "", "set_data_offset"], [71, 2, 1, "", "set_data_shape"], [71, 2, 1, "", "set_slope_inter"], [71, 2, 1, "", "set_zooms"], [71, 4, 1, "", "sizeof_hdr"], [71, 4, 1, "", "template_dtype"]], "nibabel.analyze.AnalyzeImage": [[71, 4, 1, "", "ImageArrayProxy"], [71, 2, 1, "", "__init__"], [71, 4, 1, "", "files_types"], [71, 2, 1, "", "from_file_map"], [71, 2, 1, "", "get_data_dtype"], [71, 4, 1, "", "header_class"], [71, 4, 1, "", "makeable"], [71, 4, 1, "", "rw"], [71, 2, 1, "", "set_data_dtype"], [71, 2, 1, "", "to_file_map"], [71, 4, 1, "", "valid_exts"]], "nibabel.arrayproxy": [[72, 1, 1, "", "ArrayLike"], [72, 1, 1, "", "ArrayProxy"], [72, 3, 1, "", "get_obj_dtype"], [72, 3, 1, "", "is_proxy"], [72, 3, 1, "", "reshape_dataobj"]], "nibabel.arrayproxy.ArrayLike": [[72, 2, 1, "", "__init__"], [72, 4, 1, "", "ndim"], [72, 4, 1, "", "shape"]], "nibabel.arrayproxy.ArrayProxy": [[72, 2, 1, "", "__init__"], [72, 5, 1, "", "dtype"], [72, 2, 1, "", "get_unscaled"], [72, 5, 1, "", "inter"], [72, 5, 1, "", "is_proxy"], [72, 5, 1, "", "ndim"], [72, 5, 1, "", "offset"], [72, 2, 1, "", "reshape"], [72, 5, 1, "", "shape"], [72, 5, 1, "", "slope"]], "nibabel.arraywriters": [[73, 1, 1, "", "ArrayWriter"], [73, 1, 1, "", "ScalingError"], [73, 1, 1, "", "SlopeArrayWriter"], [73, 1, 1, "", "SlopeInterArrayWriter"], [73, 1, 1, "", "WriterError"], [73, 3, 1, "", "get_slope_inter"], [73, 3, 1, "", "make_array_writer"]], "nibabel.arraywriters.ArrayWriter": [[73, 2, 1, "", "__init__"], [73, 5, 1, "", "array"], [73, 2, 1, "", "finite_range"], [73, 5, 1, "", "has_nan"], [73, 5, 1, "", "out_dtype"], [73, 2, 1, "", "scaling_needed"], [73, 2, 1, "", "to_fileobj"]], "nibabel.arraywriters.ScalingError": [[73, 2, 1, "", "__init__"]], "nibabel.arraywriters.SlopeArrayWriter": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "calc_scale"], [73, 2, 1, "", "reset"], [73, 2, 1, "", "scaling_needed"], [73, 5, 1, "", "slope"], [73, 2, 1, "", "to_fileobj"]], "nibabel.arraywriters.SlopeInterArrayWriter": [[73, 2, 1, "", "__init__"], [73, 5, 1, "", "inter"], [73, 2, 1, "", "reset"], [73, 2, 1, "", "to_fileobj"]], "nibabel.arraywriters.WriterError": [[73, 2, 1, "", "__init__"]], "nibabel.batteryrunners": [[74, 1, 1, "", "BatteryRunner"], [74, 1, 1, "", "Report"]], "nibabel.batteryrunners.BatteryRunner": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "check_fix"], [74, 2, 1, "", "check_only"]], "nibabel.batteryrunners.Report": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "log_raise"], [74, 5, 1, "", "message"], [74, 2, 1, "", "write_raise"]], "nibabel.benchmarks": [[75, 0, 0, "-", "bench_array_to_file"], [75, 0, 0, "-", "bench_arrayproxy_slicing"], [75, 0, 0, "-", "bench_fileslice"], [75, 0, 0, "-", "bench_finite_range"], [75, 0, 0, "-", "bench_load_save"], [75, 0, 0, "-", "butils"]], "nibabel.benchmarks.bench_array_to_file": [[75, 3, 1, "", "bench_array_to_file"]], "nibabel.benchmarks.bench_arrayproxy_slicing": [[75, 3, 1, "", "bench_arrayproxy_slicing"]], "nibabel.benchmarks.bench_fileslice": [[75, 3, 1, "", "bench_fileslice"], [75, 3, 1, "", "run_slices"]], "nibabel.benchmarks.bench_finite_range": [[75, 3, 1, "", "bench_finite_range"]], "nibabel.benchmarks.bench_load_save": [[75, 3, 1, "", "bench_load_save"]], "nibabel.benchmarks.butils": [[75, 3, 1, "", "print_git_title"]], "nibabel.brikhead": [[76, 1, 1, "", "AFNIArrayProxy"], [76, 1, 1, "", "AFNIHeader"], [76, 1, 1, "", "AFNIHeaderError"], [76, 1, 1, "", "AFNIImage"], [76, 1, 1, "", "AFNIImageError"], [76, 3, 1, "", "parse_AFNI_header"]], "nibabel.brikhead.AFNIArrayProxy": [[76, 2, 1, "", "__init__"], [76, 5, 1, "", "scaling"]], "nibabel.brikhead.AFNIHeader": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "copy"], [76, 2, 1, "", "from_fileobj"], [76, 2, 1, "", "from_header"], [76, 2, 1, "", "get_affine"], [76, 2, 1, "", "get_data_offset"], [76, 2, 1, "", "get_data_scaling"], [76, 2, 1, "", "get_slope_inter"], [76, 2, 1, "", "get_space"], [76, 2, 1, "", "get_volume_labels"]], "nibabel.brikhead.AFNIHeaderError": [[76, 2, 1, "", "__init__"]], "nibabel.brikhead.AFNIImage": [[76, 4, 1, "", "ImageArrayProxy"], [76, 2, 1, "", "__init__"], [76, 4, 1, "", "files_types"], [76, 2, 1, "", "filespec_to_file_map"], [76, 2, 1, "", "from_file_map"], [76, 4, 1, "", "header_class"], [76, 4, 1, "", "makeable"], [76, 4, 1, "", "rw"], [76, 4, 1, "", "valid_exts"]], "nibabel.brikhead.AFNIImageError": [[76, 2, 1, "", "__init__"]], "nibabel.caret": [[77, 1, 1, "", "CaretMetaData"]], "nibabel.caret.CaretMetaData": [[77, 2, 1, "", "__init__"]], "nibabel.casting": [[78, 1, 1, "", "CastingError"], [78, 1, 1, "", "FloatingError"], [78, 3, 1, "", "able_int_type"], [78, 3, 1, "", "as_int"], [78, 3, 1, "", "best_float"], [78, 3, 1, "", "ceil_exact"], [78, 3, 1, "", "float_to_int"], [78, 3, 1, "", "floor_exact"], [78, 3, 1, "", "floor_log2"], [78, 3, 1, "", "have_binary128"], [78, 3, 1, "", "int_abs"], [78, 3, 1, "", "int_to_float"], [78, 3, 1, "", "longdouble_lte_float64"], [78, 3, 1, "", "longdouble_precision_improved"], [78, 3, 1, "", "ok_floats"], [78, 3, 1, "", "on_powerpc"], [78, 3, 1, "", "shared_range"], [78, 3, 1, "", "type_info"], [78, 3, 1, "", "ulp"]], "nibabel.casting.CastingError": [[78, 2, 1, "", "__init__"]], "nibabel.casting.FloatingError": [[78, 2, 1, "", "__init__"]], "nibabel.cifti2": [[79, 0, 0, "-", "cifti2"], [79, 0, 0, "-", "cifti2_axes"], [79, 0, 0, "-", "parse_cifti2"]], "nibabel.cifti2.cifti2": [[79, 1, 1, "", "Cifti2BrainModel"], [79, 1, 1, "", "Cifti2Header"], [79, 1, 1, "", "Cifti2HeaderError"], [79, 1, 1, "", "Cifti2Image"], [79, 1, 1, "", "Cifti2Label"], [79, 1, 1, "", "Cifti2LabelTable"], [79, 1, 1, "", "Cifti2Matrix"], [79, 1, 1, "", "Cifti2MatrixIndicesMap"], [79, 1, 1, "", "Cifti2MetaData"], [79, 1, 1, "", "Cifti2NamedMap"], [79, 1, 1, "", "Cifti2Parcel"], [79, 1, 1, "", "Cifti2Surface"], [79, 1, 1, "", "Cifti2TransformationMatrixVoxelIndicesIJKtoXYZ"], [79, 1, 1, "", "Cifti2VertexIndices"], [79, 1, 1, "", "Cifti2Vertices"], [79, 1, 1, "", "Cifti2Volume"], [79, 1, 1, "", "Cifti2VoxelIndicesIJK"], [79, 1, 1, "", "LimitedNifti2Header"]], "nibabel.cifti2.cifti2.Cifti2BrainModel": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "vertex_indices"], [79, 5, 1, "", "voxel_indices_ijk"]], "nibabel.cifti2.cifti2.Cifti2Header": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_axes"], [79, 2, 1, "", "get_axis"], [79, 2, 1, "", "get_index_map"], [79, 5, 1, "", "mapped_indices"], [79, 2, 1, "", "may_contain_header"], [79, 5, 1, "", "number_of_mapped_indices"]], "nibabel.cifti2.cifti2.Cifti2HeaderError": [[79, 2, 1, "", "__init__"]], "nibabel.cifti2.cifti2.Cifti2Image": [[79, 2, 1, "", "__init__"], [79, 4, 1, "", "files_types"], [79, 2, 1, "", "from_file_map"], [79, 2, 1, "", "from_image"], [79, 2, 1, "", "get_data_dtype"], [79, 4, 1, "", "header_class"], [79, 4, 1, "", "makeable"], [79, 5, 1, "", "nifti_header"], [79, 4, 1, "", "rw"], [79, 2, 1, "", "set_data_dtype"], [79, 2, 1, "", "to_file_map"], [79, 2, 1, "", "update_headers"], [79, 4, 1, "", "valid_exts"]], "nibabel.cifti2.cifti2.Cifti2Label": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "rgba"]], "nibabel.cifti2.cifti2.Cifti2LabelTable": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "append"]], "nibabel.cifti2.cifti2.Cifti2Matrix": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "get_axis"], [79, 2, 1, "", "get_data_shape"], [79, 2, 1, "", "get_index_map"], [79, 2, 1, "", "insert"], [79, 5, 1, "", "mapped_indices"], [79, 5, 1, "", "metadata"]], "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "brain_models"], [79, 2, 1, "", "insert"], [79, 5, 1, "", "named_maps"], [79, 5, 1, "", "parcels"], [79, 5, 1, "", "surfaces"], [79, 5, 1, "", "volume"]], "nibabel.cifti2.cifti2.Cifti2MetaData": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "data"], [79, 2, 1, "", "difference_update"]], "nibabel.cifti2.cifti2.Cifti2NamedMap": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "label_table"], [79, 5, 1, "", "metadata"]], "nibabel.cifti2.cifti2.Cifti2Parcel": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "append_cifti_vertices"], [79, 2, 1, "", "pop_cifti2_vertices"], [79, 5, 1, "", "voxel_indices_ijk"]], "nibabel.cifti2.cifti2.Cifti2Surface": [[79, 2, 1, "", "__init__"]], "nibabel.cifti2.cifti2.Cifti2TransformationMatrixVoxelIndicesIJKtoXYZ": [[79, 2, 1, "", "__init__"]], "nibabel.cifti2.cifti2.Cifti2VertexIndices": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "insert"]], "nibabel.cifti2.cifti2.Cifti2Vertices": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "insert"]], "nibabel.cifti2.cifti2.Cifti2Volume": [[79, 2, 1, "", "__init__"]], "nibabel.cifti2.cifti2.Cifti2VoxelIndicesIJK": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "insert"]], "nibabel.cifti2.cifti2.LimitedNifti2Header": [[79, 2, 1, "", "__init__"]], "nibabel.cifti2.cifti2_axes": [[79, 1, 1, "", "Axis"], [79, 1, 1, "", "BrainModelAxis"], [79, 1, 1, "", "LabelAxis"], [79, 1, 1, "", "ParcelsAxis"], [79, 1, 1, "", "ScalarAxis"], [79, 1, 1, "", "SeriesAxis"], [79, 3, 1, "", "from_index_mapping"], [79, 3, 1, "", "to_header"]], "nibabel.cifti2.cifti2_axes.Axis": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "size"]], "nibabel.cifti2.cifti2_axes.BrainModelAxis": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "affine"], [79, 2, 1, "", "from_index_mapping"], [79, 2, 1, "", "from_mask"], [79, 2, 1, "", "from_surface"], [79, 2, 1, "", "get_element"], [79, 2, 1, "", "iter_structures"], [79, 5, 1, "", "name"], [79, 5, 1, "", "surface_mask"], [79, 2, 1, "", "to_cifti_brain_structure_name"], [79, 2, 1, "", "to_mapping"], [79, 5, 1, "", "volume_mask"], [79, 5, 1, "", "volume_shape"]], "nibabel.cifti2.cifti2_axes.LabelAxis": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_index_mapping"], [79, 2, 1, "", "get_element"], [79, 2, 1, "", "to_mapping"]], "nibabel.cifti2.cifti2_axes.ParcelsAxis": [[79, 2, 1, "", "__init__"], [79, 5, 1, "", "affine"], [79, 2, 1, "", "from_brain_models"], [79, 2, 1, "", "from_index_mapping"], [79, 2, 1, "", "get_element"], [79, 2, 1, "", "to_mapping"], [79, 5, 1, "", "volume_shape"]], "nibabel.cifti2.cifti2_axes.ScalarAxis": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_index_mapping"], [79, 2, 1, "", "get_element"], [79, 2, 1, "", "to_mapping"]], "nibabel.cifti2.cifti2_axes.SeriesAxis": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_index_mapping"], [79, 2, 1, "", "get_element"], [79, 4, 1, "", "size"], [79, 5, 1, "", "time"], [79, 2, 1, "", "to_mapping"], [79, 5, 1, "", "unit"]], "nibabel.cifti2.parse_cifti2": [[79, 1, 1, "", "Cifti2Extension"], [79, 1, 1, "", "Cifti2Parser"]], "nibabel.cifti2.parse_cifti2.Cifti2Extension": [[79, 2, 1, "", "__init__"], [79, 4, 1, "", "code"]], "nibabel.cifti2.parse_cifti2.Cifti2Parser": [[79, 2, 1, "", "CharacterDataHandler"], [79, 2, 1, "", "EndElementHandler"], [79, 2, 1, "", "StartElementHandler"], [79, 2, 1, "", "__init__"], [79, 2, 1, "", "flush_chardata"], [79, 5, 1, "", "pending_data"]], "nibabel.cmdline": [[80, 0, 0, "-", "conform"], [80, 0, 0, "-", "convert"], [80, 0, 0, "-", "dicomfs"], [80, 0, 0, "-", "diff"], [80, 0, 0, "-", "ls"], [80, 0, 0, "-", "nifti_dx"], [80, 0, 0, "-", "parrec2nii"], [80, 0, 0, "-", "roi"], [80, 0, 0, "-", "stats"], [80, 0, 0, "-", "tck2trk"], [80, 0, 0, "-", "trk2tck"], [80, 0, 0, "-", "utils"]], "nibabel.cmdline.conform": [[80, 3, 1, "", "main"]], "nibabel.cmdline.convert": [[80, 3, 1, "", "main"]], "nibabel.cmdline.dicomfs": [[80, 1, 1, "", "DICOMFS"], [80, 1, 1, "", "FileHandle"], [80, 1, 1, "", "dummy_fuse"], [80, 4, 1, "", "fuse"], [80, 3, 1, "", "get_opt_parser"], [80, 3, 1, "", "main"]], "nibabel.cmdline.dicomfs.DICOMFS": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "get_paths"], [80, 2, 1, "", "getattr"], [80, 2, 1, "", "match_path"], [80, 2, 1, "", "open"], [80, 2, 1, "", "read"], [80, 2, 1, "", "readdir"], [80, 2, 1, "", "release"]], "nibabel.cmdline.dicomfs.FileHandle": [[80, 2, 1, "", "__init__"]], "nibabel.cmdline.dicomfs.dummy_fuse": [[80, 4, 1, "", "Fuse"], [80, 2, 1, "", "__init__"], [80, 4, 1, "", "fuse_python_api"]], "nibabel.cmdline.diff": [[80, 3, 1, "", "are_values_different"], [80, 3, 1, "", "diff"], [80, 3, 1, "", "display_diff"], [80, 3, 1, "", "get_data_diff"], [80, 3, 1, "", "get_data_hash_diff"], [80, 3, 1, "", "get_headers_diff"], [80, 3, 1, "", "get_opt_parser"], [80, 3, 1, "", "main"]], "nibabel.cmdline.ls": [[80, 3, 1, "", "get_opt_parser"], [80, 3, 1, "", "main"], [80, 3, 1, "", "proc_file"]], "nibabel.cmdline.nifti_dx": [[80, 3, 1, "", "main"]], "nibabel.cmdline.parrec2nii": [[80, 3, 1, "", "error"], [80, 3, 1, "", "get_opt_parser"], [80, 3, 1, "", "main"], [80, 3, 1, "", "proc_file"], [80, 3, 1, "", "verbose"]], "nibabel.cmdline.roi": [[80, 3, 1, "", "lossless_slice"], [80, 3, 1, "", "main"], [80, 3, 1, "", "parse_slice"], [80, 3, 1, "", "sanitize"]], "nibabel.cmdline.stats": [[80, 3, 1, "", "main"]], "nibabel.cmdline.tck2trk": [[80, 3, 1, "", "main"], [80, 3, 1, "", "parse_args"]], "nibabel.cmdline.trk2tck": [[80, 3, 1, "", "main"], [80, 3, 1, "", "parse_args"]], "nibabel.cmdline.utils": [[80, 3, 1, "", "ap"], [80, 3, 1, "", "safe_get"], [80, 3, 1, "", "table2string"], [80, 3, 1, "", "verbose"]], "nibabel.data": [[81, 1, 1, "", "Bomber"], [81, 1, 1, "", "BomberError"], [81, 1, 1, "", "DataError"], [81, 1, 1, "", "Datasource"], [81, 1, 1, "", "VersionedDatasource"], [81, 3, 1, "", "datasource_or_bomber"], [81, 3, 1, "", "find_data_dir"], [81, 3, 1, "", "get_data_path"], [81, 3, 1, "", "make_datasource"]], "nibabel.data.Bomber": [[81, 2, 1, "", "__init__"]], "nibabel.data.BomberError": [[81, 2, 1, "", "__init__"]], "nibabel.data.DataError": [[81, 2, 1, "", "__init__"]], "nibabel.data.Datasource": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "get_filename"], [81, 2, 1, "", "list_files"]], "nibabel.data.VersionedDatasource": [[81, 2, 1, "", "__init__"]], "nibabel.dataobj_images": [[82, 1, 1, "", "DataobjImage"]], "nibabel.dataobj_images.DataobjImage": [[82, 2, 1, "", "__init__"], [82, 5, 1, "", "dataobj"], [82, 2, 1, "", "from_file_map"], [82, 2, 1, "", "from_filename"], [82, 2, 1, "", "get_data"], [82, 2, 1, "", "get_fdata"], [82, 5, 1, "", "in_memory"], [82, 2, 1, "", "load"], [82, 5, 1, "", "ndim"], [82, 5, 1, "", "shape"], [82, 2, 1, "", "uncache"]], "nibabel.deprecated": [[83, 1, 1, "", "FutureWarningMixin"], [83, 1, 1, "", "ModuleProxy"], [83, 1, 1, "", "VisibleDeprecationWarning"], [83, 3, 1, "", "alert_future_error"]], "nibabel.deprecated.FutureWarningMixin": [[83, 2, 1, "", "__init__"], [83, 4, 1, "", "warn_message"]], "nibabel.deprecated.ModuleProxy": [[83, 2, 1, "", "__init__"]], "nibabel.deprecated.VisibleDeprecationWarning": [[83, 2, 1, "", "__init__"]], "nibabel.deprecator": [[84, 1, 1, "", "Deprecator"], [84, 1, 1, "", "ExpiredDeprecationError"]], "nibabel.deprecator.Deprecator": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "is_bad_version"]], "nibabel.deprecator.ExpiredDeprecationError": [[84, 2, 1, "", "__init__"]], "nibabel.dft": [[85, 1, 1, "", "CachingError"], [85, 1, 1, "", "DFTError"], [85, 1, 1, "", "InstanceStackError"], [85, 1, 1, "", "VolumeError"], [85, 3, 1, "", "clear_cache"], [85, 3, 1, "", "get_studies"], [85, 3, 1, "", "update_cache"]], "nibabel.dft.CachingError": [[85, 2, 1, "", "__init__"]], "nibabel.dft.DFTError": [[85, 2, 1, "", "__init__"]], "nibabel.dft.InstanceStackError": [[85, 2, 1, "", "__init__"]], "nibabel.dft.VolumeError": [[85, 2, 1, "", "__init__"]], "nibabel.ecat": [[86, 1, 1, "", "EcatHeader"], [86, 1, 1, "", "EcatImage"], [86, 1, 1, "", "EcatImageArrayProxy"], [86, 1, 1, "", "EcatSubHeader"], [86, 3, 1, "", "get_frame_order"], [86, 3, 1, "", "get_series_framenumbers"], [86, 3, 1, "", "read_mlist"], [86, 3, 1, "", "read_subheaders"]], "nibabel.ecat.EcatHeader": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "default_structarr"], [86, 2, 1, "", "get_data_dtype"], [86, 2, 1, "", "get_filetype"], [86, 2, 1, "", "get_patient_orient"], [86, 2, 1, "", "guessed_endian"], [86, 4, 1, "", "template_dtype"]], "nibabel.ecat.EcatImage": [[86, 4, 1, "", "ImageArrayProxy"], [86, 2, 1, "", "__init__"], [86, 5, 1, "", "affine"], [86, 4, 1, "", "files_types"], [86, 2, 1, "", "from_file_map"], [86, 2, 1, "", "from_image"], [86, 2, 1, "", "get_data_dtype"], [86, 2, 1, "", "get_frame"], [86, 2, 1, "", "get_frame_affine"], [86, 2, 1, "", "get_mlist"], [86, 2, 1, "", "get_subheaders"], [86, 4, 1, "", "header_class"], [86, 2, 1, "", "load"], [86, 5, 1, "", "shape"], [86, 2, 1, "", "to_file_map"], [86, 4, 1, "", "valid_exts"]], "nibabel.ecat.EcatImageArrayProxy": [[86, 2, 1, "", "__init__"], [86, 5, 1, "", "is_proxy"], [86, 5, 1, "", "ndim"], [86, 5, 1, "", "shape"]], "nibabel.ecat.EcatSubHeader": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "data_from_fileobj"], [86, 2, 1, "", "get_frame_affine"], [86, 2, 1, "", "get_nframes"], [86, 2, 1, "", "get_shape"], [86, 2, 1, "", "get_zooms"], [86, 2, 1, "", "raw_data_from_fileobj"]], "nibabel.environment": [[87, 3, 1, "", "get_home_dir"], [87, 3, 1, "", "get_nipy_system_dir"], [87, 3, 1, "", "get_nipy_user_dir"]], "nibabel.eulerangles": [[88, 3, 1, "", "angle_axis2euler"], [88, 3, 1, "", "euler2angle_axis"], [88, 3, 1, "", "euler2mat"], [88, 3, 1, "", "euler2quat"], [88, 3, 1, "", "mat2euler"], [88, 3, 1, "", "quat2euler"]], "nibabel.filebasedimages": [[89, 1, 1, "", "FileBasedHeader"], [89, 1, 1, "", "FileBasedImage"], [89, 1, 1, "", "ImageFileError"], [89, 1, 1, "", "SerializableImage"]], "nibabel.filebasedimages.FileBasedHeader": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "copy"], [89, 2, 1, "", "from_fileobj"], [89, 2, 1, "", "from_header"], [89, 2, 1, "", "write_to"]], "nibabel.filebasedimages.FileBasedImage": [[89, 2, 1, "", "__init__"], [89, 4, 1, "", "files_types"], [89, 2, 1, "", "filespec_to_file_map"], [89, 2, 1, "", "from_file_map"], [89, 2, 1, "", "from_filename"], [89, 2, 1, "", "from_image"], [89, 2, 1, "", "get_filename"], [89, 5, 1, "", "header"], [89, 4, 1, "", "header_class"], [89, 2, 1, "", "instance_to_filename"], [89, 2, 1, "", "load"], [89, 2, 1, "", "make_file_map"], [89, 4, 1, "", "makeable"], [89, 2, 1, "", "path_maybe_image"], [89, 4, 1, "", "rw"], [89, 2, 1, "", "set_filename"], [89, 2, 1, "", "to_file_map"], [89, 2, 1, "", "to_filename"], [89, 4, 1, "", "valid_exts"]], "nibabel.filebasedimages.ImageFileError": [[89, 2, 1, "", "__init__"]], "nibabel.filebasedimages.SerializableImage": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "from_bytes"], [89, 2, 1, "", "from_stream"], [89, 2, 1, "", "from_url"], [89, 2, 1, "", "to_bytes"], [89, 2, 1, "", "to_stream"]], "nibabel.fileholders": [[90, 1, 1, "", "FileHolder"], [90, 1, 1, "", "FileHolderError"], [90, 3, 1, "", "copy_file_map"]], "nibabel.fileholders.FileHolder": [[90, 2, 1, "", "__init__"], [90, 5, 1, "", "file_like"], [90, 2, 1, "", "get_prepare_fileobj"], [90, 2, 1, "", "same_file_as"]], "nibabel.fileholders.FileHolderError": [[90, 2, 1, "", "__init__"]], "nibabel.filename_parser": [[91, 1, 1, "", "TypesFilenamesError"], [91, 3, 1, "", "parse_filename"], [91, 3, 1, "", "splitext_addext"], [91, 3, 1, "", "types_filenames"]], "nibabel.filename_parser.TypesFilenamesError": [[91, 2, 1, "", "__init__"]], "nibabel.fileslice": [[92, 3, 1, "", "calc_slicedefs"], [92, 3, 1, "", "canonical_slicers"], [92, 3, 1, "", "fileslice"], [92, 3, 1, "", "fill_slicer"], [92, 3, 1, "", "is_fancy"], [92, 3, 1, "", "optimize_read_slicers"], [92, 3, 1, "", "optimize_slicer"], [92, 3, 1, "", "predict_shape"], [92, 3, 1, "", "read_segments"], [92, 3, 1, "", "slice2len"], [92, 3, 1, "", "slice2outax"], [92, 3, 1, "", "slicers2segments"], [92, 3, 1, "", "strided_scalar"], [92, 3, 1, "", "threshold_heuristic"]], "nibabel.fileutils": [[93, 3, 1, "", "read_zt_byte_strings"]], "nibabel.freesurfer": [[94, 0, 0, "-", "io"], [94, 0, 0, "-", "mghformat"]], "nibabel.freesurfer.io": [[94, 3, 1, "", "read_annot"], [94, 3, 1, "", "read_geometry"], [94, 3, 1, "", "read_label"], [94, 3, 1, "", "read_morph_data"], [94, 3, 1, "", "write_annot"], [94, 3, 1, "", "write_geometry"], [94, 3, 1, "", "write_morph_data"]], "nibabel.freesurfer.mghformat": [[94, 1, 1, "", "MGHError"], [94, 1, 1, "", "MGHHeader"], [94, 1, 1, "", "MGHImage"]], "nibabel.freesurfer.mghformat.MGHError": [[94, 2, 1, "", "__init__"]], "nibabel.freesurfer.mghformat.MGHHeader": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "as_byteswapped"], [94, 2, 1, "", "chk_version"], [94, 2, 1, "", "copy"], [94, 2, 1, "", "data_from_fileobj"], [94, 2, 1, "", "default_structarr"], [94, 2, 1, "", "diagnose_binaryblock"], [94, 2, 1, "", "from_fileobj"], [94, 2, 1, "", "from_header"], [94, 2, 1, "", "get_affine"], [94, 2, 1, "", "get_best_affine"], [94, 2, 1, "", "get_data_bytespervox"], [94, 2, 1, "", "get_data_dtype"], [94, 2, 1, "", "get_data_offset"], [94, 2, 1, "", "get_data_shape"], [94, 2, 1, "", "get_data_size"], [94, 2, 1, "", "get_footer_offset"], [94, 2, 1, "", "get_ras2vox"], [94, 2, 1, "", "get_slope_inter"], [94, 2, 1, "", "get_vox2ras"], [94, 2, 1, "", "get_vox2ras_tkr"], [94, 2, 1, "", "get_zooms"], [94, 2, 1, "", "guessed_endian"], [94, 2, 1, "", "set_data_dtype"], [94, 2, 1, "", "set_data_shape"], [94, 2, 1, "", "set_zooms"], [94, 4, 1, "", "template_dtype"], [94, 2, 1, "", "writeftr_to"], [94, 2, 1, "", "writehdr_to"]], "nibabel.freesurfer.mghformat.MGHImage": [[94, 4, 1, "", "ImageArrayProxy"], [94, 2, 1, "", "__init__"], [94, 4, 1, "", "files_types"], [94, 2, 1, "", "filespec_to_file_map"], [94, 2, 1, "", "from_file_map"], [94, 4, 1, "", "header_class"], [94, 4, 1, "", "makeable"], [94, 4, 1, "", "rw"], [94, 2, 1, "", "to_file_map"], [94, 4, 1, "", "valid_exts"]], "nibabel.funcs": [[95, 3, 1, "", "as_closest_canonical"], [95, 3, 1, "", "concat_images"], [95, 3, 1, "", "four_to_three"], [95, 3, 1, "", "squeeze_image"]], "nibabel.gifti": [[96, 0, 0, "-", "gifti"], [96, 0, 0, "-", "parse_gifti_fast"], [96, 0, 0, "-", "util"]], "nibabel.gifti.gifti": [[96, 1, 1, "", "GiftiCoordSystem"], [96, 1, 1, "", "GiftiDataArray"], [96, 1, 1, "", "GiftiImage"], [96, 1, 1, "", "GiftiLabel"], [96, 1, 1, "", "GiftiLabelTable"], [96, 1, 1, "", "GiftiMetaData"], [96, 1, 1, "", "GiftiNVPairs"]], "nibabel.gifti.gifti.GiftiCoordSystem": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "print_summary"]], "nibabel.gifti.gifti.GiftiDataArray": [[96, 2, 1, "", "__init__"], [96, 5, 1, "", "metadata"], [96, 5, 1, "", "num_dim"], [96, 2, 1, "", "print_summary"]], "nibabel.gifti.gifti.GiftiImage": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "add_gifti_data_array"], [96, 2, 1, "", "agg_data"], [96, 4, 1, "", "files_types"], [96, 2, 1, "", "from_file_map"], [96, 2, 1, "", "from_filename"], [96, 2, 1, "", "get_arrays_from_intent"], [96, 5, 1, "", "labeltable"], [96, 5, 1, "", "meta"], [96, 5, 1, "", "numDA"], [96, 4, 1, "", "parser"], [96, 2, 1, "", "print_summary"], [96, 2, 1, "", "remove_gifti_data_array"], [96, 2, 1, "", "remove_gifti_data_array_by_intent"], [96, 2, 1, "", "to_bytes"], [96, 2, 1, "", "to_file_map"], [96, 2, 1, "", "to_xml"], [96, 4, 1, "", "valid_exts"]], "nibabel.gifti.gifti.GiftiLabel": [[96, 2, 1, "", "__init__"], [96, 5, 1, "", "rgba"]], "nibabel.gifti.gifti.GiftiLabelTable": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "get_labels_as_dict"], [96, 2, 1, "", "print_summary"]], "nibabel.gifti.gifti.GiftiMetaData": [[96, 2, 1, "", "__init__"], [96, 5, 1, "", "data"], [96, 2, 1, "", "from_dict"], [96, 5, 1, "", "metadata"], [96, 2, 1, "", "print_summary"]], "nibabel.gifti.gifti.GiftiNVPairs": [[96, 2, 1, "", "__init__"], [96, 5, 1, "", "name"], [96, 5, 1, "", "value"]], "nibabel.gifti.parse_gifti_fast": [[96, 1, 1, "", "GiftiImageParser"], [96, 1, 1, "", "GiftiParseError"], [96, 3, 1, "", "read_data_block"]], "nibabel.gifti.parse_gifti_fast.GiftiImageParser": [[96, 2, 1, "", "CharacterDataHandler"], [96, 2, 1, "", "EndElementHandler"], [96, 2, 1, "", "StartElementHandler"], [96, 2, 1, "", "__init__"], [96, 2, 1, "", "flush_chardata"], [96, 5, 1, "", "pending_data"]], "nibabel.gifti.parse_gifti_fast.GiftiParseError": [[96, 2, 1, "", "__init__"]], "nibabel.imageclasses": [[97, 3, 1, "", "spatial_axes_first"]], "nibabel.imageglobals": [[98, 1, 1, "", "ErrorLevel"], [98, 1, 1, "", "LoggingOutputSuppressor"]], "nibabel.imageglobals.ErrorLevel": [[98, 2, 1, "", "__init__"]], "nibabel.imageglobals.LoggingOutputSuppressor": [[98, 2, 1, "", "__init__"]], "nibabel.imagestats": [[99, 3, 1, "", "count_nonzero_voxels"], [99, 3, 1, "", "mask_volume"]], "nibabel.loadsave": [[100, 3, 1, "", "guessed_image_type"], [100, 3, 1, "", "load"], [100, 3, 1, "", "read_img_data"], [100, 3, 1, "", "save"]], "nibabel.minc1": [[101, 1, 1, "", "Minc1File"], [101, 1, 1, "", "Minc1Header"], [101, 1, 1, "", "Minc1Image"], [101, 1, 1, "", "MincError"], [101, 1, 1, "", "MincHeader"], [101, 1, 1, "", "MincImageArrayProxy"]], "nibabel.minc1.Minc1File": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "get_affine"], [101, 2, 1, "", "get_data_dtype"], [101, 2, 1, "", "get_data_shape"], [101, 2, 1, "", "get_scaled_data"], [101, 2, 1, "", "get_zooms"]], "nibabel.minc1.Minc1Header": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "may_contain_header"]], "nibabel.minc1.Minc1Image": [[101, 4, 1, "", "ImageArrayProxy"], [101, 2, 1, "", "__init__"], [101, 4, 1, "", "files_types"], [101, 2, 1, "", "from_file_map"], [101, 4, 1, "", "header_class"], [101, 4, 1, "", "makeable"], [101, 4, 1, "", "rw"], [101, 4, 1, "", "valid_exts"]], "nibabel.minc1.MincError": [[101, 2, 1, "", "__init__"]], "nibabel.minc1.MincHeader": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "data_from_fileobj"], [101, 4, 1, "", "data_layout"], [101, 2, 1, "", "data_to_fileobj"]], "nibabel.minc1.MincImageArrayProxy": [[101, 2, 1, "", "__init__"], [101, 5, 1, "", "is_proxy"], [101, 5, 1, "", "ndim"], [101, 5, 1, "", "shape"]], "nibabel.minc2": [[102, 1, 1, "", "Hdf5Bunch"], [102, 1, 1, "", "Minc2File"], [102, 1, 1, "", "Minc2Header"], [102, 1, 1, "", "Minc2Image"]], "nibabel.minc2.Hdf5Bunch": [[102, 2, 1, "", "__init__"]], "nibabel.minc2.Minc2File": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "get_data_dtype"], [102, 2, 1, "", "get_data_shape"], [102, 2, 1, "", "get_scaled_data"]], "nibabel.minc2.Minc2Header": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "may_contain_header"]], "nibabel.minc2.Minc2Image": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_file_map"], [102, 4, 1, "", "header_class"]], "nibabel.mriutils": [[103, 1, 1, "", "MRIError"], [103, 3, 1, "", "calculate_dwell_time"]], "nibabel.mriutils.MRIError": [[103, 2, 1, "", "__init__"]], "nibabel.nicom": [[104, 0, 0, "-", "ascconv"], [104, 0, 0, "-", "csareader"], [104, 0, 0, "-", "dicomreaders"], [104, 0, 0, "-", "dicomwrappers"], [104, 0, 0, "-", "dwiparams"], [104, 0, 0, "-", "structreader"], [104, 0, 0, "-", "utils"]], "nibabel.nicom.ascconv": [[104, 1, 1, "", "AscconvParseError"], [104, 1, 1, "", "Atom"], [104, 1, 1, "", "NoValue"], [104, 3, 1, "", "assign2atoms"], [104, 3, 1, "", "obj_from_atoms"], [104, 3, 1, "", "parse_ascconv"]], "nibabel.nicom.ascconv.AscconvParseError": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.ascconv.Atom": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.ascconv.NoValue": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.csareader": [[104, 1, 1, "", "CSAError"], [104, 1, 1, "", "CSAReadError"], [104, 3, 1, "", "get_acq_mat_txt"], [104, 3, 1, "", "get_b_matrix"], [104, 3, 1, "", "get_b_value"], [104, 3, 1, "", "get_csa_header"], [104, 3, 1, "", "get_g_vector"], [104, 3, 1, "", "get_ice_dims"], [104, 3, 1, "", "get_n_mosaic"], [104, 3, 1, "", "get_scalar"], [104, 3, 1, "", "get_slice_normal"], [104, 3, 1, "", "get_vector"], [104, 3, 1, "", "is_mosaic"], [104, 3, 1, "", "nt_str"], [104, 3, 1, "", "read"]], "nibabel.nicom.csareader.CSAError": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.csareader.CSAReadError": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.dicomreaders": [[104, 1, 1, "", "DicomReadError"], [104, 3, 1, "", "mosaic_to_nii"], [104, 3, 1, "", "read_mosaic_dir"], [104, 3, 1, "", "read_mosaic_dwi_dir"], [104, 3, 1, "", "slices_to_series"]], "nibabel.nicom.dicomreaders.DicomReadError": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.dicomwrappers": [[104, 1, 1, "", "MosaicWrapper"], [104, 1, 1, "", "MultiframeWrapper"], [104, 1, 1, "", "SiemensWrapper"], [104, 1, 1, "", "Wrapper"], [104, 1, 1, "", "WrapperError"], [104, 1, 1, "", "WrapperPrecisionError"], [104, 3, 1, "", "none_or_close"], [104, 3, 1, "", "wrapper_from_data"], [104, 3, 1, "", "wrapper_from_file"]], "nibabel.nicom.dicomwrappers.MosaicWrapper": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "get_data"], [104, 2, 1, "", "image_position"], [104, 2, 1, "", "image_shape"], [104, 4, 1, "", "is_mosaic"]], "nibabel.nicom.dicomwrappers.MultiframeWrapper": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "get_data"], [104, 2, 1, "", "image_orient_patient"], [104, 2, 1, "", "image_position"], [104, 2, 1, "", "image_shape"], [104, 4, 1, "", "is_multiframe"], [104, 2, 1, "", "series_signature"], [104, 2, 1, "", "voxel_sizes"]], "nibabel.nicom.dicomwrappers.SiemensWrapper": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "b_matrix"], [104, 4, 1, "", "is_csa"], [104, 2, 1, "", "q_vector"], [104, 2, 1, "", "series_signature"], [104, 2, 1, "", "slice_normal"]], "nibabel.nicom.dicomwrappers.Wrapper": [[104, 2, 1, "", "__init__"], [104, 5, 1, "", "affine"], [104, 4, 1, "", "b_matrix"], [104, 2, 1, "", "b_value"], [104, 2, 1, "", "b_vector"], [104, 2, 1, "", "get"], [104, 2, 1, "", "get_data"], [104, 2, 1, "", "get_pixel_array"], [104, 2, 1, "", "image_orient_patient"], [104, 2, 1, "", "image_position"], [104, 2, 1, "", "image_shape"], [104, 2, 1, "", "instance_number"], [104, 4, 1, "", "is_csa"], [104, 4, 1, "", "is_mosaic"], [104, 4, 1, "", "is_multiframe"], [104, 2, 1, "", "is_same_series"], [104, 4, 1, "", "q_vector"], [104, 2, 1, "", "rotation_matrix"], [104, 2, 1, "", "series_signature"], [104, 2, 1, "", "slice_indicator"], [104, 2, 1, "", "slice_normal"], [104, 2, 1, "", "voxel_sizes"]], "nibabel.nicom.dicomwrappers.WrapperError": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.dicomwrappers.WrapperPrecisionError": [[104, 2, 1, "", "__init__"]], "nibabel.nicom.dwiparams": [[104, 3, 1, "", "B2q"], [104, 3, 1, "", "nearest_pos_semi_def"], [104, 3, 1, "", "q2bg"]], "nibabel.nicom.structreader": [[104, 1, 1, "", "Unpacker"]], "nibabel.nicom.structreader.Unpacker": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "read"], [104, 2, 1, "", "unpack"]], "nibabel.nicom.utils": [[104, 3, 1, "", "find_private_section"]], "nibabel.nifti1": [[105, 1, 1, "", "Nifti1DicomExtension"], [105, 1, 1, "", "Nifti1Extension"], [105, 1, 1, "", "Nifti1Extensions"], [105, 1, 1, "", "Nifti1Header"], [105, 1, 1, "", "Nifti1Image"], [105, 1, 1, "", "Nifti1Pair"], [105, 1, 1, "", "Nifti1PairHeader"], [105, 3, 1, "", "load"], [105, 3, 1, "", "save"]], "nibabel.nifti1.Nifti1DicomExtension": [[105, 2, 1, "", "__init__"]], "nibabel.nifti1.Nifti1Extension": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "get_code"], [105, 2, 1, "", "get_content"], [105, 2, 1, "", "get_sizeondisk"], [105, 2, 1, "", "write_to"]], "nibabel.nifti1.Nifti1Extensions": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "count"], [105, 2, 1, "", "from_fileobj"], [105, 2, 1, "", "get_codes"], [105, 2, 1, "", "get_sizeondisk"], [105, 2, 1, "", "write_to"]], "nibabel.nifti1.Nifti1Header": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "copy"], [105, 2, 1, "", "default_structarr"], [105, 4, 1, "", "exts_klass"], [105, 2, 1, "", "from_fileobj"], [105, 2, 1, "", "from_header"], [105, 2, 1, "", "get_best_affine"], [105, 2, 1, "", "get_data_shape"], [105, 2, 1, "", "get_dim_info"], [105, 2, 1, "", "get_intent"], [105, 2, 1, "", "get_n_slices"], [105, 2, 1, "", "get_qform"], [105, 2, 1, "", "get_qform_quaternion"], [105, 2, 1, "", "get_sform"], [105, 2, 1, "", "get_slice_duration"], [105, 2, 1, "", "get_slice_times"], [105, 2, 1, "", "get_slope_inter"], [105, 2, 1, "", "get_xyzt_units"], [105, 4, 1, "", "has_data_intercept"], [105, 4, 1, "", "has_data_slope"], [105, 4, 1, "", "is_single"], [105, 2, 1, "", "may_contain_header"], [105, 4, 1, "", "pair_magic"], [105, 4, 1, "", "pair_vox_offset"], [105, 4, 1, "", "quaternion_threshold"], [105, 2, 1, "", "set_data_dtype"], [105, 2, 1, "", "set_data_shape"], [105, 2, 1, "", "set_dim_info"], [105, 2, 1, "", "set_intent"], [105, 2, 1, "", "set_qform"], [105, 2, 1, "", "set_sform"], [105, 2, 1, "", "set_slice_duration"], [105, 2, 1, "", "set_slice_times"], [105, 2, 1, "", "set_slope_inter"], [105, 2, 1, "", "set_xyzt_units"], [105, 4, 1, "", "single_magic"], [105, 4, 1, "", "single_vox_offset"], [105, 4, 1, "", "template_dtype"], [105, 2, 1, "", "write_to"]], "nibabel.nifti1.Nifti1Image": [[105, 2, 1, "", "__init__"], [105, 4, 1, "", "files_types"], [105, 4, 1, "", "header_class"], [105, 2, 1, "", "update_header"], [105, 4, 1, "", "valid_exts"]], "nibabel.nifti1.Nifti1Pair": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "as_reoriented"], [105, 2, 1, "", "get_data_dtype"], [105, 2, 1, "", "get_qform"], [105, 2, 1, "", "get_sform"], [105, 4, 1, "", "header_class"], [105, 4, 1, "", "rw"], [105, 2, 1, "", "set_data_dtype"], [105, 2, 1, "", "set_qform"], [105, 2, 1, "", "set_sform"], [105, 2, 1, "", "to_file_map"], [105, 2, 1, "", "update_header"]], "nibabel.nifti1.Nifti1PairHeader": [[105, 2, 1, "", "__init__"], [105, 4, 1, "", "is_single"]], "nibabel.nifti2": [[106, 1, 1, "", "Nifti2Header"], [106, 1, 1, "", "Nifti2Image"], [106, 1, 1, "", "Nifti2Pair"], [106, 1, 1, "", "Nifti2PairHeader"], [106, 3, 1, "", "load"], [106, 3, 1, "", "save"]], "nibabel.nifti2.Nifti2Header": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "default_structarr"], [106, 2, 1, "", "get_data_shape"], [106, 2, 1, "", "may_contain_header"], [106, 4, 1, "", "pair_magic"], [106, 4, 1, "", "pair_vox_offset"], [106, 4, 1, "", "quaternion_threshold"], [106, 2, 1, "", "set_data_shape"], [106, 4, 1, "", "single_magic"], [106, 4, 1, "", "single_vox_offset"], [106, 4, 1, "", "sizeof_hdr"], [106, 4, 1, "", "template_dtype"]], "nibabel.nifti2.Nifti2Image": [[106, 2, 1, "", "__init__"], [106, 4, 1, "", "header_class"]], "nibabel.nifti2.Nifti2Pair": [[106, 2, 1, "", "__init__"], [106, 4, 1, "", "header_class"]], "nibabel.nifti2.Nifti2PairHeader": [[106, 2, 1, "", "__init__"], [106, 4, 1, "", "is_single"]], "nibabel.onetime": [[107, 1, 1, "", "OneTimeProperty"], [107, 1, 1, "", "ResetMixin"], [107, 3, 1, "", "auto_attr"], [107, 3, 1, "", "setattr_on_read"]], "nibabel.onetime.OneTimeProperty": [[107, 2, 1, "", "__init__"]], "nibabel.onetime.ResetMixin": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "reset"]], "nibabel.openers": [[108, 1, 1, "", "DeterministicGzipFile"], [108, 1, 1, "", "ImageOpener"], [108, 1, 1, "", "Opener"]], "nibabel.openers.DeterministicGzipFile": [[108, 2, 1, "", "__init__"]], "nibabel.openers.ImageOpener": [[108, 2, 1, "", "__init__"], [108, 4, 1, "", "compress_ext_map"]], "nibabel.openers.Opener": [[108, 2, 1, "", "__init__"], [108, 4, 1, "", "bz2_def"], [108, 2, 1, "", "close"], [108, 2, 1, "", "close_if_mine"], [108, 5, 1, "", "closed"], [108, 4, 1, "", "compress_ext_icase"], [108, 4, 1, "", "compress_ext_map"], [108, 4, 1, "", "default_compresslevel"], [108, 4, 1, "", "default_level_or_option"], [108, 4, 1, "", "default_zst_compresslevel"], [108, 2, 1, "", "fileno"], [108, 4, 1, "", "gz_def"], [108, 5, 1, "", "mode"], [108, 5, 1, "", "name"], [108, 2, 1, "", "read"], [108, 2, 1, "", "readinto"], [108, 2, 1, "", "seek"], [108, 2, 1, "", "tell"], [108, 2, 1, "", "write"], [108, 4, 1, "", "zstd_def"]], "nibabel.optpkg": [[109, 3, 1, "", "optional_package"]], "nibabel.orientations": [[110, 1, 1, "", "OrientationError"], [110, 3, 1, "", "aff2axcodes"], [110, 3, 1, "", "apply_orientation"], [110, 3, 1, "", "axcodes2ornt"], [110, 3, 1, "", "flip_axis"], [110, 3, 1, "", "inv_ornt_aff"], [110, 3, 1, "", "io_orientation"], [110, 3, 1, "", "ornt2axcodes"], [110, 3, 1, "", "ornt_transform"]], "nibabel.orientations.OrientationError": [[110, 2, 1, "", "__init__"]], "nibabel.parrec": [[111, 1, 1, "", "PARRECArrayProxy"], [111, 1, 1, "", "PARRECError"], [111, 1, 1, "", "PARRECHeader"], [111, 1, 1, "", "PARRECImage"], [111, 3, 1, "", "exts2pars"], [111, 3, 1, "", "one_line"], [111, 3, 1, "", "parse_PAR_header"], [111, 3, 1, "", "vol_is_full"], [111, 3, 1, "", "vol_numbers"]], "nibabel.parrec.PARRECArrayProxy": [[111, 2, 1, "", "__init__"], [111, 5, 1, "", "dtype"], [111, 2, 1, "", "get_unscaled"], [111, 5, 1, "", "is_proxy"], [111, 5, 1, "", "ndim"], [111, 5, 1, "", "shape"]], "nibabel.parrec.PARRECError": [[111, 2, 1, "", "__init__"]], "nibabel.parrec.PARRECHeader": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "as_analyze_map"], [111, 2, 1, "", "copy"], [111, 2, 1, "", "from_fileobj"], [111, 2, 1, "", "from_header"], [111, 2, 1, "", "get_affine"], [111, 2, 1, "", "get_bvals_bvecs"], [111, 2, 1, "", "get_data_offset"], [111, 2, 1, "", "get_data_scaling"], [111, 2, 1, "", "get_def"], [111, 2, 1, "", "get_echo_train_length"], [111, 2, 1, "", "get_q_vectors"], [111, 2, 1, "", "get_rec_shape"], [111, 2, 1, "", "get_slice_orientation"], [111, 2, 1, "", "get_sorted_slice_indices"], [111, 2, 1, "", "get_volume_labels"], [111, 2, 1, "", "get_water_fat_shift"], [111, 2, 1, "", "set_data_offset"]], "nibabel.parrec.PARRECImage": [[111, 4, 1, "", "ImageArrayProxy"], [111, 2, 1, "", "__init__"], [111, 4, 1, "", "files_types"], [111, 2, 1, "", "from_file_map"], [111, 2, 1, "", "from_filename"], [111, 4, 1, "", "header_class"], [111, 2, 1, "", "load"], [111, 4, 1, "", "makeable"], [111, 4, 1, "", "rw"], [111, 4, 1, "", "valid_exts"]], "nibabel.processing": [[112, 3, 1, "", "adapt_affine"], [112, 3, 1, "", "conform"], [112, 3, 1, "", "fwhm2sigma"], [112, 3, 1, "", "resample_from_to"], [112, 3, 1, "", "resample_to_output"], [112, 3, 1, "", "sigma2fwhm"], [112, 3, 1, "", "smooth_image"]], "nibabel.pydicom_compat": [[113, 3, 1, "", "dicom_test"]], "nibabel.quaternions": [[114, 3, 1, "", "angle_axis2mat"], [114, 3, 1, "", "angle_axis2quat"], [114, 3, 1, "", "conjugate"], [114, 3, 1, "", "eye"], [114, 3, 1, "", "fillpositive"], [114, 3, 1, "", "inverse"], [114, 3, 1, "", "isunit"], [114, 3, 1, "", "mat2quat"], [114, 3, 1, "", "mult"], [114, 3, 1, "", "nearly_equivalent"], [114, 3, 1, "", "norm"], [114, 3, 1, "", "quat2angle_axis"], [114, 3, 1, "", "quat2mat"], [114, 3, 1, "", "rotate_vector"]], "nibabel.rstutils": [[115, 3, 1, "", "rst_table"]], "nibabel.spaces": [[116, 3, 1, "", "slice2volume"], [116, 3, 1, "", "vox2out_vox"]], "nibabel.spatialimages": [[117, 1, 1, "", "HeaderDataError"], [117, 1, 1, "", "HeaderTypeError"], [117, 1, 1, "", "ImageDataError"], [117, 1, 1, "", "SpatialFirstSlicer"], [117, 1, 1, "", "SpatialHeader"], [117, 1, 1, "", "SpatialImage"], [117, 3, 1, "", "supported_np_types"]], "nibabel.spatialimages.HeaderDataError": [[117, 2, 1, "", "__init__"]], "nibabel.spatialimages.HeaderTypeError": [[117, 2, 1, "", "__init__"]], "nibabel.spatialimages.ImageDataError": [[117, 2, 1, "", "__init__"]], "nibabel.spatialimages.SpatialFirstSlicer": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "check_slicing"], [117, 2, 1, "", "slice_affine"]], "nibabel.spatialimages.SpatialHeader": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "copy"], [117, 2, 1, "", "data_from_fileobj"], [117, 4, 1, "", "data_layout"], [117, 2, 1, "", "data_to_fileobj"], [117, 4, 1, "", "default_x_flip"], [117, 2, 1, "", "from_fileobj"], [117, 2, 1, "", "from_header"], [117, 2, 1, "", "get_base_affine"], [117, 2, 1, "", "get_best_affine"], [117, 2, 1, "", "get_data_dtype"], [117, 2, 1, "", "get_data_shape"], [117, 2, 1, "", "get_zooms"], [117, 2, 1, "", "set_data_dtype"], [117, 2, 1, "", "set_data_shape"], [117, 2, 1, "", "set_zooms"], [117, 2, 1, "", "write_to"]], "nibabel.spatialimages.SpatialImage": [[117, 4, 1, "", "ImageSlicer"], [117, 2, 1, "", "__init__"], [117, 5, 1, "", "affine"], [117, 2, 1, "", "as_reoriented"], [117, 2, 1, "", "from_image"], [117, 2, 1, "", "get_data_dtype"], [117, 4, 1, "", "header_class"], [117, 2, 1, "", "orthoview"], [117, 2, 1, "", "set_data_dtype"], [117, 5, 1, "", "slicer"], [117, 2, 1, "", "update_header"]], "nibabel.spm2analyze": [[118, 1, 1, "", "Spm2AnalyzeHeader"], [118, 1, 1, "", "Spm2AnalyzeImage"]], "nibabel.spm2analyze.Spm2AnalyzeHeader": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "get_slope_inter"], [118, 2, 1, "", "may_contain_header"], [118, 4, 1, "", "template_dtype"]], "nibabel.spm2analyze.Spm2AnalyzeImage": [[118, 2, 1, "", "__init__"], [118, 4, 1, "", "header_class"]], "nibabel.spm99analyze": [[119, 1, 1, "", "Spm99AnalyzeHeader"], [119, 1, 1, "", "Spm99AnalyzeImage"], [119, 1, 1, "", "SpmAnalyzeHeader"]], "nibabel.spm99analyze.Spm99AnalyzeHeader": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "get_best_affine"], [119, 2, 1, "", "get_origin_affine"], [119, 2, 1, "", "set_origin_from_affine"]], "nibabel.spm99analyze.Spm99AnalyzeImage": [[119, 2, 1, "", "__init__"], [119, 4, 1, "", "files_types"], [119, 2, 1, "", "from_file_map"], [119, 4, 1, "", "has_affine"], [119, 4, 1, "", "header_class"], [119, 4, 1, "", "makeable"], [119, 4, 1, "", "rw"], [119, 2, 1, "", "to_file_map"]], "nibabel.spm99analyze.SpmAnalyzeHeader": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "default_structarr"], [119, 2, 1, "", "get_slope_inter"], [119, 4, 1, "", "has_data_intercept"], [119, 4, 1, "", "has_data_slope"], [119, 2, 1, "", "set_slope_inter"], [119, 4, 1, "", "template_dtype"]], "nibabel.streamlines": [[120, 0, 0, "-", "array_sequence"], [120, 3, 1, "", "detect_format"], [120, 0, 0, "-", "header"], [120, 3, 1, "", "is_supported"], [120, 3, 1, "", "load"], [120, 3, 1, "", "save"], [120, 0, 0, "-", "tck"], [120, 0, 0, "-", "tractogram"], [120, 0, 0, "-", "tractogram_file"], [120, 0, 0, "-", "trk"], [120, 0, 0, "-", "utils"]], "nibabel.streamlines.array_sequence": [[120, 1, 1, "", "ArraySequence"], [120, 3, 1, "", "concatenate"], [120, 3, 1, "", "create_arraysequences_from_generator"], [120, 3, 1, "", "is_array_sequence"], [120, 3, 1, "", "is_ndarray_of_int_or_bool"]], "nibabel.streamlines.array_sequence.ArraySequence": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "append"], [120, 5, 1, "", "common_shape"], [120, 2, 1, "", "copy"], [120, 2, 1, "", "extend"], [120, 2, 1, "", "finalize_append"], [120, 2, 1, "", "get_data"], [120, 5, 1, "", "is_array_sequence"], [120, 5, 1, "", "is_sliced_view"], [120, 2, 1, "", "load"], [120, 2, 1, "", "save"], [120, 2, 1, "", "shrink_data"], [120, 5, 1, "", "total_nb_rows"]], "nibabel.streamlines.header": [[120, 1, 1, "", "Field"]], "nibabel.streamlines.header.Field": [[120, 4, 1, "", "DIMENSIONS"], [120, 4, 1, "", "ENDIANNESS"], [120, 4, 1, "", "MAGIC_NUMBER"], [120, 4, 1, "", "METHOD"], [120, 4, 1, "", "NB_POINTS"], [120, 4, 1, "", "NB_PROPERTIES_PER_STREAMLINE"], [120, 4, 1, "", "NB_SCALARS_PER_POINT"], [120, 4, 1, "", "NB_STREAMLINES"], [120, 4, 1, "", "ORIGIN"], [120, 4, 1, "", "STEP_SIZE"], [120, 4, 1, "", "VOXEL_ORDER"], [120, 4, 1, "", "VOXEL_SIZES"], [120, 4, 1, "", "VOXEL_TO_RASMM"], [120, 2, 1, "", "__init__"]], "nibabel.streamlines.tck": [[120, 1, 1, "", "TckFile"]], "nibabel.streamlines.tck.TckFile": [[120, 4, 1, "", "EOF_DELIMITER"], [120, 4, 1, "", "FIBER_DELIMITER"], [120, 4, 1, "", "MAGIC_NUMBER"], [120, 4, 1, "", "SUPPORTS_DATA_PER_POINT"], [120, 4, 1, "", "SUPPORTS_DATA_PER_STREAMLINE"], [120, 2, 1, "", "__init__"], [120, 2, 1, "", "create_empty_header"], [120, 2, 1, "", "is_correct_format"], [120, 2, 1, "", "load"], [120, 2, 1, "", "save"]], "nibabel.streamlines.tractogram": [[120, 1, 1, "", "LazyDict"], [120, 1, 1, "", "LazyTractogram"], [120, 1, 1, "", "PerArrayDict"], [120, 1, 1, "", "PerArraySequenceDict"], [120, 1, 1, "", "SliceableDataDict"], [120, 1, 1, "", "Tractogram"], [120, 1, 1, "", "TractogramItem"], [120, 3, 1, "", "is_data_dict"], [120, 3, 1, "", "is_lazy_dict"]], "nibabel.streamlines.tractogram.LazyDict": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram.LazyTractogram": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "apply_affine"], [120, 2, 1, "", "copy"], [120, 5, 1, "", "data"], [120, 5, 1, "", "data_per_point"], [120, 5, 1, "", "data_per_streamline"], [120, 2, 1, "", "extend"], [120, 2, 1, "", "from_data_func"], [120, 2, 1, "", "from_tractogram"], [120, 5, 1, "", "streamlines"], [120, 2, 1, "", "to_world"]], "nibabel.streamlines.tractogram.PerArrayDict": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "extend"]], "nibabel.streamlines.tractogram.PerArraySequenceDict": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram.SliceableDataDict": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram.Tractogram": [[120, 2, 1, "", "__init__"], [120, 5, 1, "", "affine_to_rasmm"], [120, 2, 1, "", "apply_affine"], [120, 2, 1, "", "copy"], [120, 5, 1, "", "data_per_point"], [120, 5, 1, "", "data_per_streamline"], [120, 2, 1, "", "extend"], [120, 5, 1, "", "streamlines"], [120, 2, 1, "", "to_world"]], "nibabel.streamlines.tractogram.TractogramItem": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram_file": [[120, 1, 1, "", "DataError"], [120, 1, 1, "", "DataWarning"], [120, 1, 1, "", "ExtensionWarning"], [120, 1, 1, "", "HeaderError"], [120, 1, 1, "", "HeaderWarning"], [120, 1, 1, "", "TractogramFile"], [120, 1, 1, "", "abstractclassmethod"]], "nibabel.streamlines.tractogram_file.DataError": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram_file.DataWarning": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram_file.ExtensionWarning": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram_file.HeaderError": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram_file.HeaderWarning": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.tractogram_file.TractogramFile": [[120, 2, 1, "", "__init__"], [120, 5, 1, "", "affine"], [120, 2, 1, "", "create_empty_header"], [120, 5, 1, "", "header"], [120, 2, 1, "", "is_correct_format"], [120, 2, 1, "", "load"], [120, 2, 1, "", "save"], [120, 5, 1, "", "streamlines"], [120, 5, 1, "", "tractogram"]], "nibabel.streamlines.tractogram_file.abstractclassmethod": [[120, 2, 1, "", "__init__"]], "nibabel.streamlines.trk": [[120, 1, 1, "", "TrkFile"], [120, 3, 1, "", "decode_value_from_name"], [120, 3, 1, "", "encode_value_in_name"], [120, 3, 1, "", "get_affine_rasmm_to_trackvis"], [120, 3, 1, "", "get_affine_trackvis_to_rasmm"]], "nibabel.streamlines.trk.TrkFile": [[120, 4, 1, "", "HEADER_SIZE"], [120, 4, 1, "", "MAGIC_NUMBER"], [120, 4, 1, "", "SUPPORTS_DATA_PER_POINT"], [120, 4, 1, "", "SUPPORTS_DATA_PER_STREAMLINE"], [120, 2, 1, "", "__init__"], [120, 2, 1, "", "create_empty_header"], [120, 2, 1, "", "is_correct_format"], [120, 2, 1, "", "load"], [120, 2, 1, "", "save"]], "nibabel.streamlines.utils": [[120, 3, 1, "", "get_affine_from_reference"], [120, 3, 1, "", "peek_next"]], "nibabel.tmpdirs": [[121, 3, 1, "", "InGivenDirectory"], [121, 3, 1, "", "InTemporaryDirectory"], [121, 1, 1, "", "TemporaryDirectory"]], "nibabel.tmpdirs.TemporaryDirectory": [[121, 2, 1, "", "__init__"]], "nibabel.tripwire": [[122, 1, 1, "", "TripWire"], [122, 1, 1, "", "TripWireError"], [122, 3, 1, "", "is_tripwire"]], "nibabel.tripwire.TripWire": [[122, 2, 1, "", "__init__"]], "nibabel.tripwire.TripWireError": [[122, 2, 1, "", "__init__"]], "nibabel.viewers": [[123, 1, 1, "", "OrthoSlicer3D"]], "nibabel.viewers.OrthoSlicer3D": [[123, 2, 1, "", "__init__"], [123, 5, 1, "", "clim"], [123, 2, 1, "", "close"], [123, 5, 1, "", "cmap"], [123, 2, 1, "", "draw"], [123, 5, 1, "", "figs"], [123, 2, 1, "", "link_to"], [123, 5, 1, "", "n_volumes"], [123, 5, 1, "", "position"], [123, 2, 1, "", "set_position"], [123, 2, 1, "", "set_volume_idx"], [123, 2, 1, "", "show"]], "nibabel.volumeutils": [[124, 1, 1, "", "DtypeMapper"], [124, 1, 1, "", "Recoder"], [124, 3, 1, "", "apply_read_scaling"], [124, 3, 1, "", "array_from_file"], [124, 3, 1, "", "array_to_file"], [124, 3, 1, "", "best_write_scale_ftype"], [124, 3, 1, "", "better_float_of"], [124, 3, 1, "", "finite_range"], [124, 3, 1, "", "fname_ext_ul_case"], [124, 3, 1, "", "int_scinter_ftype"], [124, 3, 1, "", "make_dt_codes"], [124, 3, 1, "", "pretty_mapping"], [124, 3, 1, "", "rec2dict"], [124, 3, 1, "", "seek_tell"], [124, 3, 1, "", "shape_zoom_affine"], [124, 3, 1, "", "working_type"], [124, 3, 1, "", "write_zeros"]], "nibabel.volumeutils.DtypeMapper": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "keys"], [124, 2, 1, "", "values"]], "nibabel.volumeutils.Recoder": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "add_codes"], [124, 2, 1, "", "keys"], [124, 2, 1, "", "value_set"]], "nibabel.wrapstruct": [[125, 1, 1, "", "LabeledWrapStruct"], [125, 1, 1, "", "WrapStruct"], [125, 1, 1, "", "WrapStructError"]], "nibabel.wrapstruct.LabeledWrapStruct": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "get_value_label"]], "nibabel.wrapstruct.WrapStruct": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "as_byteswapped"], [125, 5, 1, "", "binaryblock"], [125, 2, 1, "", "check_fix"], [125, 2, 1, "", "copy"], [125, 2, 1, "", "default_structarr"], [125, 2, 1, "", "diagnose_binaryblock"], [125, 5, 1, "", "endianness"], [125, 2, 1, "", "from_fileobj"], [125, 2, 1, "", "get"], [125, 2, 1, "", "guessed_endian"], [125, 2, 1, "", "items"], [125, 2, 1, "", "keys"], [125, 5, 1, "", "structarr"], [125, 4, 1, "", "template_dtype"], [125, 2, 1, "", "values"], [125, 2, 1, "", "write_to"]], "nibabel.wrapstruct.WrapStructError": [[125, 2, 1, "", "__init__"]], "nibabel.xmlutils": [[126, 1, 1, "", "XmlBasedHeader"], [126, 1, 1, "", "XmlParser"], [126, 1, 1, "", "XmlSerializable"]], "nibabel.xmlutils.XmlBasedHeader": [[126, 2, 1, "", "__init__"]], "nibabel.xmlutils.XmlParser": [[126, 2, 1, "", "CharacterDataHandler"], [126, 2, 1, "", "EndElementHandler"], [126, 4, 1, "", "HANDLER_NAMES"], [126, 2, 1, "", "StartElementHandler"], [126, 2, 1, "", "__init__"], [126, 2, 1, "", "parse"]], "nibabel.xmlutils.XmlSerializable": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "to_xml"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 1, 3, 15, 30, 68], "document": [0, 24, 27, 58], "file": [0, 4, 13, 18, 35, 37, 42, 64, 111, 117], "format": [0, 3, 6, 13, 15, 18, 20, 21, 37, 38, 41, 71, 111], "imag": [0, 2, 3, 7, 9, 10, 12, 13, 14, 15, 26, 29, 32, 35, 36, 56, 57, 64, 65, 67, 111], "util": [0, 80, 96, 104, 120], "float": [0, 14], "integ": 0, "convers": [0, 42], "system": [0, 2, 40], "miscellan": 0, "helper": 0, "alphabet": 0, "refer": [0, 2, 6, 68, 107], "nibabel": [1, 2, 3, 4, 10, 12, 20, 24, 26, 28, 47, 52, 58, 61, 62, 64, 66, 69], "develop": [1, 19, 23, 24, 25, 27, 45, 48, 54, 59], "changelog": [1, 24], "releas": [1, 21, 28], "5": 1, "0": [1, 6], "mondai": 1, "9": 1, "januari": 1, "2023": 1, "new": [1, 3, 45, 79], "featur": [1, 45], "enhanc": [1, 25], "bug": 1, "fix": 1, "mainten": [1, 6], "chang": [1, 19, 45, 53], "deprec": [1, 83, 84], "4": 1, "2": [1, 8, 15, 79], "wednesdai": 1, "31": 1, "august": 1, "2022": 1, "1": [1, 8], "saturdai": 1, "18": 1, "june": 1, "3": 1, "7": 1, "februari": 1, "28": 1, "novemb": 1, "2020": 1, "tuesdai": 1, "20": 1, "octob": 1, "fridai": 1, "26": 1, "april": 1, "8": 1, "march": 1, "27": 1, "decemb": 1, "2019": 1, "23": 1, "septemb": 1, "sundai": 1, "mai": 1, "16": 1, "2018": 1, "12": 1, "22": 1, "2017": 1, "13": 1, "2016": 1, "2015": 1, "2014": 1, "11": 1, "2012": 1, "6": 1, "thursdai": 1, "2011": 1, "14": 1, "feb": 1, "oct": 1, "2010": 1, "pynifti": 1, "20100706": 1, "tue": 1, "jul": 1, "20100412": 1, "mon": 1, "apr": 1, "20090303": 1, "mar": 1, "2009": 1, "20090205": 1, "thu": 1, "20081017": 1, "fri": 1, "17": 1, "2008": 1, "20080710": 1, "20080630": 1, "30": 1, "jun": 1, "20080624": 1, "24": 1, "20070930": 1, "sun": 1, "sep": 1, "2007": 1, "20070917": 1, "20070905": 1, "wed": 1, "20070803": 1, "aug": 1, "20070425": 1, "25": 1, "20070315": 1, "15": 1, "20070301": 1, "20070220": 1, "20070214": 1, "20061114": 1, "nov": 1, "2006": 1, "coordin": [2, 15, 40], "affin": [2, 40, 42, 65, 70], "introduc": 2, "someon": 2, "voxel": [2, 40, 42, 56, 63], "ar": [2, 117], "data": [2, 4, 10, 14, 15, 20, 21, 22, 30, 37, 38, 40, 42, 60, 61, 64, 65, 81, 111, 117], "arrai": [2, 7, 57, 64], "point": [2, 14], "space": [2, 40, 116], "The": [2, 3, 9, 12, 15, 25, 26, 37, 45, 64, 65, 71], "scanner": 2, "subject": 2, "ax": [2, 12, 18, 63, 79], "from": [2, 9, 13, 15, 21, 38, 40, 45, 54], "name": [2, 9, 21, 44], "matrix": [2, 66], "transform": [2, 30], "between": [2, 67], "invers": [2, 114], "give": 2, "map": [2, 40], "exampl": [2, 22, 65, 79], "appli": [2, 9], "seri": [2, 53], "other": [2, 15, 45], "alwai": [2, 14], "us": [2, 4, 7, 9, 12, 13, 15, 20, 22, 32, 57], "an": [2, 13, 15, 60], "ra": 2, "output": [2, 44], "how": [3, 4, 6, 19], "add": [3, 13, 14], "philosophi": 3, "help": 3, "u": 3, "review": [3, 6, 19, 45], "your": [3, 45, 47, 55, 59], "code": [3, 21, 24, 46, 52, 58, 61, 65, 69], "can": [3, 10, 12, 13], "read": [3, 42, 104], "onli": [3, 19], "where": 3, "start": [3, 41, 43], "A": [3, 9, 11, 19, 28, 37, 53], "recip": 3, "write": [3, 42, 117], "ad": 4, "test": [4, 5, 69], "small": 4, "open": [4, 42, 108], "licens": [4, 58, 61, 69], "submodul": 4, "much": 4, "should": [4, 8], "go": 4, "singl": [4, 45], "If": 4, "doubt": 4, "advanc": [5, 51], "setup": 5, "long": [5, 53], "run": 5, "biap": [6, 16, 17, 25], "purpos": 6, "process": [6, 25, 112], "what": [6, 8], "i": [6, 15, 37, 40], "type": [6, 9, 18, 42, 111], "workflow": [6, 45, 51, 53], "resolut": [6, 7], "becom": 6, "accept": 6, "templat": [6, 16], "header": [6, 9, 11, 39, 41, 64, 65, 71, 120], "preambl": 6, "footnot": 6, "biap1": 7, "toward": 7, "immut": 7, "background": [7, 8, 9, 12, 13, 14, 15, 30, 37], "proxi": [7, 57, 64], "issu": [7, 10, 11, 19, 21], "design": [7, 20], "case": [7, 9, 15, 20, 32], "load": [7, 13, 14, 29, 64, 100, 105, 106, 120], "minim": 7, "memori": [7, 57], "maxim": 7, "speed": 7, "assert": 7, "modifi": [7, 29], "copi": [7, 8, 46, 47], "view": [7, 8], "when": [7, 10], "do": [7, 45], "you": [7, 19, 45], "want": [7, 45], "propos": [7, 9, 14, 15, 25], "question": [7, 8, 9], "biap2": 8, "slicecopi": 8, "statu": [8, 10], "slice0": 8, "slice": [8, 9, 10, 33, 38, 40, 64], "allow": 8, "option": [8, 13], "fanci": [8, 44], "object": [8, 26, 37, 64], "method": [8, 14, 32], "call": 8, "biap3": 9, "json": 9, "nifti": [9, 10, 39, 65], "extens": [9, 61], "abstract": [9, 16, 25], "altern": [9, 16], "learn": 9, "nrrd": 9, "gener": [9, 12, 15, 111, 127], "principl": [9, 21], "see": 9, "also": 9, "must": 9, "contain": 9, "version": [9, 21, 59], "usual": 9, "metadata": [9, 10, 15, 21], "field": [9, 35, 37, 120], "axi": [9, 12, 30, 79], "often": 9, "element": [9, 37], "q_vector": 9, "acquisition_tim": 9, "volum": [9, 10, 12, 33, 42], "axis_mean": 9, "multi_affin": 9, "implement": [9, 14, 16, 20, 22, 29, 34, 67], "biap4": 10, "merg": [10, 19, 24, 44, 45], "dcmstack": 10, "motiv": [10, 11, 16, 21, 29], "overview": [10, 11, 18, 44, 45, 49, 54, 55], "dcmmetaextens": 10, "ti": 10, "niftiextens": 10, "plan": 10, "keep": [10, 29], "track": [10, 29], "manipul": 10, "detect": 10, "specif": 10, "difficult": 10, "3d": [10, 13, 40], "4d": [10, 13], "dicom": [10, 34, 35, 36, 37, 38, 39, 40, 41, 42], "meta": 10, "nest": 10, "sequenc": [10, 13, 42], "independ": 10, "classifi": 10, "improv": 10, "access": 10, "vari": 10, "through": 10, "biap5": 11, "streamlin": [11, 120], "convert": [11, 80], "futur": 11, "work": [11, 16, 40, 52, 65], "biap6": 12, "identifi": 12, "time": [12, 57], "fourth": 12, "have": [12, 29], "more": [12, 45, 74], "than": 12, "four": 12, "current": [12, 14, 15, 20], "convent": [12, 63], "distinguish": 12, "possibl": [12, 29, 42], "solut": 12, "find": [12, 20], "associ": 12, "label": [12, 30], "enforc": 12, "4th": 12, "biap7": 13, "multipl": [13, 37], "some": [13, 21, 33, 45], "store": 13, "differ": [13, 21], "shape": 13, "same": 13, "It": 13, "return": 13, "load_multi": 13, "top": 13, "level": 13, "function": [13, 32], "next": 13, "step": 13, "biap8": 14, "summari": [14, 21, 29, 45, 51, 67], "In": [14, 44, 45, 49, 54, 55], "detail": [14, 16, 44, 45, 49, 54, 55, 64], "prefer": 14, "get_fdata": [14, 57], "biap9": 15, "surfac": [15, 30], "kept": 15, "separ": [15, 21], "geometr": 15, "terminologi": [15, 21], "support": [15, 58], "relev": 15, "desiderata": [15, 21], "promin": 15, "model": 15, "smooth": 15, "plot": 15, "subsampl": 15, "cifti": [15, 79], "x": 16, "instruct": 16, "scope": 16, "usag": 16, "impact": 16, "backward": 16, "compat": 16, "descript": 16, "relat": 16, "discuss": [16, 23], "brainvoyag": 18, "bv": 18, "intern": 18, "core": [19, 25], "guid": [19, 28], "conduct": 19, "good": 19, "understand": 19, "close": 19, "pull": 19, "request": 19, "further": 19, "resourc": [19, 51], "acknowledg": [19, 25], "packag": [20, 21, 22, 59, 60], "nipi": 20, "suit": 20, "warn": 20, "dure": 20, "instal": [20, 21, 49, 58, 59, 60], "requir": [20, 59], "distribut": 20, "idea": 21, "instanti": 21, "pinstanc": 21, "revis": 21, "id": 21, "tag": [21, 33, 37, 39, 41, 42], "provid": 21, "bundl": 21, "prundl": [21, 22], "discoveri": [21, 22], "sourc": [21, 22, 24, 46, 52, 59], "queri": 21, "compar": 21, "debian": [21, 59], "depend": 21, "manag": 21, "authent": 21, "valid": [21, 59], "usecas": [21, 22], "creat": [22, 47, 79], "local": [22, 46], "path": 22, "get": [22, 38, 40, 43, 46, 59, 64], "default": [22, 65], "pool": 22, "regist": 22, "without": 22, "dpkg": 22, "guidelin": 24, "git": [24, 44, 48, 49, 51], "repositori": [24, 45, 55], "layout": [24, 63], "commit": [24, 45, 53], "commun": [24, 25], "govern": 25, "decis": 25, "make": [25, 28, 42, 45, 47, 54], "role": 25, "And": 25, "respons": 25, "contributor": [25, 58], "steer": 25, "council": 25, "page": [27, 51], "checklist": 28, "whether": 29, "been": 29, "sinc": 29, "roadmap": 30, "express": 30, "tick": 30, "rang": 30, "spatial": 30, "scalefactor": 31, "intercept": 31, "spm": [32, 42], "dcm2nii": 33, "algorithm": 33, "compil": 33, "modif": 33, "sort": [33, 42, 111], "concept": 34, "order": 35, "multi": 35, "frame": 35, "inform": [36, 37, 111], "sampl": 36, "introduct": [37, 50], "messag": 37, "standard": 37, "attribut": 37, "privat": 37, "valu": 37, "represent": 37, "length": [37, 42], "dictionari": 37, "structur": 37, "set": [37, 40, 47, 55], "world": [37, 63], "entiti": 37, "definit": [37, 40], "servic": 37, "dims": 37, "pair": 37, "sop": 37, "siemen": [38, 41], "mosaic": 38, "orient": [38, 40, 56, 110, 111], "scale": [38, 65], "defin": 40, "patient": 40, "pixel": 40, "j": 40, "column": 40, "row": 40, "again": 40, "formula": 40, "list": [40, 58, 69], "deriv": 40, "out": 40, "z": 40, "csa": 41, "csa1": 41, "each": 41, "item": [41, 42], "csa2": 41, "spm_dicom_dict": 42, "mat": 42, "spm_dicom_head": 42, "m": 42, "philip": [42, 61], "integra": 42, "sq": 42, "vr": 42, "spm_dicom_convert": 42, "categor": 42, "first": 42, "pass": 42, "second": 42, "final": 42, "check": [42, 53, 57, 74, 125], "resort": 42, "configur": [44, 47], "user": 44, "email": 44, "alias": 44, "editor": 44, "log": 44, "consid": 45, "delet": 45, "master": 45, "branch": 45, "updat": [45, 46], "mirror": 45, "trunk": [45, 53], "edit": 45, "ask": 45, "thing": 45, "might": 45, "github": [45, 47], "sever": [45, 117], "peopl": 45, "share": 45, "explor": 45, "rebas": 45, "recov": 45, "mess": 45, "up": [45, 47, 55], "rewrit": 45, "histori": [45, 53], "follow": 46, "latest": 46, "own": 47, "fork": [47, 55], "account": 47, "tutori": [51, 127], "manual": [51, 62], "onlin": 51, "maintain": 53, "integr": 53, "few": 53, "push": 53, "patch": 54, "move": 54, "clone": 55, "link": 55, "upstream": 55, "repo": 55, "in_memori": 57, "state": 57, "cach": [57, 64], "uncach": 57, "save": [57, 64, 100, 105, 106, 120], "instead": 57, "keyword": 57, "websit": [58, 69], "mail": [58, 69], "cite": [58, 69], "author": 58, "repris": 58, "download": 58, "pip": 59, "python": 59, "index": 59, "ubuntu": 59, "administr": 60, "non": 60, "On": 60, "unix": 60, "window": 60, "copyright": 61, "3rd": 61, "parti": 61, "netcdf": 61, "sphinx": 61, "autosummari": 61, "orderedset": 61, "mni_icbm152_t1_tal_nlin_asym_09a": 61, "par": [61, 111], "rec": 61, "radiolog": 63, "v": 63, "neurolog": 63, "displai": 63, "align": 63, "easi": 64, "wai": [64, 117], "preliminari": 65, "sform": 65, "qform": 65, "fall": 65, "back": 65, "choos": 65, "ipython": 66, "notebook": 66, "project": 66, "rotat": 66, "orthogon": 66, "relationship": 67, "io": [67, 94], "sign": 67, "off": 67, "quickstart": 69, "bench": 69, "get_info": 69, "affineerror": 70, "append_diag": 70, "apply_affin": 70, "dot_reduc": 70, "from_matvec": 70, "obliqu": 70, "rescale_affin": 70, "to_matvec": 70, "voxel_s": 70, "analyz": 71, "note": [71, 76], "analyzehead": 71, "analyzeimag": 71, "arrayproxi": 72, "arraylik": 72, "get_obj_dtyp": 72, "is_proxi": 72, "reshape_dataobj": 72, "arraywrit": 73, "scalingerror": 73, "slopearraywrit": 73, "slopeinterarraywrit": 73, "writererror": 73, "get_slope_int": 73, "make_array_writ": 73, "batteryrunn": 74, "about": 74, "report": 74, "benchmark": 75, "modul": [75, 79, 80, 94, 96, 104, 120], "bench_array_to_fil": 75, "bench_arrayproxy_sl": 75, "bench_fileslic": 75, "bench_finite_rang": 75, "bench_load_sav": 75, "butil": 75, "run_slic": 75, "print_git_titl": 75, "brikhead": 76, "afniarrayproxi": 76, "afnihead": 76, "afniheadererror": 76, "afniimag": 76, "afniimageerror": 76, "parse_afni_head": 76, "caret": 77, "caretmetadata": 77, "cast": 78, "castingerror": 78, "floatingerror": 78, "able_int_typ": 78, "as_int": 78, "best_float": 78, "ceil_exact": 78, "float_to_int": 78, "floor_exact": 78, "floor_log2": 78, "have_binary128": 78, "int_ab": 78, "int_to_float": 78, "longdouble_lte_float64": 78, "longdouble_precision_improv": 78, "ok_float": 78, "on_powerpc": 78, "shared_rang": 78, "type_info": 78, "ulp": 78, "cifti2": 79, "cifti2_ax": 79, "parse_cifti2": 79, "cifti2brainmodel": 79, "cifti2head": 79, "cifti2headererror": 79, "cifti2imag": 79, "cifti2label": 79, "cifti2labelt": 79, "cifti2matrix": 79, "cifti2matrixindicesmap": 79, "cifti2metadata": 79, "cifti2namedmap": 79, "cifti2parcel": 79, "cifti2surfac": 79, "cifti2transformationmatrixvoxelindicesijktoxyz": 79, "cifti2vertexindic": 79, "cifti2vertic": 79, "cifti2volum": 79, "cifti2voxelindicesijk": 79, "limitednifti2head": 79, "brainmodelaxi": 79, "labelaxi": 79, "parcelsaxi": 79, "scalaraxi": 79, "seriesaxi": 79, "from_index_map": 79, "to_head": 79, "cifti2extens": 79, "cifti2pars": 79, "cmdline": 80, "conform": [80, 112], "dicomf": 80, "diff": 80, "l": 80, "nifti_dx": 80, "parrec2nii": 80, "roi": 80, "stat": 80, "tck2trk": 80, "trk2tck": 80, "main": 80, "filehandl": 80, "dummy_fus": 80, "fuse": 80, "get_opt_pars": 80, "are_values_differ": 80, "display_diff": 80, "get_data_diff": 80, "get_data_hash_diff": 80, "get_headers_diff": 80, "proc_fil": 80, "error": 80, "verbos": 80, "lossless_slic": 80, "parse_slic": 80, "sanit": 80, "parse_arg": 80, "ap": 80, "safe_get": 80, "table2str": 80, "bomber": 81, "bombererror": 81, "dataerror": [81, 120], "datasourc": 81, "versioneddatasourc": 81, "datasource_or_bomb": 81, "find_data_dir": 81, "get_data_path": 81, "make_datasourc": 81, "dataobj_imag": 82, "dataobjimag": 82, "futurewarningmixin": 83, "moduleproxi": 83, "visibledeprecationwarn": 83, "alert_future_error": 83, "expireddeprecationerror": 84, "dft": 85, "cachingerror": 85, "dfterror": 85, "instancestackerror": 85, "volumeerror": 85, "clear_cach": 85, "get_studi": 85, "update_cach": 85, "ecat": 86, "ecathead": 86, "ecatimag": 86, "ecatimagearrayproxi": 86, "ecatsubhead": 86, "get_frame_ord": 86, "get_series_framenumb": 86, "read_mlist": 86, "read_subhead": 86, "environ": 87, "get_home_dir": 87, "get_nipy_system_dir": 87, "get_nipy_user_dir": 87, "eulerangl": 88, "angle_axis2eul": 88, "euler2angle_axi": 88, "euler2mat": 88, "euler2quat": 88, "mat2eul": 88, "quat2eul": 88, "filebasedimag": 89, "filebasedhead": 89, "imagefileerror": 89, "serializableimag": 89, "filehold": 90, "fileholdererror": 90, "copy_file_map": 90, "filename_pars": 91, "typesfilenameserror": 91, "parse_filenam": 91, "splitext_addext": 91, "types_filenam": 91, "fileslic": 92, "calc_slicedef": 92, "canonical_slic": 92, "fill_slic": 92, "is_fanc": 92, "optimize_read_slic": 92, "optimize_slic": 92, "predict_shap": 92, "read_seg": 92, "slice2len": 92, "slice2outax": 92, "slicers2seg": 92, "strided_scalar": 92, "threshold_heurist": 92, "fileutil": 93, "read_zt_byte_str": 93, "freesurf": 94, "mghformat": 94, "read_annot": 94, "read_geometri": 94, "read_label": 94, "read_morph_data": 94, "write_annot": 94, "write_geometri": 94, "write_morph_data": 94, "mgherror": 94, "mghheader": 94, "mghimag": 94, "func": 95, "as_closest_canon": 95, "concat_imag": 95, "four_to_thre": 95, "squeeze_imag": 95, "gifti": 96, "parse_gifti_fast": 96, "gifticoordsystem": 96, "giftidataarrai": 96, "giftiimag": 96, "giftilabel": 96, "giftilabelt": 96, "giftimetadata": 96, "giftinvpair": 96, "giftiimagepars": 96, "giftiparseerror": 96, "read_data_block": 96, "imageclass": 97, "spatial_axes_first": 97, "imageglob": 98, "errorlevel": 98, "loggingoutputsuppressor": 98, "imagestat": 99, "count_nonzero_voxel": 99, "mask_volum": 99, "loadsav": 100, "guessed_image_typ": 100, "read_img_data": 100, "minc1": 101, "minc1fil": 101, "minc1head": 101, "minc1imag": 101, "mincerror": 101, "minchead": 101, "mincimagearrayproxi": 101, "minc2": 102, "hdf5bunch": 102, "minc2fil": 102, "minc2head": 102, "minc2imag": 102, "mriutil": 103, "mrierror": 103, "calculate_dwell_tim": 103, "nicom": 104, "ascconv": 104, "csaread": 104, "dicomread": 104, "dicomwrapp": 104, "dwiparam": 104, "structread": 104, "ascconvparseerror": 104, "atom": 104, "novalu": 104, "assign2atom": 104, "obj_from_atom": 104, "parse_ascconv": 104, "csaerror": 104, "csareaderror": 104, "get_acq_mat_txt": 104, "get_b_matrix": 104, "get_b_valu": 104, "get_csa_head": 104, "get_g_vector": 104, "get_ice_dim": 104, "get_n_mosa": 104, "get_scalar": 104, "get_slice_norm": 104, "get_vector": 104, "is_mosa": 104, "nt_str": 104, "dicomreaderror": 104, "mosaic_to_nii": 104, "read_mosaic_dir": 104, "read_mosaic_dwi_dir": 104, "slices_to_seri": 104, "mosaicwrapp": 104, "multiframewrapp": 104, "siemenswrapp": 104, "wrapper": 104, "wrappererror": 104, "wrapperprecisionerror": 104, "none_or_clos": 104, "wrapper_from_data": 104, "wrapper_from_fil": 104, "b2q": 104, "nearest_pos_semi_def": 104, "q2bg": 104, "unpack": 104, "find_private_sect": 104, "nifti1": 105, "nifti1dicomextens": 105, "nifti1extens": 105, "nifti1head": 105, "nifti1imag": 105, "nifti1pair": 105, "nifti1pairhead": 105, "nifti2": 106, "nifti2head": 106, "nifti2imag": 106, "nifti2pair": 106, "nifti2pairhead": 106, "onetim": 107, "onetimeproperti": 107, "resetmixin": 107, "auto_attr": 107, "setattr_on_read": 107, "deterministicgzipfil": 108, "imageopen": 108, "optpkg": 109, "optional_packag": 109, "orientationerror": 110, "aff2axcod": 110, "apply_orient": 110, "axcodes2ornt": 110, "flip_axi": 110, "inv_ornt_aff": 110, "io_orient": 110, "ornt2axcod": 110, "ornt_transform": 110, "parrec": 111, "parrecarrayproxi": 111, "parrecerror": 111, "parrechead": 111, "parrecimag": 111, "exts2par": 111, "one_lin": 111, "parse_par_head": 111, "vol_is_ful": 111, "vol_numb": 111, "adapt_affin": 112, "fwhm2sigma": 112, "resample_from_to": 112, "resample_to_output": 112, "sigma2fwhm": 112, "smooth_imag": 112, "pydicom_compat": 113, "dicom_test": 113, "quaternion": 114, "angle_axis2mat": 114, "angle_axis2quat": 114, "conjug": 114, "ey": 114, "fillposit": 114, "isunit": 114, "mat2quat": 114, "mult": 114, "nearly_equival": 114, "norm": 114, "quat2angle_axi": 114, "quat2mat": 114, "rotate_vector": 114, "rstutil": 115, "rst_tabl": 115, "slice2volum": 116, "vox2out_vox": 116, "spatialimag": 117, "There": 117, "interfac": 117, "headerdataerror": 117, "headertypeerror": 117, "imagedataerror": 117, "spatialfirstslic": 117, "spatialhead": 117, "supported_np_typ": 117, "spm2analyz": 118, "spm2analyzehead": 118, "spm2analyzeimag": 118, "spm99analyz": 119, "spm99analyzehead": 119, "spm99analyzeimag": 119, "spmanalyzehead": 119, "array_sequ": 120, "tck": 120, "tractogram": 120, "tractogram_fil": 120, "trk": 120, "detect_format": 120, "is_support": 120, "arraysequ": 120, "concaten": 120, "create_arraysequences_from_gener": 120, "is_array_sequ": 120, "is_ndarray_of_int_or_bool": 120, "tckfile": 120, "lazydict": 120, "lazytractogram": 120, "perarraydict": 120, "perarraysequencedict": 120, "sliceabledatadict": 120, "tractogramitem": 120, "is_data_dict": 120, "is_lazy_dict": 120, "datawarn": 120, "extensionwarn": 120, "headererror": 120, "headerwarn": 120, "tractogramfil": 120, "abstractclassmethod": 120, "trkfile": 120, "decode_value_from_nam": 120, "encode_value_in_nam": 120, "get_affine_rasmm_to_trackvi": 120, "get_affine_trackvis_to_rasmm": 120, "get_affine_from_refer": 120, "peek_next": 120, "tmpdir": 121, "temporarydirectori": 121, "ingivendirectori": 121, "intemporarydirectori": 121, "tripwir": 122, "tripwireerror": 122, "is_tripwir": 122, "viewer": 123, "orthoslicer3d": 123, "volumeutil": 124, "dtypemapp": 124, "recod": 124, "apply_read_sc": 124, "array_from_fil": 124, "array_to_fil": 124, "best_write_scale_ftyp": 124, "better_float_of": 124, "finite_rang": 124, "fname_ext_ul_cas": 124, "int_scinter_ftyp": 124, "make_dt_cod": 124, "pretty_map": 124, "rec2dict": 124, "seek_tel": 124, "shape_zoom_affin": 124, "working_typ": 124, "write_zero": 124, "wrapstruct": 125, "mapping": 125, "consist": 125, "labeledwrapstruct": 125, "wrapstructerror": 125, "xmlutil": 126, "xmlbasedhead": 126, "xmlparser": 126, "xmlserializ": 126}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "File Formats": [[0, "file-formats"]], "Image Utilities": [[0, "image-utilities"]], "Float / integer conversion": [[0, "float-integer-conversion"]], "System utilities": [[0, "system-utilities"]], "Miscellaneous Helpers": [[0, "miscellaneous-helpers"]], "Alphabetical API reference": [[0, "alphabetical-api-reference"]], "NiBabel Development Changelog": [[1, "nibabel-development-changelog"]], "Nibabel releases": [[1, "nibabel-releases"]], "5.0.0 (Monday 9 January 2023)": [[1, "monday-9-january-2023"]], "New features": [[1, "new-features"], [1, "id6"], [1, "id14"], [1, "id20"], [1, "id30"], [1, "id47"], [1, "id56"], [1, "id60"], [1, "id67"], [1, "id72"]], "Enhancements": [[1, "enhancements"], [1, "id7"], [1, "id15"], [1, "id31"], [1, "id35"], [1, "id39"], [1, "id43"], [1, "id48"], [1, "id52"], [1, "id57"], [1, "id61"], [1, "id68"], [1, "id73"]], "Bug fixes": [[1, "bug-fixes"], [1, "id1"], [1, "id3"], [1, "id8"], [1, "id11"], [1, "id16"], [1, "id19"], [1, "id21"], [1, "id24"], [1, "id26"], [1, "id28"], [1, "id32"], [1, "id36"], [1, "id40"], [1, "id44"], [1, "id49"], [1, "id53"], [1, "id58"], [1, "id62"], [1, "id65"], [1, "id69"], [1, "id74"]], "Maintenance": [[1, "maintenance"], [1, "id2"], [1, "id4"], [1, "id9"], [1, "id12"], [1, "id13"], [1, "id17"], [1, "id22"], [1, "id25"], [1, "id27"], [1, "id29"], [1, "id33"], [1, "id37"], [1, "id41"], [1, "id45"], [1, "id50"], [1, "id51"], [1, "id54"], [1, "id59"], [1, "id63"], [1, "id66"], [1, "id70"], [1, "id75"], [6, "maintenance"]], "API changes and deprecations": [[1, "api-changes-and-deprecations"], [1, "id10"], [1, "id18"], [1, "id23"], [1, "id34"], [1, "id38"], [1, "id42"], [1, "id46"], [1, "id55"], [1, "id64"], [1, "id71"], [1, "id76"]], "4.0.2 (Wednesday 31 August 2022)": [[1, "wednesday-31-august-2022"]], "4.0.1 (Saturday 18 June 2022)": [[1, "saturday-18-june-2022"]], "4.0.0 (Saturday 18 June 2022)": [[1, "id5"]], "3.2.2 (Monday 7 February 2022)": [[1, "monday-7-february-2022"]], "3.2.1 (Saturday 28 November 2020)": [[1, "saturday-28-november-2020"]], "3.2.0 (Tuesday 20 October 2020)": [[1, "tuesday-20-october-2020"]], "3.1.1 (Friday 26 June 2020)": [[1, "friday-26-june-2020"]], "3.1.0 (Monday 20 April 2020)": [[1, "monday-20-april-2020"]], "2.5.2 (Wednesday 8 April 2020)": [[1, "wednesday-8-april-2020"]], "3.0.2 (Monday 9 March 2020)": [[1, "monday-9-march-2020"]], "3.0.1 (Monday 27 January 2020)": [[1, "monday-27-january-2020"]], "3.0.0 (Wednesday 18 December 2019)": [[1, "wednesday-18-december-2019"]], "2.5.1 (Monday 23 September 2019)": [[1, "monday-23-september-2019"]], "2.5.0 (Sunday 4 August 2019)": [[1, "sunday-4-august-2019"]], "2.4.1 (Monday 27 May 2019)": [[1, "monday-27-may-2019"]], "2.4.0 (Monday 1 April 2019)": [[1, "monday-1-april-2019"]], "2.3.3 (Wednesday 16 January 2019)": [[1, "wednesday-16-january-2019"]], "2.3.2 (Wednesday 2 January 2019)": [[1, "wednesday-2-january-2019"]], "2.3.1 (Tuesday 16 October 2018)": [[1, "tuesday-16-october-2018"]], "2.3 (Tuesday 12 June 2018)": [[1, "tuesday-12-june-2018"]], "2.2.1 (Wednesday 22 November 2017)": [[1, "wednesday-22-november-2017"]], "2.2 (Friday 13 October 2017)": [[1, "friday-13-october-2017"]], "2.1 (Monday 22 August 2016)": [[1, "monday-22-august-2016"]], "2.0.2 (Monday 23 November 2015)": [[1, "monday-23-november-2015"]], "2.0.1 (Saturday 27 June 2015)": [[1, "saturday-27-june-2015"]], "2.0.0 (Tuesday 9 December 2014)": [[1, "tuesday-9-december-2014"]], "1.3.0 (Tuesday 11 September 2012)": [[1, "tuesday-11-september-2012"]], "1.2.2 (Wednesday 27 June 2012)": [[1, "wednesday-27-june-2012"]], "1.2.1 (Wednesday 13 June 2012)": [[1, "wednesday-13-june-2012"]], "1.2.0 (Sunday 6 May 2012)": [[1, "sunday-6-may-2012"]], "1.1.0 (Thursday 28 April 2011)": [[1, "thursday-28-april-2011"]], "1.0.2 (Thursday 14 April 2011)": [[1, "thursday-14-april-2011"]], "1.0.1 (Wednesday 23 Feb 2011)": [[1, "wednesday-23-feb-2011"]], "1.0.0 (Thursday, 13, Oct 2010)": [[1, "thursday-13-oct-2010"]], "PyNifti releases": [[1, "pynifti-releases"]], "0.20100706.1 (Tue, 6 Jul 2010)": [[1, "tue-6-jul-2010"]], "0.20100412.1 (Mon, 12 Apr 2010)": [[1, "mon-12-apr-2010"]], "0.20090303.1 (Tue, 3 Mar 2009)": [[1, "tue-3-mar-2009"]], "0.20090205.1 (Thu, 5 Feb 2009)": [[1, "thu-5-feb-2009"]], "0.20081017.1 (Fri, 17 Oct 2008)": [[1, "fri-17-oct-2008"]], "0.20080710.1 (Thu, 7 Jul 2008)": [[1, "thu-7-jul-2008"]], "0.20080630.1 (Tue, 30 Jun 2008)": [[1, "tue-30-jun-2008"]], "0.20080624.1 (Tue, 24 Jun 2008)": [[1, "tue-24-jun-2008"]], "0.20070930.1 (Sun, 30 Sep 2007)": [[1, "sun-30-sep-2007"]], "0.20070917.1 (Mon, 17 Sep 2007)": [[1, "mon-17-sep-2007"]], "0.20070905.1  (Wed, 5 Sep 2007)": [[1, "wed-5-sep-2007"]], "0.20070803.1 (Fri, 3 Aug 2007)": [[1, "fri-3-aug-2007"]], "0.20070425.1 (Wed, 25 Apr 2007)": [[1, "wed-25-apr-2007"]], "0.20070315.1 (Thu, 15 Mar 2007)": [[1, "thu-15-mar-2007"]], "0.20070301.2 (Thu, 1 Mar 2007)": [[1, "thu-1-mar-2007"]], "0.20070301.1 (Thu, 1 Mar 2007)": [[1, "id77"]], "0.20070220.1 (Tue, 20 Feb 2007)": [[1, "tue-20-feb-2007"]], "0.20070214.1 (Wed, 14 Feb 2007)": [[1, "wed-14-feb-2007"]], "0.20061114 (Tue, 14 Nov 2006)": [[1, "tue-14-nov-2006"]], "Coordinate systems and affines": [[2, "coordinate-systems-and-affines"]], "Introducing Someone": [[2, "introducing-someone"]], "Voxel coordinates are coordinates in the image data array": [[2, "voxel-coordinates-are-coordinates-in-the-image-data-array"]], "Voxel coordinates and points in space": [[2, "voxel-coordinates-and-points-in-space"]], "The scanner-subject reference space": [[2, "the-scanner-subject-reference-space"]], "The scanner axes": [[2, "the-scanner-axes"]], "From scanner to subject": [[2, "from-scanner-to-subject"]], "Naming reference spaces": [[2, "naming-reference-spaces"]], "Voxel coordinates are in voxel space": [[2, "voxel-coordinates-are-in-voxel-space"]], "The affine matrix as a transformation between spaces": [[2, "the-affine-matrix-as-a-transformation-between-spaces"]], "The inverse of the affine gives the mapping from scanner to voxel": [[2, "the-inverse-of-the-affine-gives-the-mapping-from-scanner-to-voxel"]], "The affine by example": [[2, "the-affine-by-example"]], "Applying the affine": [[2, "applying-the-affine"]], "The affine as a series of transformations": [[2, "the-affine-as-a-series-of-transformations"]], "Other reference spaces": [[2, "other-reference-spaces"]], "Nibabel always uses an RAS+ output space": [[2, "nibabel-always-uses-an-ras-output-space"]], "How to add a new image format to nibabel": [[3, "how-to-add-a-new-image-format-to-nibabel"]], "Philosophy": [[3, "philosophy"]], "Helping us to review your code": [[3, "helping-us-to-review-your-code"]], "The format can be read-only": [[3, "the-format-can-be-read-only"]], "The image API": [[3, "the-image-api"]], "Where to start with the code": [[3, "where-to-start-with-the-code"]], "A recipe for writing a new image format": [[3, "a-recipe-for-writing-a-new-image-format"]], "Adding test data": [[4, "adding-test-data"]], "Small files": [[4, "small-files"]], "Files with open licenses": [[4, "files-with-open-licenses"]], "Adding the file to nibabel/tests/data": [[4, "adding-the-file-to-nibabel-tests-data"]], "Adding as a submodule to nibabel-data": [[4, "adding-as-a-submodule-to-nibabel-data"]], "Using submodules for tests": [[4, "using-submodules-for-tests"]], "How much data should go in a single submodule?": [[4, "how-much-data-should-go-in-a-single-submodule"]], "If in doubt": [[4, "if-in-doubt"]], "Advanced Testing": [[5, "advanced-testing"]], "Setup": [[5, "setup"]], "Long-running tests": [[5, "long-running-tests"]], "BIAP 0 - Purpose and process": [[6, "biap-0-purpose-and-process"]], "What is a BIAP?": [[6, "what-is-a-biap"]], "Types": [[6, "types"]], "BIAP Workflow": [[6, "biap-workflow"]], "Review and Resolution": [[6, "review-and-resolution"]], "How a BIAP becomes Accepted": [[6, "how-a-biap-becomes-accepted"]], "Format and Template": [[6, "format-and-template"]], "Header Preamble": [[6, "header-preamble"]], "References and Footnotes": [[6, "references-and-footnotes"]], "BIAP1 - Towards immutable images": [[7, "biap1-towards-immutable-images"]], "Resolution": [[7, "resolution"]], "Background": [[7, "background"], [8, "background"], [9, "background"], [12, "background"], [13, "background"], [14, "background"], [15, "background"], [30, "background"]], "Array images": [[7, "array-images"], [64, "array-images"]], "Proxy images": [[7, "proxy-images"]], "Issues for design": [[7, "issues-for-design"]], "Use cases": [[7, "use-cases"]], "Loading images, minimizing memory": [[7, "loading-images-minimizing-memory"]], "Loading images, maximizing speed": [[7, "loading-images-maximizing-speed"]], "Loading images, assert not modified": [[7, "loading-images-assert-not-modified"]], "Array images, proxy images, copy, view": [[7, "array-images-proxy-images-copy-view"]], "When do you want a copy and when do you want a view?": [[7, "when-do-you-want-a-copy-and-when-do-you-want-a-view"]], "Proposal": [[7, "proposal"], [9, "proposal"], [15, "proposal"]], "Questions": [[7, "questions"], [8, "questions"], [9, "questions"]], "BIAP2 - Slicecopy": [[8, "biap2-slicecopy"]], "Status": [[8, "status"], [10, "status"]], "Should slice0 be a copy or a view?": [[8, "should-slice0-be-a-copy-or-a-view"]], "What slices should the slicing allow?": [[8, "what-slices-should-the-slicing-allow"]], "Option 1: fancy slice object": [[8, "option-1-fancy-slice-object"]], "Option 2: not-fancy method call": [[8, "option-2-not-fancy-method-call"]], "BIAP3 - A JSON nifti header extension": [[9, "biap3-a-json-nifti-header-extension"]], "Abstract": [[9, "abstract"], [16, "abstract"], [25, "abstract"]], "Nifti extension types": [[9, "nifti-extension-types"]], "Alternatives": [[9, "alternatives"], [16, "alternatives"]], "Learning from NRRDs": [[9, "learning-from-nrrds"]], "General principles": [[9, "general-principles"]], "See also": [[9, "see-also"]], "The header must contain the header version": [[9, "the-header-must-contain-the-header-version"]], "The header will usually contain image metadata fields": [[9, "the-header-will-usually-contain-image-metadata-fields"]], "The header will usually contain axis names": [[9, "the-header-will-usually-contain-axis-names"]], "The header will often contain axis metadata": [[9, "the-header-will-often-contain-axis-metadata"]], "The axis metadata element": [[9, "the-axis-metadata-element"]], "The q_vector axis metadata field": [[9, "the-q-vector-axis-metadata-field"]], "acquisition_times field": [[9, "acquisition-times-field"]], "acquisition_times applying to slices": [[9, "acquisition-times-applying-to-slices"]], "acquisition_times applying to volumes": [[9, "acquisition-times-applying-to-volumes"]], "acquisition_times applying to slices and volumes": [[9, "acquisition-times-applying-to-slices-and-volumes"]], "axis_meanings field": [[9, "axis-meanings-field"]], "multi_affine field": [[9, "multi-affine-field"]], "Use case": [[9, "use-case"]], "Implementation": [[9, "implementation"], [16, "implementation"], [22, "implementation"]], "BIAP4 - Merging nibabel and dcmstack": [[10, "biap4-merging-nibabel-and-dcmstack"]], "Motivation": [[10, "motivation"], [11, "motivation"], [21, "motivation"], [29, "motivation"]], "Overview": [[10, "overview"], [11, "overview"], [18, "overview"], [44, "overview"], [45, "overview"], [49, "overview"], [54, "overview"], [55, "overview"]], "Issues": [[10, "issues"], [11, "issues"], [21, "issues"]], "DcmMetaExtension tied to NiftiExtension": [[10, "dcmmetaextension-tied-to-niftiextension"]], "Plan": [[10, "plan"], [10, "id1"], [10, "id2"], [10, "id3"]], "Keeping track of metadata when manipulating images": [[10, "keeping-track-of-metadata-when-manipulating-images"]], "Detecting slice or volume-specific data difficult for 3D and 4D DICOMS": [[10, "detecting-slice-or-volume-specific-data-difficult-for-3d-and-4d-dicoms"]], "Meta data in nested DICOM sequences can not be independently classified": [[10, "meta-data-in-nested-dicom-sequences-can-not-be-independently-classified"]], "Improving access to varying meta data through the Nifti": [[10, "improving-access-to-varying-meta-data-through-the-nifti"]], "BIAP5 - A streamlines converter": [[11, "biap5-a-streamlines-converter"]], "Header": [[11, "header"]], "Future Work": [[11, "future-work"]], "BIAP6 - Identifying image axes": [[12, "biap6-identifying-image-axes"]], "Time axis as the fourth axis": [[12, "time-axis-as-the-fourth-axis"]], "Images can have more than four axes": [[12, "images-can-have-more-than-four-axes"]], "The current nibabel convention": [[12, "the-current-nibabel-convention"]], "Distinguishing time and volume": [[12, "distinguishing-time-and-volume"]], "Possible solutions to finding axes": [[12, "possible-solutions-to-finding-axes"]], "General solution: associating axes and labels": [[12, "general-solution-associating-axes-and-labels"]], "Using convention : enforcing time as 4th axis": [[12, "using-convention-enforcing-time-as-4th-axis"]], "BIAP7 - Loading multiple images": [[13, "biap7-loading-multiple-images"]], "Some formats store images with different shapes in the same file": [[13, "some-formats-store-images-with-different-shapes-in-the-same-file"]], "It can be useful to load 4D images as multiple 3D images": [[13, "it-can-be-useful-to-load-4d-images-as-multiple-3d-images"]], "Options": [[13, "options"]], "Return an image sequence from load for some file formats": [[13, "return-an-image-sequence-from-load-for-some-file-formats"]], "Add a load_multi top-level function": [[13, "add-a-load-multi-top-level-function"]], "Next steps:": [[13, "next-steps"]], "BIAP8 - Always load image data as floating point": [[14, "biap8-always-load-image-data-as-floating-point"]], "Summary": [[14, "summary"], [21, "summary"], [29, "summary"]], "In detail": [[14, "in-detail"], [44, "in-detail"], [49, "in-detail"], [54, "in-detail"], [55, "in-detail"]], "Current implementation": [[14, "current-implementation"], [20, "current-implementation"]], "Proposal - add, prefer get_fdata method": [[14, "proposal-add-prefer-get-fdata-method"]], "BIAP9 - The Coordinate Image API": [[15, "biap9-the-coordinate-image-api"]], "Surface data is generally kept separate from geometric metadata": [[15, "surface-data-is-generally-kept-separate-from-geometric-metadata"]], "Terminology": [[15, "terminology"]], "Currently supported surface formats": [[15, "currently-supported-surface-formats"]], "Other relevant formats": [[15, "other-relevant-formats"]], "Desiderata for an API supporting surfaces": [[15, "desiderata-for-an-api-supporting-surfaces"]], "Prominent use cases": [[15, "prominent-use-cases"]], "Modeling": [[15, "modeling"]], "Smoothing": [[15, "smoothing"]], "Plotting": [[15, "plotting"]], "Subsampling CIFTI-2": [[15, "subsampling-cifti-2"]], "BIAP X \u2014 Template and Instructions": [[16, "biap-x-template-and-instructions"]], "Motivation and Scope": [[16, "motivation-and-scope"]], "Usage and Impact": [[16, "usage-and-impact"]], "Backward compatibility": [[16, "backward-compatibility"]], "Detailed description": [[16, "detailed-description"]], "Related Work": [[16, "related-work"]], "Discussion": [[16, "discussion"]], "BIAPs": [[17, "biaps"]], "BrainVoyager file formats": [[18, "brainvoyager-file-formats"]], "BV internal format axes": [[18, "bv-internal-format-axes"]], "Types of BV files": [[18, "types-of-bv-files"]], "Core Developer Guide": [[19, "core-developer-guide"]], "Reviewing": [[19, "reviewing"]], "How to Conduct A Good Review": [[19, "how-to-conduct-a-good-review"]], "Merge Only Changes You Understand": [[19, "merge-only-changes-you-understand"]], "Closing issues and pull requests": [[19, "closing-issues-and-pull-requests"]], "Further resources": [[19, "further-resources"]], "Acknowledgments": [[19, "acknowledgments"], [25, "acknowledgments"]], "Design of data packages for the nibabel and the nipy suite": [[20, "design-of-data-packages-for-the-nibabel-and-the-nipy-suite"]], "Use cases for data packages": [[20, "use-cases-for-data-packages"]], "Using the data package": [[20, "using-the-data-package"]], "Warnings during installation": [[20, "warnings-during-installation"]], "Finding the data": [[20, "finding-the-data"]], "Requirements for a data package": [[20, "requirements-for-a-data-package"]], "Data package format": [[20, "data-package-format"]], "Installing the data": [[20, "installing-the-data"]], "Packaging for distributions": [[20, "packaging-for-distributions"]], "Principles of data package": [[21, "principles-of-data-package"]], "Separation of ideas": [[21, "separation-of-ideas"]], "Package": [[21, "package"]], "Package name": [[21, "package-name"]], "Package instantiation": [[21, "package-instantiation"]], "Pinstance revision": [[21, "pinstance-revision"]], "Pinstance revision id": [[21, "pinstance-revision-id"]], "Pinstance tag": [[21, "pinstance-tag"]], "Pinstance version": [[21, "pinstance-version"]], "Package provider bundle": [[21, "package-provider-bundle"]], "Provider bundle format": [[21, "provider-bundle-format"]], "Pinstance release": [[21, "pinstance-release"]], "Prundle discovery": [[21, "prundle-discovery"]], "Prundle discovery source": [[21, "prundle-discovery-source"]], "Pinstance metadata query": [[21, "pinstance-metadata-query"]], "Pinstance metadata query source": [[21, "pinstance-metadata-query-source"]], "Pinstance installation": [[21, "pinstance-installation"]], "Data and metadata": [[21, "data-and-metadata"]], "Comparative terminology": [[21, "comparative-terminology"]], "Compared to Debian packaging": [[21, "compared-to-debian-packaging"]], "Desiderata": [[21, "desiderata"]], "Dependency management": [[21, "dependency-management"]], "Authentication and validation": [[21, "authentication-and-validation"]], "Differences from code packages": [[21, "differences-from-code-packages"]], "Some usecases": [[21, "some-usecases"]], "Discovery": [[21, "discovery"], [22, "discovery"]], "Data package usecases and implementation": [[22, "data-package-usecases-and-implementation"]], "Usecases": [[22, "usecases"]], "Prundles": [[22, "prundles"]], "Examples": [[22, "examples"], [79, "examples"]], "Create local-path prundle": [[22, "create-local-path-prundle"]], "Getting prundle data": [[22, "getting-prundle-data"]], "Discovery sources": [[22, "discovery-sources"], [22, "id1"]], "Default discovery sources": [[22, "default-discovery-sources"]], "Discovery source pools": [[22, "discovery-source-pools"]], "Register a prundle": [[22, "register-a-prundle"]], "Local path prundles": [[22, "local-path-prundles"]], "Registering a package": [[22, "registering-a-package"]], "Using discovery sources without dpkg": [[22, "using-discovery-sources-without-dpkg"]], "Developer discussions": [[23, "developer-discussions"]], "NiBabel Developer Guidelines": [[24, "nibabel-developer-guidelines"]], "NiBabel source code": [[24, "nibabel-source-code"]], "Documentation": [[24, "documentation"], [58, "id1"]], "Code Documentation": [[24, "code-documentation"]], "Git Repository": [[24, "git-repository"]], "Layout": [[24, "layout"]], "Commits": [[24, "commits"]], "Merges": [[24, "merges"]], "Changelog": [[24, "changelog"]], "Community guidelines": [[24, "code-of-conduct"]], "Governance and Decision Making": [[25, "governance-and-decision-making"]], "Roles And Responsibilities": [[25, "roles-and-responsibilities"]], "The Community": [[25, "the-community"]], "Contributors": [[25, "contributors"]], "Core Developers": [[25, "core-developers"]], "Steering Council": [[25, "steering-council"]], "Decision Making Process": [[25, "decision-making-process"]], "Enhancement Proposals (BIAPs)": [[25, "enhancement-proposals-biaps"]], "The nibabel image object": [[26, "the-nibabel-image-object"]], "Developer documentation page": [[27, "developer-documentation-page"]], "A guide to making a nibabel release": [[28, "a-guide-to-making-a-nibabel-release"]], "Release checklist": [[28, "release-checklist"]], "Keeping track of whether images have been modified since load": [[29, "keeping-track-of-whether-images-have-been-modified-since-load"]], "Possible implementation": [[29, "possible-implementation"]], "Roadmap": [[30, "roadmap"]], "Expressive API": [[30, "expressive-api"]], "Axis and tick labels": [[30, "axis-and-tick-labels"]], "API for surface data": [[30, "api-for-surface-data"]], "Range": [[30, "range"]], "Spatial transforms": [[30, "spatial-transforms"]], "Scalefactors and intercepts": [[31, "scalefactors-and-intercepts"]], "Image use-cases in SPM": [[32, "image-use-cases-in-spm"]], "SPM image methods / functions": [[32, "spm-image-methods-functions"]], "dcm2nii algorithms": [[33, "dcm2nii-algorithms"]], "Compiling dcm2nii": [[33, "compiling-dcm2nii"]], "Some tag modifications": [[33, "some-tag-modifications"]], "Sorting slices into volumes": [[33, "sorting-slices-into-volumes"]], "DICOM concepts and implementations": [[34, "dicom-concepts-and-implementations"]], "DICOM fields": [[35, "dicom-fields"]], "Fields for ordering DICOM files into images": [[35, "fields-for-ordering-dicom-files-into-images"]], "Multi-frame images": [[35, "multi-frame-images"]], "DICOM information": [[36, "dicom-information"]], "Sample images": [[36, "sample-images"]], "Introduction to DICOM": [[37, "introduction-to-dicom"]], "DICOM is messages": [[37, "dicom-is-messages"]], "The DICOM standard": [[37, "the-dicom-standard"]], "DICOM data format": [[37, "dicom-data-format"]], "DICOM elements": [[37, "dicom-elements"]], "Attribute Tag": [[37, "attribute-tag"]], "Standard attribute tags": [[37, "standard-attribute-tags"]], "Private attribute tags": [[37, "private-attribute-tags"]], "Value Representation": [[37, "value-representation"]], "Value length": [[37, "value-length"]], "Value field": [[37, "value-field"]], "Data element tags and data dictionaries": [[37, "data-element-tags-and-data-dictionaries"]], "Value Representation in the data dictionary": [[37, "value-representation-in-the-data-dictionary"]], "Value Multiplicity in the data dictionary": [[37, "value-multiplicity-in-the-data-dictionary"]], "DICOM data structures": [[37, "dicom-data-structures"]], "A data set": [[37, "a-data-set"]], "Background - the DICOM world": [[37, "background-the-dicom-world"]], "DICOM Entities and Information Object Definitions": [[37, "dicom-entities-and-information-object-definitions"]], "DICOM services (DIMSE)": [[37, "dicom-services-dimse"]], "DICOM service object pairs (SOPs)": [[37, "dicom-service-object-pairs-sops"]], "DICOM files": [[37, "dicom-files"]], "Siemens mosaic format": [[38, "siemens-mosaic-format"]], "Getting the slices from the mosaic": [[38, "getting-the-slices-from-the-mosaic"]], "DICOM orientation for mosaic": [[38, "dicom-orientation-for-mosaic"]], "Data scaling": [[38, "data-scaling"], [65, "data-scaling"]], "DICOM Tags in the NIfTI Header": [[39, "dicom-tags-in-the-nifti-header"]], "Defining the DICOM orientation": [[40, "defining-the-dicom-orientation"]], "DICOM patient coordinate system": [[40, "dicom-patient-coordinate-system"]], "DICOM pixel data": [[40, "dicom-pixel-data"]], "Pixel spacing": [[40, "pixel-spacing"]], "DICOM voxel to patient coordinate system mapping": [[40, "dicom-voxel-to-patient-coordinate-system-mapping"]], "(i, j), columns, rows in DICOM": [[40, "i-j-columns-rows-in-dicom"]], "DICOM affines again": [[40, "dicom-affines-again"]], "DICOM affine formula": [[40, "dicom-affine-formula"]], "Getting a 3D affine from a DICOM slice or list of slices": [[40, "getting-a-3d-affine-from-a-dicom-slice-or-list-of-slices"]], "DICOM affine Definitions": [[40, "dicom-affine-definitions"]], "Derivations": [[40, "derivations"]], "3D affine formulae": [[40, "d-affine-formulae"]], "Working out the Z coordinates for a set of slices": [[40, "working-out-the-z-coordinates-for-a-set-of-slices"]], "Siemens format DICOM with CSA header": [[41, "siemens-format-dicom-with-csa-header"]], "CSA header": [[41, "csa-header"]], "CSA1": [[41, "csa1"]], "Start header": [[41, "start-header"], [41, "id2"]], "Each tag": [[41, "each-tag"], [41, "id3"]], "Each item": [[41, "each-item"], [41, "id4"]], "CSA2": [[41, "csa2"]], "SPM DICOM conversion": [[42, "spm-dicom-conversion"]], "spm_dicom_dict.mat": [[42, "spm-dicom-dict-mat"]], "spm_dicom_headers.m": [[42, "spm-dicom-headers-m"]], "File opening": [[42, "file-opening"]], "tag read for Philips Integra": [[42, "tag-read-for-philips-integra"]], "Tag length": [[42, "tag-length"]], "SQ VR type (Sequence of items type)": [[42, "sq-vr-type-sequence-of-items-type"]], "spm_dicom_convert.m": [[42, "spm-dicom-convert-m"]], "File categorization": [[42, "file-categorization"]], "Sorting files into volumes": [[42, "sorting-files-into-volumes"]], "First pass": [[42, "first-pass"]], "Second pass": [[42, "second-pass"]], "Final check": [[42, "final-check"]], "Possible volume resort": [[42, "possible-volume-resort"]], "Writing DICOM volumes": [[42, "writing-dicom-volumes"]], "Making the affine": [[42, "making-the-affine"]], "Writing the voxel data": [[42, "writing-the-voxel-data"]], "Getting Started": [[43, "getting-started"]], "Configure git": [[44, "configure-git"]], "user.name and user.email": [[44, "user-name-and-user-email"]], "Aliases": [[44, "aliases"]], "Editor": [[44, "editor"]], "Merging": [[44, "merging"]], "Fancy log output": [[44, "fancy-log-output"]], "Development workflow": [[45, "development-workflow"]], "Workflow summary": [[45, "workflow-summary"]], "Consider deleting your master branch": [[45, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[45, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[45, "make-a-new-feature-branch"]], "The editing workflow": [[45, "the-editing-workflow"]], "In more detail": [[45, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[45, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[45, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[45, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[45, "several-people-sharing-a-single-repository"]], "Explore your repository": [[45, "explore-your-repository"]], "Rebasing on trunk": [[45, "rebasing-on-trunk"]], "Recovering from mess-ups": [[45, "recovering-from-mess-ups"]], "Rewriting commit history": [[45, "rewriting-commit-history"]], "Following the latest source": [[46, "following-the-latest-source"]], "Get the local copy of the code": [[46, "get-the-local-copy-of-the-code"]], "Updating the code": [[46, "updating-the-code"]], "Making your own copy (fork) of nibabel": [[47, "making-your-own-copy-fork-of-nibabel"]], "Set up and configure a github account": [[47, "set-up-and-configure-a-github-account"]], "Create your own forked copy of nibabel": [[47, "create-your-own-forked-copy-of-nibabel"]], "Git for development": [[48, "git-for-development"]], "Install git": [[49, "install-git"]], "Introduction": [[50, "introduction"]], "git resources": [[51, "git-resources"]], "Tutorials and summaries": [[51, "tutorials-and-summaries"]], "Advanced git workflow": [[51, "advanced-git-workflow"]], "Manual pages online": [[51, "manual-pages-online"]], "Working with nibabel source code": [[52, "working-with-nibabel-source-code"]], "Maintainer workflow": [[53, "maintainer-workflow"]], "Integrating changes": [[53, "integrating-changes"]], "A few commits": [[53, "a-few-commits"]], "A long series of commits": [[53, "a-long-series-of-commits"]], "Check the history": [[53, "check-the-history"]], "Push to trunk": [[53, "push-to-trunk"]], "Making a patch": [[54, "making-a-patch"]], "Making patches": [[54, "making-patches"]], "Moving from patching to development": [[54, "moving-from-patching-to-development"]], "Set up your fork": [[55, "set-up-your-fork"]], "Clone your fork": [[55, "clone-your-fork"]], "Linking your repository to the upstream repo": [[55, "linking-your-repository-to-the-upstream-repo"]], "Image voxel orientation": [[56, "image-voxel-orientation"]], "Images and memory": [[57, "images-and-memory"]], "Using in_memory to check the state of the cache": [[57, "using-in-memory-to-check-the-state-of-the-cache"]], "Using uncache": [[57, "using-uncache"]], "Saving memory": [[57, "saving-memory"]], "Uncache the array": [[57, "uncache-the-array"]], "Use the array proxy instead of get_fdata()": [[57, "use-the-array-proxy-instead-of-get-fdata"]], "Use the caching keyword to get_fdata()": [[57, "use-the-caching-keyword-to-get-fdata"]], "Saving time and memory": [[57, "saving-time-and-memory"]], "NiBabel": [[58, "nibabel"], [61, "nibabel"]], "Website": [[58, "website"], [69, "website"]], "Mailing Lists": [[58, "mailing-lists"], [69, "mailing-lists"]], "Code": [[58, "code"], [69, "code"]], "License": [[58, "license"], [69, "license"]], "Citing nibabel": [[58, "citing-nibabel"], [69, "citing-nibabel"]], "Authors and Contributors": [[58, "authors-and-contributors"]], "License reprise": [[58, "license-reprise"]], "Download and Installation": [[58, "download-and-installation"]], "Support": [[58, "support"]], "Installation": [[59, "installation"], [59, "id2"]], "Installer and packages": [[59, "installer-and-packages"]], "pip and the Python package index": [[59, "pip-and-the-python-package-index"]], "Debian/Ubuntu": [[59, "debian-ubuntu"]], "Install a development version": [[59, "install-a-development-version"]], "Requirements": [[59, "requirements"]], "Get the development sources": [[59, "get-the-development-sources"]], "Validating your install": [[59, "validating-your-install"]], "Installing data packages": [[60, "installing-data-packages"]], "Data package installation as an administrator": [[60, "data-package-installation-as-an-administrator"]], "Non-administrator data package installation": [[60, "non-administrator-data-package-installation"]], "On unix": [[60, "on-unix"]], "On windows": [[60, "on-windows"]], "Copyright and Licenses": [[61, "copyright-and-licenses"]], "3rd party code and data": [[61, "rd-party-code-and-data"]], "NetCDF": [[61, "netcdf"]], "Sphinx autosummary extension": [[61, "sphinx-autosummary-extension"]], "OrderedSet": [[61, "orderedset"]], "mni_icbm152_t1_tal_nlin_asym_09a": [[61, "mni-icbm152-t1-tal-nlin-asym-09a"]], "Philips PAR/REC data": [[61, "philips-par-rec-data"]], "NiBabel Manual": [[62, "nibabel-manual"]], "Radiological vs neurological conventions": [[63, "radiological-vs-neurological-conventions"]], "Neurological and radiological display convention": [[63, "neurological-and-radiological-display-convention"]], "Alignment of world and voxel axes": [[63, "alignment-of-world-and-voxel-axes"]], "Neurological / radiological voxel layout": [[63, "neurological-radiological-voxel-layout"]], "Nibabel images": [[64, "nibabel-images"]], "The image object": [[64, "the-image-object"]], "The image header": [[64, "the-image-header"]], "The image data array": [[64, "the-image-data-array"]], "Array proxies and proxy images": [[64, "array-proxies-and-proxy-images"]], "Getting the image data the easy way": [[64, "getting-the-image-data-the-easy-way"]], "Proxies and caching": [[64, "proxies-and-caching"]], "Image slicing": [[64, "image-slicing"]], "Loading and saving": [[64, "loading-and-saving"]], "Details of files and images": [[64, "details-of-files-and-images"]], "Working with NIfTI images": [[65, "working-with-nifti-images"]], "Preliminaries": [[65, "preliminaries"]], "Example NIfTI images": [[65, "example-nifti-images"]], "The NIfTI header": [[65, "the-nifti-header"]], "The NIfTI affines": [[65, "the-nifti-affines"]], "The sform affine": [[65, "the-sform-affine"]], "The qform affine": [[65, "the-qform-affine"]], "The fall-back header affine": [[65, "the-fall-back-header-affine"]], "Choosing the image affine": [[65, "choosing-the-image-affine"]], "Default sform and qform codes": [[65, "default-sform-and-qform-codes"]], "IPython notebooks for Nibabel project": [[66, "ipython-notebooks-for-nibabel-project"]], "Rotation matrix orthogonality": [[66, "rotation-matrix-orthogonality"]], "Relationship between images and io implementations": [[67, "relationship-between-images-and-io-implementations"]], "Summary and sign-off": [[67, "summary-and-sign-off"]], "Images": [[67, "images"]], "IO implementations": [[67, "io-implementations"]], "API Reference": [[68, "api-reference"]], "nibabel": [[69, "module-nibabel"]], "Quickstart": [[69, "quickstart"]], "bench": [[69, "bench"]], "get_info": [[69, "get-info"]], "test": [[69, "test"]], "affines": [[70, "module-nibabel.affines"]], "AffineError": [[70, "affineerror"]], "append_diag": [[70, "append-diag"]], "apply_affine": [[70, "apply-affine"]], "dot_reduce": [[70, "dot-reduce"]], "from_matvec": [[70, "from-matvec"]], "obliquity": [[70, "obliquity"]], "rescale_affine": [[70, "rescale-affine"]], "to_matvec": [[70, "to-matvec"]], "voxel_sizes": [[70, "voxel-sizes"]], "analyze": [[71, "module-nibabel.analyze"]], "The Analyze header format": [[71, "the-analyze-header-format"]], "Notes": [[71, "notes"], [76, "notes"]], "AnalyzeHeader": [[71, "analyzeheader"]], "AnalyzeImage": [[71, "analyzeimage"]], "arrayproxy": [[72, "module-nibabel.arrayproxy"]], "ArrayLike": [[72, "arraylike"]], "ArrayProxy": [[72, "id1"]], "get_obj_dtype": [[72, "get-obj-dtype"]], "is_proxy": [[72, "is-proxy"]], "reshape_dataobj": [[72, "reshape-dataobj"]], "arraywriters": [[73, "module-nibabel.arraywriters"]], "ArrayWriter": [[73, "arraywriter"]], "ScalingError": [[73, "scalingerror"]], "SlopeArrayWriter": [[73, "slopearraywriter"]], "SlopeInterArrayWriter": [[73, "slopeinterarraywriter"]], "WriterError": [[73, "writererror"]], "get_slope_inter": [[73, "get-slope-inter"]], "make_array_writer": [[73, "make-array-writer"]], "batteryrunners": [[74, "module-nibabel.batteryrunners"]], "More about checks": [[74, "more-about-checks"]], "BatteryRunner": [[74, "batteryrunner"]], "Report": [[74, "report"]], "benchmarks": [[75, "module-nibabel.benchmarks"]], "Module: benchmarks.bench_array_to_file": [[75, "module-nibabel.benchmarks.bench_array_to_file"]], "Module: benchmarks.bench_arrayproxy_slicing": [[75, "module-nibabel.benchmarks.bench_arrayproxy_slicing"]], "Module: benchmarks.bench_fileslice": [[75, "module-nibabel.benchmarks.bench_fileslice"]], "Module: benchmarks.bench_finite_range": [[75, "module-nibabel.benchmarks.bench_finite_range"]], "Module: benchmarks.bench_load_save": [[75, "module-nibabel.benchmarks.bench_load_save"]], "Module: benchmarks.butils": [[75, "module-nibabel.benchmarks.butils"]], "bench_array_to_file": [[75, "bench-array-to-file"]], "bench_arrayproxy_slicing": [[75, "bench-arrayproxy-slicing"]], "bench_fileslice": [[75, "bench-fileslice"]], "run_slices": [[75, "run-slices"]], "bench_finite_range": [[75, "bench-finite-range"]], "bench_load_save": [[75, "bench-load-save"]], "print_git_title": [[75, "print-git-title"]], "brikhead": [[76, "module-nibabel.brikhead"]], "AFNIArrayProxy": [[76, "afniarrayproxy"]], "AFNIHeader": [[76, "afniheader"]], "AFNIHeaderError": [[76, "afniheadererror"]], "AFNIImage": [[76, "afniimage"]], "AFNIImageError": [[76, "afniimageerror"]], "parse_AFNI_header": [[76, "parse-afni-header"]], "caret": [[77, "module-nibabel.caret"]], "CaretMetaData": [[77, "caretmetadata"]], "casting": [[78, "module-nibabel.casting"]], "CastingError": [[78, "castingerror"]], "FloatingError": [[78, "floatingerror"]], "able_int_type": [[78, "able-int-type"]], "as_int": [[78, "as-int"]], "best_float": [[78, "best-float"]], "ceil_exact": [[78, "ceil-exact"]], "float_to_int": [[78, "float-to-int"]], "floor_exact": [[78, "floor-exact"]], "floor_log2": [[78, "floor-log2"]], "have_binary128": [[78, "have-binary128"]], "int_abs": [[78, "int-abs"]], "int_to_float": [[78, "int-to-float"]], "longdouble_lte_float64": [[78, "longdouble-lte-float64"]], "longdouble_precision_improved": [[78, "longdouble-precision-improved"]], "ok_floats": [[78, "ok-floats"]], "on_powerpc": [[78, "on-powerpc"]], "shared_range": [[78, "shared-range"]], "type_info": [[78, "type-info"]], "ulp": [[78, "ulp"]], "cifti2": [[79, "module-nibabel.cifti2"]], "Module: cifti2.cifti2": [[79, "module-nibabel.cifti2.cifti2"]], "Module: cifti2.cifti2_axes": [[79, "module-nibabel.cifti2.cifti2_axes"]], "Creating new CIFTI-2 axes": [[79, "creating-new-cifti-2-axes"]], "Module: cifti2.parse_cifti2": [[79, "module-nibabel.cifti2.parse_cifti2"]], "Cifti2BrainModel": [[79, "cifti2brainmodel"]], "Cifti2Header": [[79, "cifti2header"]], "Cifti2HeaderError": [[79, "cifti2headererror"]], "Cifti2Image": [[79, "cifti2image"]], "Cifti2Label": [[79, "cifti2label"]], "Cifti2LabelTable": [[79, "cifti2labeltable"]], "Cifti2Matrix": [[79, "cifti2matrix"]], "Cifti2MatrixIndicesMap": [[79, "cifti2matrixindicesmap"]], "Cifti2MetaData": [[79, "cifti2metadata"]], "Cifti2NamedMap": [[79, "cifti2namedmap"]], "Cifti2Parcel": [[79, "cifti2parcel"]], "Cifti2Surface": [[79, "cifti2surface"]], "Cifti2TransformationMatrixVoxelIndicesIJKtoXYZ": [[79, "cifti2transformationmatrixvoxelindicesijktoxyz"]], "Cifti2VertexIndices": [[79, "cifti2vertexindices"]], "Cifti2Vertices": [[79, "cifti2vertices"]], "Cifti2Volume": [[79, "cifti2volume"]], "Cifti2VoxelIndicesIJK": [[79, "cifti2voxelindicesijk"]], "LimitedNifti2Header": [[79, "limitednifti2header"]], "Axis": [[79, "axis"]], "BrainModelAxis": [[79, "brainmodelaxis"]], "LabelAxis": [[79, "labelaxis"]], "ParcelsAxis": [[79, "parcelsaxis"]], "ScalarAxis": [[79, "scalaraxis"]], "SeriesAxis": [[79, "seriesaxis"]], "from_index_mapping": [[79, "from-index-mapping"]], "to_header": [[79, "to-header"]], "Cifti2Extension": [[79, "cifti2extension"]], "Cifti2Parser": [[79, "cifti2parser"]], "cmdline": [[80, "module-nibabel.cmdline"]], "Module: cmdline.conform": [[80, "module-nibabel.cmdline.conform"]], "Module: cmdline.convert": [[80, "module-nibabel.cmdline.convert"]], "Module: cmdline.dicomfs": [[80, "module-nibabel.cmdline.dicomfs"]], "Module: cmdline.diff": [[80, "module-nibabel.cmdline.diff"]], "Module: cmdline.ls": [[80, "module-nibabel.cmdline.ls"]], "Module: cmdline.nifti_dx": [[80, "module-nibabel.cmdline.nifti_dx"]], "Module: cmdline.parrec2nii": [[80, "module-nibabel.cmdline.parrec2nii"]], "Module: cmdline.roi": [[80, "module-nibabel.cmdline.roi"]], "Module: cmdline.stats": [[80, "module-nibabel.cmdline.stats"]], "Module: cmdline.tck2trk": [[80, "module-nibabel.cmdline.tck2trk"]], "Module: cmdline.trk2tck": [[80, "module-nibabel.cmdline.trk2tck"]], "Module: cmdline.utils": [[80, "module-nibabel.cmdline.utils"]], "main": [[80, "main"], [80, "id1"], [80, "id2"], [80, "id4"], [80, "id6"], [80, "id7"], [80, "id9"], [80, "id11"], [80, "id12"], [80, "id13"], [80, "id14"]], "DICOMFS": [[80, "dicomfs"]], "FileHandle": [[80, "filehandle"]], "dummy_fuse": [[80, "dummy-fuse"]], "fuse": [[80, "fuse"]], "get_opt_parser": [[80, "get-opt-parser"], [80, "id3"], [80, "id5"], [80, "id8"]], "are_values_different": [[80, "are-values-different"]], "diff": [[80, "diff"]], "display_diff": [[80, "display-diff"]], "get_data_diff": [[80, "get-data-diff"]], "get_data_hash_diff": [[80, "get-data-hash-diff"]], "get_headers_diff": [[80, "get-headers-diff"]], "proc_file": [[80, "proc-file"], [80, "id10"]], "error": [[80, "error"]], "verbose": [[80, "verbose"], [80, "id16"]], "lossless_slice": [[80, "lossless-slice"]], "parse_slice": [[80, "parse-slice"]], "sanitize": [[80, "sanitize"]], "parse_args": [[80, "parse-args"], [80, "id15"]], "ap": [[80, "ap"]], "safe_get": [[80, "safe-get"]], "table2string": [[80, "table2string"]], "data": [[81, "module-nibabel.data"]], "Bomber": [[81, "bomber"]], "BomberError": [[81, "bombererror"]], "DataError": [[81, "dataerror"], [120, "dataerror"]], "Datasource": [[81, "datasource"]], "VersionedDatasource": [[81, "versioneddatasource"]], "datasource_or_bomber": [[81, "datasource-or-bomber"]], "find_data_dir": [[81, "find-data-dir"]], "get_data_path": [[81, "get-data-path"]], "make_datasource": [[81, "make-datasource"]], "dataobj_images": [[82, "module-nibabel.dataobj_images"]], "DataobjImage": [[82, "dataobjimage"]], "deprecated": [[83, "module-nibabel.deprecated"]], "FutureWarningMixin": [[83, "futurewarningmixin"]], "ModuleProxy": [[83, "moduleproxy"]], "VisibleDeprecationWarning": [[83, "visibledeprecationwarning"]], "alert_future_error": [[83, "alert-future-error"]], "deprecator": [[84, "module-nibabel.deprecator"]], "Deprecator": [[84, "id1"]], "ExpiredDeprecationError": [[84, "expireddeprecationerror"]], "dft": [[85, "module-nibabel.dft"]], "CachingError": [[85, "cachingerror"]], "DFTError": [[85, "dfterror"]], "InstanceStackError": [[85, "instancestackerror"]], "VolumeError": [[85, "volumeerror"]], "clear_cache": [[85, "clear-cache"]], "get_studies": [[85, "get-studies"]], "update_cache": [[85, "update-cache"]], "ecat": [[86, "module-nibabel.ecat"]], "EcatHeader": [[86, "ecatheader"]], "EcatImage": [[86, "ecatimage"]], "EcatImageArrayProxy": [[86, "ecatimagearrayproxy"]], "EcatSubHeader": [[86, "ecatsubheader"]], "get_frame_order": [[86, "get-frame-order"]], "get_series_framenumbers": [[86, "get-series-framenumbers"]], "read_mlist": [[86, "read-mlist"]], "read_subheaders": [[86, "read-subheaders"]], "environment": [[87, "module-nibabel.environment"]], "get_home_dir": [[87, "get-home-dir"]], "get_nipy_system_dir": [[87, "get-nipy-system-dir"]], "get_nipy_user_dir": [[87, "get-nipy-user-dir"]], "eulerangles": [[88, "module-nibabel.eulerangles"]], "angle_axis2euler": [[88, "angle-axis2euler"]], "euler2angle_axis": [[88, "euler2angle-axis"]], "euler2mat": [[88, "euler2mat"]], "euler2quat": [[88, "euler2quat"]], "mat2euler": [[88, "mat2euler"]], "quat2euler": [[88, "quat2euler"]], "filebasedimages": [[89, "module-nibabel.filebasedimages"]], "FileBasedHeader": [[89, "filebasedheader"]], "FileBasedImage": [[89, "filebasedimage"]], "ImageFileError": [[89, "imagefileerror"]], "SerializableImage": [[89, "serializableimage"]], "fileholders": [[90, "module-nibabel.fileholders"]], "FileHolder": [[90, "fileholder"]], "FileHolderError": [[90, "fileholdererror"]], "copy_file_map": [[90, "copy-file-map"]], "filename_parser": [[91, "module-nibabel.filename_parser"]], "TypesFilenamesError": [[91, "typesfilenameserror"]], "parse_filename": [[91, "parse-filename"]], "splitext_addext": [[91, "splitext-addext"]], "types_filenames": [[91, "types-filenames"]], "fileslice": [[92, "module-nibabel.fileslice"], [92, "id1"]], "calc_slicedefs": [[92, "calc-slicedefs"]], "canonical_slicers": [[92, "canonical-slicers"]], "fill_slicer": [[92, "fill-slicer"]], "is_fancy": [[92, "is-fancy"]], "optimize_read_slicers": [[92, "optimize-read-slicers"]], "optimize_slicer": [[92, "optimize-slicer"]], "predict_shape": [[92, "predict-shape"]], "read_segments": [[92, "read-segments"]], "slice2len": [[92, "slice2len"]], "slice2outax": [[92, "slice2outax"]], "slicers2segments": [[92, "slicers2segments"]], "strided_scalar": [[92, "strided-scalar"]], "threshold_heuristic": [[92, "threshold-heuristic"]], "fileutils": [[93, "module-nibabel.fileutils"]], "read_zt_byte_strings": [[93, "read-zt-byte-strings"]], "freesurfer": [[94, "module-nibabel.freesurfer"]], "Module: freesurfer.io": [[94, "module-nibabel.freesurfer.io"]], "Module: freesurfer.mghformat": [[94, "module-nibabel.freesurfer.mghformat"]], "read_annot": [[94, "read-annot"]], "read_geometry": [[94, "read-geometry"]], "read_label": [[94, "read-label"]], "read_morph_data": [[94, "read-morph-data"]], "write_annot": [[94, "write-annot"]], "write_geometry": [[94, "write-geometry"]], "write_morph_data": [[94, "write-morph-data"]], "MGHError": [[94, "mgherror"]], "MGHHeader": [[94, "mghheader"]], "MGHImage": [[94, "mghimage"]], "funcs": [[95, "module-nibabel.funcs"]], "as_closest_canonical": [[95, "as-closest-canonical"]], "concat_images": [[95, "concat-images"]], "four_to_three": [[95, "four-to-three"]], "squeeze_image": [[95, "squeeze-image"]], "gifti": [[96, "module-nibabel.gifti"]], "Module: gifti.gifti": [[96, "module-nibabel.gifti.gifti"]], "Module: gifti.parse_gifti_fast": [[96, "module-nibabel.gifti.parse_gifti_fast"]], "Module: gifti.util": [[96, "module-nibabel.gifti.util"]], "GiftiCoordSystem": [[96, "gifticoordsystem"]], "GiftiDataArray": [[96, "giftidataarray"]], "GiftiImage": [[96, "giftiimage"]], "GiftiLabel": [[96, "giftilabel"]], "GiftiLabelTable": [[96, "giftilabeltable"]], "GiftiMetaData": [[96, "giftimetadata"]], "GiftiNVPairs": [[96, "giftinvpairs"]], "GiftiImageParser": [[96, "giftiimageparser"]], "GiftiParseError": [[96, "giftiparseerror"]], "read_data_block": [[96, "read-data-block"]], "imageclasses": [[97, "module-nibabel.imageclasses"]], "spatial_axes_first": [[97, "spatial-axes-first"]], "imageglobals": [[98, "module-nibabel.imageglobals"]], "ErrorLevel": [[98, "errorlevel"]], "LoggingOutputSuppressor": [[98, "loggingoutputsuppressor"]], "imagestats": [[99, "module-nibabel.imagestats"]], "count_nonzero_voxels": [[99, "count-nonzero-voxels"]], "mask_volume": [[99, "mask-volume"]], "loadsave": [[100, "module-nibabel.loadsave"]], "guessed_image_type": [[100, "guessed-image-type"]], "load": [[100, "load"], [105, "load"], [106, "load"], [120, "load"]], "read_img_data": [[100, "read-img-data"]], "save": [[100, "save"], [105, "save"], [106, "save"], [120, "save"]], "minc1": [[101, "module-nibabel.minc1"]], "Minc1File": [[101, "minc1file"]], "Minc1Header": [[101, "minc1header"]], "Minc1Image": [[101, "minc1image"]], "MincError": [[101, "mincerror"]], "MincHeader": [[101, "mincheader"]], "MincImageArrayProxy": [[101, "mincimagearrayproxy"]], "minc2": [[102, "module-nibabel.minc2"]], "Hdf5Bunch": [[102, "hdf5bunch"]], "Minc2File": [[102, "minc2file"]], "Minc2Header": [[102, "minc2header"]], "Minc2Image": [[102, "minc2image"]], "mriutils": [[103, "module-nibabel.mriutils"]], "MRIError": [[103, "mrierror"]], "calculate_dwell_time": [[103, "calculate-dwell-time"]], "nicom": [[104, "module-nibabel.nicom"]], "Module: nicom.ascconv": [[104, "module-nibabel.nicom.ascconv"]], "Module: nicom.csareader": [[104, "module-nibabel.nicom.csareader"]], "Module: nicom.dicomreaders": [[104, "module-nibabel.nicom.dicomreaders"]], "Module: nicom.dicomwrappers": [[104, "module-nibabel.nicom.dicomwrappers"]], "Module: nicom.dwiparams": [[104, "module-nibabel.nicom.dwiparams"]], "Module: nicom.structreader": [[104, "module-nibabel.nicom.structreader"]], "Module: nicom.utils": [[104, "module-nibabel.nicom.utils"]], "AscconvParseError": [[104, "ascconvparseerror"]], "Atom": [[104, "atom"]], "NoValue": [[104, "novalue"]], "assign2atoms": [[104, "assign2atoms"]], "obj_from_atoms": [[104, "obj-from-atoms"]], "parse_ascconv": [[104, "parse-ascconv"]], "CSAError": [[104, "csaerror"]], "CSAReadError": [[104, "csareaderror"]], "get_acq_mat_txt": [[104, "get-acq-mat-txt"]], "get_b_matrix": [[104, "get-b-matrix"]], "get_b_value": [[104, "get-b-value"]], "get_csa_header": [[104, "get-csa-header"]], "get_g_vector": [[104, "get-g-vector"]], "get_ice_dims": [[104, "get-ice-dims"]], "get_n_mosaic": [[104, "get-n-mosaic"]], "get_scalar": [[104, "get-scalar"]], "get_slice_normal": [[104, "get-slice-normal"]], "get_vector": [[104, "get-vector"]], "is_mosaic": [[104, "is-mosaic"]], "nt_str": [[104, "nt-str"]], "read": [[104, "read"]], "DicomReadError": [[104, "dicomreaderror"]], "mosaic_to_nii": [[104, "mosaic-to-nii"]], "read_mosaic_dir": [[104, "read-mosaic-dir"]], "read_mosaic_dwi_dir": [[104, "read-mosaic-dwi-dir"]], "slices_to_series": [[104, "slices-to-series"]], "MosaicWrapper": [[104, "mosaicwrapper"]], "MultiframeWrapper": [[104, "multiframewrapper"]], "SiemensWrapper": [[104, "siemenswrapper"]], "Wrapper": [[104, "wrapper"]], "WrapperError": [[104, "wrappererror"]], "WrapperPrecisionError": [[104, "wrapperprecisionerror"]], "none_or_close": [[104, "none-or-close"]], "wrapper_from_data": [[104, "wrapper-from-data"]], "wrapper_from_file": [[104, "wrapper-from-file"]], "B2q": [[104, "b2q"]], "nearest_pos_semi_def": [[104, "nearest-pos-semi-def"]], "q2bg": [[104, "q2bg"]], "Unpacker": [[104, "unpacker"]], "find_private_section": [[104, "find-private-section"]], "nifti1": [[105, "module-nibabel.nifti1"]], "Nifti1DicomExtension": [[105, "nifti1dicomextension"]], "Nifti1Extension": [[105, "nifti1extension"]], "Nifti1Extensions": [[105, "nifti1extensions"]], "Nifti1Header": [[105, "nifti1header"]], "Nifti1Image": [[105, "nifti1image"]], "Nifti1Pair": [[105, "nifti1pair"]], "Nifti1PairHeader": [[105, "nifti1pairheader"]], "nifti2": [[106, "module-nibabel.nifti2"]], "Nifti2Header": [[106, "nifti2header"]], "Nifti2Image": [[106, "nifti2image"]], "Nifti2Pair": [[106, "nifti2pair"]], "Nifti2PairHeader": [[106, "nifti2pairheader"]], "onetime": [[107, "module-nibabel.onetime"]], "References": [[107, "references"]], "OneTimeProperty": [[107, "onetimeproperty"]], "ResetMixin": [[107, "resetmixin"]], "auto_attr": [[107, "auto-attr"]], "setattr_on_read": [[107, "setattr-on-read"]], "openers": [[108, "module-nibabel.openers"]], "DeterministicGzipFile": [[108, "deterministicgzipfile"]], "ImageOpener": [[108, "imageopener"]], "Opener": [[108, "opener"]], "optpkg": [[109, "module-nibabel.optpkg"]], "optional_package": [[109, "optional-package"]], "orientations": [[110, "module-nibabel.orientations"]], "OrientationError": [[110, "orientationerror"]], "aff2axcodes": [[110, "aff2axcodes"]], "apply_orientation": [[110, "apply-orientation"]], "axcodes2ornt": [[110, "axcodes2ornt"]], "flip_axis": [[110, "flip-axis"]], "inv_ornt_aff": [[110, "inv-ornt-aff"]], "io_orientation": [[110, "io-orientation"]], "ornt2axcodes": [[110, "ornt2axcodes"]], "ornt_transform": [[110, "ornt-transform"]], "parrec": [[111, "module-nibabel.parrec"]], "PAR file format": [[111, "par-file-format"]], "General information": [[111, "general-information"]], "Image information": [[111, "image-information"]], "Orientation": [[111, "orientation"]], "Data type": [[111, "data-type"]], "Data Sorting": [[111, "data-sorting"]], "PARRECArrayProxy": [[111, "parrecarrayproxy"]], "PARRECError": [[111, "parrecerror"]], "PARRECHeader": [[111, "parrecheader"]], "PARRECImage": [[111, "parrecimage"]], "exts2pars": [[111, "exts2pars"]], "one_line": [[111, "one-line"]], "parse_PAR_header": [[111, "parse-par-header"]], "vol_is_full": [[111, "vol-is-full"]], "vol_numbers": [[111, "vol-numbers"]], "processing": [[112, "module-nibabel.processing"]], "adapt_affine": [[112, "adapt-affine"]], "conform": [[112, "conform"]], "fwhm2sigma": [[112, "fwhm2sigma"]], "resample_from_to": [[112, "resample-from-to"]], "resample_to_output": [[112, "resample-to-output"]], "sigma2fwhm": [[112, "sigma2fwhm"]], "smooth_image": [[112, "smooth-image"]], "pydicom_compat": [[113, "module-nibabel.pydicom_compat"]], "dicom_test": [[113, "dicom-test"]], "quaternions": [[114, "module-nibabel.quaternions"]], "angle_axis2mat": [[114, "angle-axis2mat"]], "angle_axis2quat": [[114, "angle-axis2quat"]], "conjugate": [[114, "conjugate"]], "eye": [[114, "eye"]], "fillpositive": [[114, "fillpositive"]], "inverse": [[114, "inverse"]], "isunit": [[114, "isunit"]], "mat2quat": [[114, "mat2quat"]], "mult": [[114, "mult"]], "nearly_equivalent": [[114, "nearly-equivalent"]], "norm": [[114, "norm"]], "quat2angle_axis": [[114, "quat2angle-axis"]], "quat2mat": [[114, "quat2mat"]], "rotate_vector": [[114, "rotate-vector"]], "rstutils": [[115, "module-nibabel.rstutils"]], "rst_table": [[115, "rst-table"]], "spaces": [[116, "module-nibabel.spaces"]], "slice2volume": [[116, "slice2volume"]], "vox2out_vox": [[116, "vox2out-vox"]], "spatialimages": [[117, "module-nibabel.spatialimages"]], "There are several ways of writing data.": [[117, "there-are-several-ways-of-writing-data"]], "Files interface": [[117, "files-interface"]], "HeaderDataError": [[117, "headerdataerror"]], "HeaderTypeError": [[117, "headertypeerror"]], "ImageDataError": [[117, "imagedataerror"]], "SpatialFirstSlicer": [[117, "spatialfirstslicer"]], "SpatialHeader": [[117, "spatialheader"]], "SpatialImage": [[117, "spatialimage"]], "supported_np_types": [[117, "supported-np-types"]], "spm2analyze": [[118, "module-nibabel.spm2analyze"]], "Spm2AnalyzeHeader": [[118, "spm2analyzeheader"]], "Spm2AnalyzeImage": [[118, "spm2analyzeimage"]], "spm99analyze": [[119, "module-nibabel.spm99analyze"]], "Spm99AnalyzeHeader": [[119, "spm99analyzeheader"]], "Spm99AnalyzeImage": [[119, "spm99analyzeimage"]], "SpmAnalyzeHeader": [[119, "spmanalyzeheader"]], "streamlines": [[120, "module-nibabel.streamlines"]], "Module: streamlines.array_sequence": [[120, "module-nibabel.streamlines.array_sequence"]], "Module: streamlines.header": [[120, "module-nibabel.streamlines.header"]], "Module: streamlines.tck": [[120, "module-nibabel.streamlines.tck"]], "Module: streamlines.tractogram": [[120, "module-nibabel.streamlines.tractogram"]], "Module: streamlines.tractogram_file": [[120, "module-nibabel.streamlines.tractogram_file"]], "Module: streamlines.trk": [[120, "module-nibabel.streamlines.trk"]], "Module: streamlines.utils": [[120, "module-nibabel.streamlines.utils"]], "detect_format": [[120, "detect-format"]], "is_supported": [[120, "is-supported"]], "ArraySequence": [[120, "arraysequence"]], "concatenate": [[120, "concatenate"]], "create_arraysequences_from_generator": [[120, "create-arraysequences-from-generator"]], "is_array_sequence": [[120, "is-array-sequence"]], "is_ndarray_of_int_or_bool": [[120, "is-ndarray-of-int-or-bool"]], "Field": [[120, "field"]], "TckFile": [[120, "tckfile"]], "LazyDict": [[120, "lazydict"]], "LazyTractogram": [[120, "lazytractogram"]], "PerArrayDict": [[120, "perarraydict"]], "PerArraySequenceDict": [[120, "perarraysequencedict"]], "SliceableDataDict": [[120, "sliceabledatadict"]], "Tractogram": [[120, "tractogram"]], "TractogramItem": [[120, "tractogramitem"]], "is_data_dict": [[120, "is-data-dict"]], "is_lazy_dict": [[120, "is-lazy-dict"]], "DataWarning": [[120, "datawarning"]], "ExtensionWarning": [[120, "extensionwarning"]], "HeaderError": [[120, "headererror"]], "HeaderWarning": [[120, "headerwarning"]], "TractogramFile": [[120, "tractogramfile"]], "abstractclassmethod": [[120, "abstractclassmethod"]], "TrkFile": [[120, "trkfile"]], "decode_value_from_name": [[120, "decode-value-from-name"]], "encode_value_in_name": [[120, "encode-value-in-name"]], "get_affine_rasmm_to_trackvis": [[120, "get-affine-rasmm-to-trackvis"]], "get_affine_trackvis_to_rasmm": [[120, "get-affine-trackvis-to-rasmm"]], "get_affine_from_reference": [[120, "get-affine-from-reference"]], "peek_next": [[120, "peek-next"]], "tmpdirs": [[121, "module-nibabel.tmpdirs"]], "TemporaryDirectory": [[121, "temporarydirectory"]], "InGivenDirectory": [[121, "ingivendirectory"]], "InTemporaryDirectory": [[121, "intemporarydirectory"]], "tripwire": [[122, "module-nibabel.tripwire"]], "TripWire": [[122, "id1"]], "TripWireError": [[122, "tripwireerror"]], "is_tripwire": [[122, "is-tripwire"]], "viewers": [[123, "module-nibabel.viewers"]], "OrthoSlicer3D": [[123, "orthoslicer3d"]], "volumeutils": [[124, "module-nibabel.volumeutils"]], "DtypeMapper": [[124, "dtypemapper"]], "Recoder": [[124, "recoder"]], "apply_read_scaling": [[124, "apply-read-scaling"]], "array_from_file": [[124, "array-from-file"]], "array_to_file": [[124, "array-to-file"]], "best_write_scale_ftype": [[124, "best-write-scale-ftype"]], "better_float_of": [[124, "better-float-of"]], "finite_range": [[124, "finite-range"]], "fname_ext_ul_case": [[124, "fname-ext-ul-case"]], "int_scinter_ftype": [[124, "int-scinter-ftype"]], "make_dt_codes": [[124, "make-dt-codes"]], "pretty_mapping": [[124, "pretty-mapping"]], "rec2dict": [[124, "rec2dict"]], "seek_tell": [[124, "seek-tell"]], "shape_zoom_affine": [[124, "shape-zoom-affine"]], "working_type": [[124, "working-type"]], "write_zeros": [[124, "write-zeros"]], "wrapstruct": [[125, "module-nibabel.wrapstruct"], [125, "id1"]], "Mappingness": [[125, "mappingness"]], "Consistency checks": [[125, "consistency-checks"]], "LabeledWrapStruct": [[125, "labeledwrapstruct"]], "WrapStruct": [[125, "id2"]], "WrapStructError": [[125, "wrapstructerror"]], "xmlutils": [[126, "module-nibabel.xmlutils"]], "XmlBasedHeader": [[126, "xmlbasedheader"]], "XmlParser": [[126, "xmlparser"]], "XmlSerializable": [[126, "xmlserializable"]], "General tutorials": [[127, "general-tutorials"]]}, "indexentries": {"bench() (in module nibabel)": [[69, "nibabel.bench"]], "get_info() (in module nibabel)": [[69, "nibabel.get_info"]], "module": [[69, "module-nibabel"], [70, "module-nibabel.affines"], [71, "module-nibabel.analyze"], [72, "module-nibabel.arrayproxy"], [73, "module-nibabel.arraywriters"], [74, "module-nibabel.batteryrunners"], [75, "module-nibabel.benchmarks"], [75, "module-nibabel.benchmarks.bench_array_to_file"], [75, "module-nibabel.benchmarks.bench_arrayproxy_slicing"], [75, "module-nibabel.benchmarks.bench_fileslice"], [75, "module-nibabel.benchmarks.bench_finite_range"], [75, "module-nibabel.benchmarks.bench_load_save"], [75, "module-nibabel.benchmarks.butils"], [76, "module-nibabel.brikhead"], [77, "module-nibabel.caret"], [78, "module-nibabel.casting"], [79, "module-nibabel.cifti2"], [79, "module-nibabel.cifti2.cifti2"], [79, "module-nibabel.cifti2.cifti2_axes"], [79, "module-nibabel.cifti2.parse_cifti2"], [80, "module-nibabel.cmdline"], [80, "module-nibabel.cmdline.conform"], [80, "module-nibabel.cmdline.convert"], [80, "module-nibabel.cmdline.dicomfs"], [80, "module-nibabel.cmdline.diff"], [80, "module-nibabel.cmdline.ls"], [80, "module-nibabel.cmdline.nifti_dx"], [80, "module-nibabel.cmdline.parrec2nii"], [80, "module-nibabel.cmdline.roi"], [80, "module-nibabel.cmdline.stats"], [80, "module-nibabel.cmdline.tck2trk"], [80, "module-nibabel.cmdline.trk2tck"], [80, "module-nibabel.cmdline.utils"], [81, "module-nibabel.data"], [82, "module-nibabel.dataobj_images"], [83, "module-nibabel.deprecated"], [84, "module-nibabel.deprecator"], [85, "module-nibabel.dft"], [86, "module-nibabel.ecat"], [87, "module-nibabel.environment"], [88, "module-nibabel.eulerangles"], [89, "module-nibabel.filebasedimages"], [90, "module-nibabel.fileholders"], [91, "module-nibabel.filename_parser"], [92, "module-nibabel.fileslice"], [93, "module-nibabel.fileutils"], [94, "module-nibabel.freesurfer"], [94, "module-nibabel.freesurfer.io"], [94, "module-nibabel.freesurfer.mghformat"], [95, "module-nibabel.funcs"], [96, "module-nibabel.gifti"], [96, "module-nibabel.gifti.gifti"], [96, "module-nibabel.gifti.parse_gifti_fast"], [96, "module-nibabel.gifti.util"], [97, "module-nibabel.imageclasses"], [98, "module-nibabel.imageglobals"], [99, "module-nibabel.imagestats"], [100, "module-nibabel.loadsave"], [101, "module-nibabel.minc1"], [102, "module-nibabel.minc2"], [103, "module-nibabel.mriutils"], [104, "module-nibabel.nicom"], [104, "module-nibabel.nicom.ascconv"], [104, "module-nibabel.nicom.csareader"], [104, "module-nibabel.nicom.dicomreaders"], [104, "module-nibabel.nicom.dicomwrappers"], [104, "module-nibabel.nicom.dwiparams"], [104, "module-nibabel.nicom.structreader"], [104, "module-nibabel.nicom.utils"], [105, "module-nibabel.nifti1"], [106, "module-nibabel.nifti2"], [107, "module-nibabel.onetime"], [108, "module-nibabel.openers"], [109, "module-nibabel.optpkg"], [110, "module-nibabel.orientations"], [111, "module-nibabel.parrec"], [112, "module-nibabel.processing"], [113, "module-nibabel.pydicom_compat"], [114, "module-nibabel.quaternions"], [115, "module-nibabel.rstutils"], [116, "module-nibabel.spaces"], [117, "module-nibabel.spatialimages"], [118, "module-nibabel.spm2analyze"], [119, "module-nibabel.spm99analyze"], [120, "module-nibabel.streamlines"], [120, "module-nibabel.streamlines.array_sequence"], [120, "module-nibabel.streamlines.header"], [120, "module-nibabel.streamlines.tck"], [120, "module-nibabel.streamlines.tractogram"], [120, "module-nibabel.streamlines.tractogram_file"], [120, "module-nibabel.streamlines.trk"], [120, "module-nibabel.streamlines.utils"], [121, "module-nibabel.tmpdirs"], [122, "module-nibabel.tripwire"], [123, "module-nibabel.viewers"], [124, "module-nibabel.volumeutils"], [125, "module-nibabel.wrapstruct"], [126, "module-nibabel.xmlutils"]], "nibabel": [[69, "module-nibabel"]], "test() (in module nibabel)": [[69, "nibabel.test"]], "affineerror (class in nibabel.affines)": [[70, "nibabel.affines.AffineError"]], "__init__() (nibabel.affines.affineerror method)": [[70, "nibabel.affines.AffineError.__init__"]], "append_diag() (in module nibabel.affines)": [[70, "nibabel.affines.append_diag"]], "apply_affine() (in module nibabel.affines)": [[70, "nibabel.affines.apply_affine"]], "dot_reduce() (in module nibabel.affines)": [[70, "nibabel.affines.dot_reduce"]], "from_matvec() (in module nibabel.affines)": [[70, "nibabel.affines.from_matvec"]], "nibabel.affines": [[70, "module-nibabel.affines"]], "obliquity() (in module nibabel.affines)": [[70, "nibabel.affines.obliquity"]], "rescale_affine() (in module nibabel.affines)": [[70, "nibabel.affines.rescale_affine"]], "to_matvec() (in module nibabel.affines)": [[70, "nibabel.affines.to_matvec"]], "voxel_sizes() (in module nibabel.affines)": [[70, "nibabel.affines.voxel_sizes"]], "analyzeheader (class in nibabel.analyze)": [[71, "nibabel.analyze.AnalyzeHeader"]], "analyzeimage (class in nibabel.analyze)": [[71, "nibabel.analyze.AnalyzeImage"]], "imagearrayproxy (nibabel.analyze.analyzeimage attribute)": [[71, "nibabel.analyze.AnalyzeImage.ImageArrayProxy"]], "__init__() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.__init__"]], "__init__() (nibabel.analyze.analyzeimage method)": [[71, "nibabel.analyze.AnalyzeImage.__init__"]], "as_analyze_map() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.as_analyze_map"]], "data_from_fileobj() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.data_from_fileobj"]], "data_to_fileobj() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.data_to_fileobj"]], "default_structarr() (nibabel.analyze.analyzeheader class method)": [[71, "nibabel.analyze.AnalyzeHeader.default_structarr"]], "default_x_flip (nibabel.analyze.analyzeheader attribute)": [[71, "nibabel.analyze.AnalyzeHeader.default_x_flip"]], "files_types (nibabel.analyze.analyzeimage attribute)": [[71, "nibabel.analyze.AnalyzeImage.files_types"]], "from_file_map() (nibabel.analyze.analyzeimage class method)": [[71, "nibabel.analyze.AnalyzeImage.from_file_map"]], "from_header() (nibabel.analyze.analyzeheader class method)": [[71, "nibabel.analyze.AnalyzeHeader.from_header"]], "get_base_affine() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.get_base_affine"]], "get_best_affine() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.get_best_affine"]], "get_data_dtype() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.get_data_dtype"]], "get_data_dtype() (nibabel.analyze.analyzeimage method)": [[71, "nibabel.analyze.AnalyzeImage.get_data_dtype"]], "get_data_offset() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.get_data_offset"]], "get_data_shape() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.get_data_shape"]], "get_slope_inter() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.get_slope_inter"]], "get_zooms() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.get_zooms"]], "guessed_endian() (nibabel.analyze.analyzeheader class method)": [[71, "nibabel.analyze.AnalyzeHeader.guessed_endian"]], "has_data_intercept (nibabel.analyze.analyzeheader attribute)": [[71, "nibabel.analyze.AnalyzeHeader.has_data_intercept"]], "has_data_slope (nibabel.analyze.analyzeheader attribute)": [[71, "nibabel.analyze.AnalyzeHeader.has_data_slope"]], "header_class (nibabel.analyze.analyzeimage attribute)": [[71, "nibabel.analyze.AnalyzeImage.header_class"]], "makeable (nibabel.analyze.analyzeimage attribute)": [[71, "nibabel.analyze.AnalyzeImage.makeable"]], "may_contain_header() (nibabel.analyze.analyzeheader class method)": [[71, "nibabel.analyze.AnalyzeHeader.may_contain_header"]], "nibabel.analyze": [[71, "module-nibabel.analyze"]], "raw_data_from_fileobj() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.raw_data_from_fileobj"]], "rw (nibabel.analyze.analyzeimage attribute)": [[71, "nibabel.analyze.AnalyzeImage.rw"]], "set_data_dtype() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.set_data_dtype"]], "set_data_dtype() (nibabel.analyze.analyzeimage method)": [[71, "nibabel.analyze.AnalyzeImage.set_data_dtype"]], "set_data_offset() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.set_data_offset"]], "set_data_shape() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.set_data_shape"]], "set_slope_inter() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.set_slope_inter"]], "set_zooms() (nibabel.analyze.analyzeheader method)": [[71, "nibabel.analyze.AnalyzeHeader.set_zooms"]], "sizeof_hdr (nibabel.analyze.analyzeheader attribute)": [[71, "nibabel.analyze.AnalyzeHeader.sizeof_hdr"]], "template_dtype (nibabel.analyze.analyzeheader attribute)": [[71, "nibabel.analyze.AnalyzeHeader.template_dtype"]], "to_file_map() (nibabel.analyze.analyzeimage method)": [[71, "nibabel.analyze.AnalyzeImage.to_file_map"]], "valid_exts (nibabel.analyze.analyzeimage attribute)": [[71, "nibabel.analyze.AnalyzeImage.valid_exts"]], "arraylike (class in nibabel.arrayproxy)": [[72, "nibabel.arrayproxy.ArrayLike"]], "arrayproxy (class in nibabel.arrayproxy)": [[72, "nibabel.arrayproxy.ArrayProxy"]], "__init__() (nibabel.arrayproxy.arraylike method)": [[72, "nibabel.arrayproxy.ArrayLike.__init__"]], "__init__() (nibabel.arrayproxy.arrayproxy method)": [[72, "nibabel.arrayproxy.ArrayProxy.__init__"]], "dtype (nibabel.arrayproxy.arrayproxy property)": [[72, "nibabel.arrayproxy.ArrayProxy.dtype"]], "get_obj_dtype() (in module nibabel.arrayproxy)": [[72, "nibabel.arrayproxy.get_obj_dtype"]], "get_unscaled() (nibabel.arrayproxy.arrayproxy method)": [[72, "nibabel.arrayproxy.ArrayProxy.get_unscaled"]], "inter (nibabel.arrayproxy.arrayproxy property)": [[72, "nibabel.arrayproxy.ArrayProxy.inter"]], "is_proxy (nibabel.arrayproxy.arrayproxy property)": [[72, "nibabel.arrayproxy.ArrayProxy.is_proxy"]], "is_proxy() (in module nibabel.arrayproxy)": [[72, "nibabel.arrayproxy.is_proxy"]], "ndim (nibabel.arrayproxy.arraylike attribute)": [[72, "nibabel.arrayproxy.ArrayLike.ndim"]], "ndim (nibabel.arrayproxy.arrayproxy property)": [[72, "nibabel.arrayproxy.ArrayProxy.ndim"]], "nibabel.arrayproxy": [[72, "module-nibabel.arrayproxy"]], "offset (nibabel.arrayproxy.arrayproxy property)": [[72, "nibabel.arrayproxy.ArrayProxy.offset"]], "reshape() (nibabel.arrayproxy.arrayproxy method)": [[72, "nibabel.arrayproxy.ArrayProxy.reshape"]], "reshape_dataobj() (in module nibabel.arrayproxy)": [[72, "nibabel.arrayproxy.reshape_dataobj"]], "shape (nibabel.arrayproxy.arraylike attribute)": [[72, "nibabel.arrayproxy.ArrayLike.shape"]], "shape (nibabel.arrayproxy.arrayproxy property)": [[72, "nibabel.arrayproxy.ArrayProxy.shape"]], "slope (nibabel.arrayproxy.arrayproxy property)": [[72, "nibabel.arrayproxy.ArrayProxy.slope"]], "arraywriter (class in nibabel.arraywriters)": [[73, "nibabel.arraywriters.ArrayWriter"]], "scalingerror (class in nibabel.arraywriters)": [[73, "nibabel.arraywriters.ScalingError"]], "slopearraywriter (class in nibabel.arraywriters)": [[73, "nibabel.arraywriters.SlopeArrayWriter"]], "slopeinterarraywriter (class in nibabel.arraywriters)": [[73, "nibabel.arraywriters.SlopeInterArrayWriter"]], "writererror (class in nibabel.arraywriters)": [[73, "nibabel.arraywriters.WriterError"]], "__init__() (nibabel.arraywriters.arraywriter method)": [[73, "nibabel.arraywriters.ArrayWriter.__init__"]], "__init__() (nibabel.arraywriters.scalingerror method)": [[73, "nibabel.arraywriters.ScalingError.__init__"]], "__init__() (nibabel.arraywriters.slopearraywriter method)": [[73, "nibabel.arraywriters.SlopeArrayWriter.__init__"]], "__init__() (nibabel.arraywriters.slopeinterarraywriter method)": [[73, "nibabel.arraywriters.SlopeInterArrayWriter.__init__"]], "__init__() (nibabel.arraywriters.writererror method)": [[73, "nibabel.arraywriters.WriterError.__init__"]], "array (nibabel.arraywriters.arraywriter property)": [[73, "nibabel.arraywriters.ArrayWriter.array"]], "calc_scale() (nibabel.arraywriters.slopearraywriter method)": [[73, "nibabel.arraywriters.SlopeArrayWriter.calc_scale"]], "finite_range() (nibabel.arraywriters.arraywriter method)": [[73, "nibabel.arraywriters.ArrayWriter.finite_range"]], "get_slope_inter() (in module nibabel.arraywriters)": [[73, "nibabel.arraywriters.get_slope_inter"]], "has_nan (nibabel.arraywriters.arraywriter property)": [[73, "nibabel.arraywriters.ArrayWriter.has_nan"]], "inter (nibabel.arraywriters.slopeinterarraywriter property)": [[73, "nibabel.arraywriters.SlopeInterArrayWriter.inter"]], "make_array_writer() (in module nibabel.arraywriters)": [[73, "nibabel.arraywriters.make_array_writer"]], "nibabel.arraywriters": [[73, "module-nibabel.arraywriters"]], "out_dtype (nibabel.arraywriters.arraywriter property)": [[73, "nibabel.arraywriters.ArrayWriter.out_dtype"]], "reset() (nibabel.arraywriters.slopearraywriter method)": [[73, "nibabel.arraywriters.SlopeArrayWriter.reset"]], "reset() (nibabel.arraywriters.slopeinterarraywriter method)": [[73, "nibabel.arraywriters.SlopeInterArrayWriter.reset"]], "scaling_needed() (nibabel.arraywriters.arraywriter method)": [[73, "nibabel.arraywriters.ArrayWriter.scaling_needed"]], "scaling_needed() (nibabel.arraywriters.slopearraywriter method)": [[73, "nibabel.arraywriters.SlopeArrayWriter.scaling_needed"]], "slope (nibabel.arraywriters.slopearraywriter property)": [[73, "nibabel.arraywriters.SlopeArrayWriter.slope"]], "to_fileobj() (nibabel.arraywriters.arraywriter method)": [[73, "nibabel.arraywriters.ArrayWriter.to_fileobj"]], "to_fileobj() (nibabel.arraywriters.slopearraywriter method)": [[73, "nibabel.arraywriters.SlopeArrayWriter.to_fileobj"]], "to_fileobj() (nibabel.arraywriters.slopeinterarraywriter method)": [[73, "nibabel.arraywriters.SlopeInterArrayWriter.to_fileobj"]], "batteryrunner (class in nibabel.batteryrunners)": [[74, "nibabel.batteryrunners.BatteryRunner"]], "report (class in nibabel.batteryrunners)": [[74, "nibabel.batteryrunners.Report"]], "__init__() (nibabel.batteryrunners.batteryrunner method)": [[74, "nibabel.batteryrunners.BatteryRunner.__init__"]], "__init__() (nibabel.batteryrunners.report method)": [[74, "nibabel.batteryrunners.Report.__init__"]], "check_fix() (nibabel.batteryrunners.batteryrunner method)": [[74, "nibabel.batteryrunners.BatteryRunner.check_fix"]], "check_only() (nibabel.batteryrunners.batteryrunner method)": [[74, "nibabel.batteryrunners.BatteryRunner.check_only"]], "log_raise() (nibabel.batteryrunners.report method)": [[74, "nibabel.batteryrunners.Report.log_raise"]], "message (nibabel.batteryrunners.report property)": [[74, "nibabel.batteryrunners.Report.message"]], "nibabel.batteryrunners": [[74, "module-nibabel.batteryrunners"]], "write_raise() (nibabel.batteryrunners.report method)": [[74, "nibabel.batteryrunners.Report.write_raise"]], "bench_array_to_file() (in module nibabel.benchmarks.bench_array_to_file)": [[75, "nibabel.benchmarks.bench_array_to_file.bench_array_to_file"]], "bench_arrayproxy_slicing() (in module nibabel.benchmarks.bench_arrayproxy_slicing)": [[75, "nibabel.benchmarks.bench_arrayproxy_slicing.bench_arrayproxy_slicing"]], "bench_fileslice() (in module nibabel.benchmarks.bench_fileslice)": [[75, "nibabel.benchmarks.bench_fileslice.bench_fileslice"]], "bench_finite_range() (in module nibabel.benchmarks.bench_finite_range)": [[75, "nibabel.benchmarks.bench_finite_range.bench_finite_range"]], "bench_load_save() (in module nibabel.benchmarks.bench_load_save)": [[75, "nibabel.benchmarks.bench_load_save.bench_load_save"]], "nibabel.benchmarks": [[75, "module-nibabel.benchmarks"]], "nibabel.benchmarks.bench_array_to_file": [[75, "module-nibabel.benchmarks.bench_array_to_file"]], "nibabel.benchmarks.bench_arrayproxy_slicing": [[75, "module-nibabel.benchmarks.bench_arrayproxy_slicing"]], "nibabel.benchmarks.bench_fileslice": [[75, "module-nibabel.benchmarks.bench_fileslice"]], "nibabel.benchmarks.bench_finite_range": [[75, "module-nibabel.benchmarks.bench_finite_range"]], "nibabel.benchmarks.bench_load_save": [[75, "module-nibabel.benchmarks.bench_load_save"]], "nibabel.benchmarks.butils": [[75, "module-nibabel.benchmarks.butils"]], "print_git_title() (in module nibabel.benchmarks.butils)": [[75, "nibabel.benchmarks.butils.print_git_title"]], "run_slices() (in module nibabel.benchmarks.bench_fileslice)": [[75, "nibabel.benchmarks.bench_fileslice.run_slices"]], "afniarrayproxy (class in nibabel.brikhead)": [[76, "nibabel.brikhead.AFNIArrayProxy"]], "afniheader (class in nibabel.brikhead)": [[76, "nibabel.brikhead.AFNIHeader"]], "afniheadererror (class in nibabel.brikhead)": [[76, "nibabel.brikhead.AFNIHeaderError"]], "afniimage (class in nibabel.brikhead)": [[76, "nibabel.brikhead.AFNIImage"]], "afniimageerror (class in nibabel.brikhead)": [[76, "nibabel.brikhead.AFNIImageError"]], "imagearrayproxy (nibabel.brikhead.afniimage attribute)": [[76, "nibabel.brikhead.AFNIImage.ImageArrayProxy"]], "__init__() (nibabel.brikhead.afniarrayproxy method)": [[76, "nibabel.brikhead.AFNIArrayProxy.__init__"]], "__init__() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.__init__"]], "__init__() (nibabel.brikhead.afniheadererror method)": [[76, "nibabel.brikhead.AFNIHeaderError.__init__"]], "__init__() (nibabel.brikhead.afniimage method)": [[76, "nibabel.brikhead.AFNIImage.__init__"]], "__init__() (nibabel.brikhead.afniimageerror method)": [[76, "nibabel.brikhead.AFNIImageError.__init__"]], "copy() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.copy"]], "files_types (nibabel.brikhead.afniimage attribute)": [[76, "nibabel.brikhead.AFNIImage.files_types"]], "filespec_to_file_map() (nibabel.brikhead.afniimage class method)": [[76, "nibabel.brikhead.AFNIImage.filespec_to_file_map"]], "from_file_map() (nibabel.brikhead.afniimage class method)": [[76, "nibabel.brikhead.AFNIImage.from_file_map"]], "from_fileobj() (nibabel.brikhead.afniheader class method)": [[76, "nibabel.brikhead.AFNIHeader.from_fileobj"]], "from_header() (nibabel.brikhead.afniheader class method)": [[76, "nibabel.brikhead.AFNIHeader.from_header"]], "get_affine() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.get_affine"]], "get_data_offset() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.get_data_offset"]], "get_data_scaling() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.get_data_scaling"]], "get_slope_inter() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.get_slope_inter"]], "get_space() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.get_space"]], "get_volume_labels() (nibabel.brikhead.afniheader method)": [[76, "nibabel.brikhead.AFNIHeader.get_volume_labels"]], "header_class (nibabel.brikhead.afniimage attribute)": [[76, "nibabel.brikhead.AFNIImage.header_class"]], "makeable (nibabel.brikhead.afniimage attribute)": [[76, "nibabel.brikhead.AFNIImage.makeable"]], "nibabel.brikhead": [[76, "module-nibabel.brikhead"]], "parse_afni_header() (in module nibabel.brikhead)": [[76, "nibabel.brikhead.parse_AFNI_header"]], "rw (nibabel.brikhead.afniimage attribute)": [[76, "nibabel.brikhead.AFNIImage.rw"]], "scaling (nibabel.brikhead.afniarrayproxy property)": [[76, "nibabel.brikhead.AFNIArrayProxy.scaling"]], "valid_exts (nibabel.brikhead.afniimage attribute)": [[76, "nibabel.brikhead.AFNIImage.valid_exts"]], "caretmetadata (class in nibabel.caret)": [[77, "nibabel.caret.CaretMetaData"]], "__init__() (nibabel.caret.caretmetadata method)": [[77, "nibabel.caret.CaretMetaData.__init__"]], "nibabel.caret": [[77, "module-nibabel.caret"]], "castingerror (class in nibabel.casting)": [[78, "nibabel.casting.CastingError"]], "floatingerror (class in nibabel.casting)": [[78, "nibabel.casting.FloatingError"]], "__init__() (nibabel.casting.castingerror method)": [[78, "nibabel.casting.CastingError.__init__"]], "__init__() (nibabel.casting.floatingerror method)": [[78, "nibabel.casting.FloatingError.__init__"]], "able_int_type() (in module nibabel.casting)": [[78, "nibabel.casting.able_int_type"]], "as_int() (in module nibabel.casting)": [[78, "nibabel.casting.as_int"]], "best_float() (in module nibabel.casting)": [[78, "nibabel.casting.best_float"]], "ceil_exact() (in module nibabel.casting)": [[78, "nibabel.casting.ceil_exact"]], "float_to_int() (in module nibabel.casting)": [[78, "nibabel.casting.float_to_int"]], "floor_exact() (in module nibabel.casting)": [[78, "nibabel.casting.floor_exact"]], "floor_log2() (in module nibabel.casting)": [[78, "nibabel.casting.floor_log2"]], "have_binary128() (in module nibabel.casting)": [[78, "nibabel.casting.have_binary128"]], "int_abs() (in module nibabel.casting)": [[78, "nibabel.casting.int_abs"]], "int_to_float() (in module nibabel.casting)": [[78, "nibabel.casting.int_to_float"]], "longdouble_lte_float64() (in module nibabel.casting)": [[78, "nibabel.casting.longdouble_lte_float64"]], "longdouble_precision_improved() (in module nibabel.casting)": [[78, "nibabel.casting.longdouble_precision_improved"]], "nibabel.casting": [[78, "module-nibabel.casting"]], "ok_floats() (in module nibabel.casting)": [[78, "nibabel.casting.ok_floats"]], "on_powerpc() (in module nibabel.casting)": [[78, "nibabel.casting.on_powerpc"]], "shared_range() (in module nibabel.casting)": [[78, "nibabel.casting.shared_range"]], "type_info() (in module nibabel.casting)": [[78, "nibabel.casting.type_info"]], "ulp() (in module nibabel.casting)": [[78, "nibabel.casting.ulp"]], "axis (class in nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.Axis"]], "brainmodelaxis (class in nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis"]], "characterdatahandler() (nibabel.cifti2.parse_cifti2.cifti2parser method)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Parser.CharacterDataHandler"]], "cifti2brainmodel (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2BrainModel"]], "cifti2extension (class in nibabel.cifti2.parse_cifti2)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Extension"]], "cifti2header (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Header"]], "cifti2headererror (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2HeaderError"]], "cifti2image (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Image"]], "cifti2label (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Label"]], "cifti2labeltable (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2LabelTable"]], "cifti2matrix (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix"]], "cifti2matrixindicesmap (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap"]], "cifti2metadata (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2MetaData"]], "cifti2namedmap (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2NamedMap"]], "cifti2parcel (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Parcel"]], "cifti2parser (class in nibabel.cifti2.parse_cifti2)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Parser"]], "cifti2surface (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Surface"]], "cifti2transformationmatrixvoxelindicesijktoxyz (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2TransformationMatrixVoxelIndicesIJKtoXYZ"]], "cifti2vertexindices (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2VertexIndices"]], "cifti2vertices (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Vertices"]], "cifti2volume (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2Volume"]], "cifti2voxelindicesijk (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.Cifti2VoxelIndicesIJK"]], "endelementhandler() (nibabel.cifti2.parse_cifti2.cifti2parser method)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Parser.EndElementHandler"]], "labelaxis (class in nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.LabelAxis"]], "limitednifti2header (class in nibabel.cifti2.cifti2)": [[79, "nibabel.cifti2.cifti2.LimitedNifti2Header"]], "parcelsaxis (class in nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis"]], "scalaraxis (class in nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.ScalarAxis"]], "seriesaxis (class in nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis"]], "startelementhandler() (nibabel.cifti2.parse_cifti2.cifti2parser method)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Parser.StartElementHandler"]], "__init__() (nibabel.cifti2.cifti2.cifti2brainmodel method)": [[79, "nibabel.cifti2.cifti2.Cifti2BrainModel.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2header method)": [[79, "nibabel.cifti2.cifti2.Cifti2Header.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2headererror method)": [[79, "nibabel.cifti2.cifti2.Cifti2HeaderError.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2image method)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2label method)": [[79, "nibabel.cifti2.cifti2.Cifti2Label.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2labeltable method)": [[79, "nibabel.cifti2.cifti2.Cifti2LabelTable.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2matrix method)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2matrixindicesmap method)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2metadata method)": [[79, "nibabel.cifti2.cifti2.Cifti2MetaData.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2namedmap method)": [[79, "nibabel.cifti2.cifti2.Cifti2NamedMap.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2parcel method)": [[79, "nibabel.cifti2.cifti2.Cifti2Parcel.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2surface method)": [[79, "nibabel.cifti2.cifti2.Cifti2Surface.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2transformationmatrixvoxelindicesijktoxyz method)": [[79, "nibabel.cifti2.cifti2.Cifti2TransformationMatrixVoxelIndicesIJKtoXYZ.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2vertexindices method)": [[79, "nibabel.cifti2.cifti2.Cifti2VertexIndices.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2vertices method)": [[79, "nibabel.cifti2.cifti2.Cifti2Vertices.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2volume method)": [[79, "nibabel.cifti2.cifti2.Cifti2Volume.__init__"]], "__init__() (nibabel.cifti2.cifti2.cifti2voxelindicesijk method)": [[79, "nibabel.cifti2.cifti2.Cifti2VoxelIndicesIJK.__init__"]], "__init__() (nibabel.cifti2.cifti2.limitednifti2header method)": [[79, "nibabel.cifti2.cifti2.LimitedNifti2Header.__init__"]], "__init__() (nibabel.cifti2.cifti2_axes.axis method)": [[79, "nibabel.cifti2.cifti2_axes.Axis.__init__"]], "__init__() (nibabel.cifti2.cifti2_axes.brainmodelaxis method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.__init__"]], "__init__() (nibabel.cifti2.cifti2_axes.labelaxis method)": [[79, "nibabel.cifti2.cifti2_axes.LabelAxis.__init__"]], "__init__() (nibabel.cifti2.cifti2_axes.parcelsaxis method)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis.__init__"]], "__init__() (nibabel.cifti2.cifti2_axes.scalaraxis method)": [[79, "nibabel.cifti2.cifti2_axes.ScalarAxis.__init__"]], "__init__() (nibabel.cifti2.cifti2_axes.seriesaxis method)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis.__init__"]], "__init__() (nibabel.cifti2.parse_cifti2.cifti2extension method)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Extension.__init__"]], "__init__() (nibabel.cifti2.parse_cifti2.cifti2parser method)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Parser.__init__"]], "affine (nibabel.cifti2.cifti2_axes.brainmodelaxis property)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.affine"]], "affine (nibabel.cifti2.cifti2_axes.parcelsaxis property)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis.affine"]], "append() (nibabel.cifti2.cifti2.cifti2labeltable method)": [[79, "nibabel.cifti2.cifti2.Cifti2LabelTable.append"]], "append_cifti_vertices() (nibabel.cifti2.cifti2.cifti2parcel method)": [[79, "nibabel.cifti2.cifti2.Cifti2Parcel.append_cifti_vertices"]], "brain_models (nibabel.cifti2.cifti2.cifti2matrixindicesmap property)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap.brain_models"]], "code (nibabel.cifti2.parse_cifti2.cifti2extension attribute)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Extension.code"]], "data (nibabel.cifti2.cifti2.cifti2metadata property)": [[79, "nibabel.cifti2.cifti2.Cifti2MetaData.data"]], "difference_update() (nibabel.cifti2.cifti2.cifti2metadata method)": [[79, "nibabel.cifti2.cifti2.Cifti2MetaData.difference_update"]], "files_types (nibabel.cifti2.cifti2.cifti2image attribute)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.files_types"]], "flush_chardata() (nibabel.cifti2.parse_cifti2.cifti2parser method)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Parser.flush_chardata"]], "from_axes() (nibabel.cifti2.cifti2.cifti2header class method)": [[79, "nibabel.cifti2.cifti2.Cifti2Header.from_axes"]], "from_brain_models() (nibabel.cifti2.cifti2_axes.parcelsaxis class method)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis.from_brain_models"]], "from_file_map() (nibabel.cifti2.cifti2.cifti2image class method)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.from_file_map"]], "from_image() (nibabel.cifti2.cifti2.cifti2image class method)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.from_image"]], "from_index_mapping() (in module nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.from_index_mapping"]], "from_index_mapping() (nibabel.cifti2.cifti2_axes.brainmodelaxis class method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.from_index_mapping"]], "from_index_mapping() (nibabel.cifti2.cifti2_axes.labelaxis class method)": [[79, "nibabel.cifti2.cifti2_axes.LabelAxis.from_index_mapping"]], "from_index_mapping() (nibabel.cifti2.cifti2_axes.parcelsaxis class method)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis.from_index_mapping"]], "from_index_mapping() (nibabel.cifti2.cifti2_axes.scalaraxis class method)": [[79, "nibabel.cifti2.cifti2_axes.ScalarAxis.from_index_mapping"]], "from_index_mapping() (nibabel.cifti2.cifti2_axes.seriesaxis class method)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis.from_index_mapping"]], "from_mask() (nibabel.cifti2.cifti2_axes.brainmodelaxis class method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.from_mask"]], "from_surface() (nibabel.cifti2.cifti2_axes.brainmodelaxis class method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.from_surface"]], "get_axis() (nibabel.cifti2.cifti2.cifti2header method)": [[79, "nibabel.cifti2.cifti2.Cifti2Header.get_axis"]], "get_axis() (nibabel.cifti2.cifti2.cifti2matrix method)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix.get_axis"]], "get_data_dtype() (nibabel.cifti2.cifti2.cifti2image method)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.get_data_dtype"]], "get_data_shape() (nibabel.cifti2.cifti2.cifti2matrix method)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix.get_data_shape"]], "get_element() (nibabel.cifti2.cifti2_axes.brainmodelaxis method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.get_element"]], "get_element() (nibabel.cifti2.cifti2_axes.labelaxis method)": [[79, "nibabel.cifti2.cifti2_axes.LabelAxis.get_element"]], "get_element() (nibabel.cifti2.cifti2_axes.parcelsaxis method)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis.get_element"]], "get_element() (nibabel.cifti2.cifti2_axes.scalaraxis method)": [[79, "nibabel.cifti2.cifti2_axes.ScalarAxis.get_element"]], "get_element() (nibabel.cifti2.cifti2_axes.seriesaxis method)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis.get_element"]], "get_index_map() (nibabel.cifti2.cifti2.cifti2header method)": [[79, "nibabel.cifti2.cifti2.Cifti2Header.get_index_map"]], "get_index_map() (nibabel.cifti2.cifti2.cifti2matrix method)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix.get_index_map"]], "header_class (nibabel.cifti2.cifti2.cifti2image attribute)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.header_class"]], "insert() (nibabel.cifti2.cifti2.cifti2matrix method)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix.insert"]], "insert() (nibabel.cifti2.cifti2.cifti2matrixindicesmap method)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap.insert"]], "insert() (nibabel.cifti2.cifti2.cifti2vertexindices method)": [[79, "nibabel.cifti2.cifti2.Cifti2VertexIndices.insert"]], "insert() (nibabel.cifti2.cifti2.cifti2vertices method)": [[79, "nibabel.cifti2.cifti2.Cifti2Vertices.insert"]], "insert() (nibabel.cifti2.cifti2.cifti2voxelindicesijk method)": [[79, "nibabel.cifti2.cifti2.Cifti2VoxelIndicesIJK.insert"]], "iter_structures() (nibabel.cifti2.cifti2_axes.brainmodelaxis method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.iter_structures"]], "label_table (nibabel.cifti2.cifti2.cifti2namedmap property)": [[79, "nibabel.cifti2.cifti2.Cifti2NamedMap.label_table"]], "makeable (nibabel.cifti2.cifti2.cifti2image attribute)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.makeable"]], "mapped_indices (nibabel.cifti2.cifti2.cifti2header property)": [[79, "nibabel.cifti2.cifti2.Cifti2Header.mapped_indices"]], "mapped_indices (nibabel.cifti2.cifti2.cifti2matrix property)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix.mapped_indices"]], "may_contain_header() (nibabel.cifti2.cifti2.cifti2header class method)": [[79, "nibabel.cifti2.cifti2.Cifti2Header.may_contain_header"]], "metadata (nibabel.cifti2.cifti2.cifti2matrix property)": [[79, "nibabel.cifti2.cifti2.Cifti2Matrix.metadata"]], "metadata (nibabel.cifti2.cifti2.cifti2namedmap property)": [[79, "nibabel.cifti2.cifti2.Cifti2NamedMap.metadata"]], "name (nibabel.cifti2.cifti2_axes.brainmodelaxis property)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.name"]], "named_maps (nibabel.cifti2.cifti2.cifti2matrixindicesmap property)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap.named_maps"]], "nibabel.cifti2": [[79, "module-nibabel.cifti2"]], "nibabel.cifti2.cifti2": [[79, "module-nibabel.cifti2.cifti2"]], "nibabel.cifti2.cifti2_axes": [[79, "module-nibabel.cifti2.cifti2_axes"]], "nibabel.cifti2.parse_cifti2": [[79, "module-nibabel.cifti2.parse_cifti2"]], "nifti_header (nibabel.cifti2.cifti2.cifti2image property)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.nifti_header"]], "number_of_mapped_indices (nibabel.cifti2.cifti2.cifti2header property)": [[79, "nibabel.cifti2.cifti2.Cifti2Header.number_of_mapped_indices"]], "parcels (nibabel.cifti2.cifti2.cifti2matrixindicesmap property)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap.parcels"]], "pending_data (nibabel.cifti2.parse_cifti2.cifti2parser property)": [[79, "nibabel.cifti2.parse_cifti2.Cifti2Parser.pending_data"]], "pop_cifti2_vertices() (nibabel.cifti2.cifti2.cifti2parcel method)": [[79, "nibabel.cifti2.cifti2.Cifti2Parcel.pop_cifti2_vertices"]], "rgba (nibabel.cifti2.cifti2.cifti2label property)": [[79, "nibabel.cifti2.cifti2.Cifti2Label.rgba"]], "rw (nibabel.cifti2.cifti2.cifti2image attribute)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.rw"]], "set_data_dtype() (nibabel.cifti2.cifti2.cifti2image method)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.set_data_dtype"]], "size (nibabel.cifti2.cifti2_axes.axis property)": [[79, "nibabel.cifti2.cifti2_axes.Axis.size"]], "size (nibabel.cifti2.cifti2_axes.seriesaxis attribute)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis.size"]], "surface_mask (nibabel.cifti2.cifti2_axes.brainmodelaxis property)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.surface_mask"]], "surfaces (nibabel.cifti2.cifti2.cifti2matrixindicesmap property)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap.surfaces"]], "time (nibabel.cifti2.cifti2_axes.seriesaxis property)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis.time"]], "to_cifti_brain_structure_name() (nibabel.cifti2.cifti2_axes.brainmodelaxis static method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.to_cifti_brain_structure_name"]], "to_file_map() (nibabel.cifti2.cifti2.cifti2image method)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.to_file_map"]], "to_header() (in module nibabel.cifti2.cifti2_axes)": [[79, "nibabel.cifti2.cifti2_axes.to_header"]], "to_mapping() (nibabel.cifti2.cifti2_axes.brainmodelaxis method)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.to_mapping"]], "to_mapping() (nibabel.cifti2.cifti2_axes.labelaxis method)": [[79, "nibabel.cifti2.cifti2_axes.LabelAxis.to_mapping"]], "to_mapping() (nibabel.cifti2.cifti2_axes.parcelsaxis method)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis.to_mapping"]], "to_mapping() (nibabel.cifti2.cifti2_axes.scalaraxis method)": [[79, "nibabel.cifti2.cifti2_axes.ScalarAxis.to_mapping"]], "to_mapping() (nibabel.cifti2.cifti2_axes.seriesaxis method)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis.to_mapping"]], "unit (nibabel.cifti2.cifti2_axes.seriesaxis property)": [[79, "nibabel.cifti2.cifti2_axes.SeriesAxis.unit"]], "update_headers() (nibabel.cifti2.cifti2.cifti2image method)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.update_headers"]], "valid_exts (nibabel.cifti2.cifti2.cifti2image attribute)": [[79, "nibabel.cifti2.cifti2.Cifti2Image.valid_exts"]], "vertex_indices (nibabel.cifti2.cifti2.cifti2brainmodel property)": [[79, "nibabel.cifti2.cifti2.Cifti2BrainModel.vertex_indices"]], "volume (nibabel.cifti2.cifti2.cifti2matrixindicesmap property)": [[79, "nibabel.cifti2.cifti2.Cifti2MatrixIndicesMap.volume"]], "volume_mask (nibabel.cifti2.cifti2_axes.brainmodelaxis property)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.volume_mask"]], "volume_shape (nibabel.cifti2.cifti2_axes.brainmodelaxis property)": [[79, "nibabel.cifti2.cifti2_axes.BrainModelAxis.volume_shape"]], "volume_shape (nibabel.cifti2.cifti2_axes.parcelsaxis property)": [[79, "nibabel.cifti2.cifti2_axes.ParcelsAxis.volume_shape"]], "voxel_indices_ijk (nibabel.cifti2.cifti2.cifti2brainmodel property)": [[79, "nibabel.cifti2.cifti2.Cifti2BrainModel.voxel_indices_ijk"]], "voxel_indices_ijk (nibabel.cifti2.cifti2.cifti2parcel property)": [[79, "nibabel.cifti2.cifti2.Cifti2Parcel.voxel_indices_ijk"]], "dicomfs (class in nibabel.cmdline.dicomfs)": [[80, "nibabel.cmdline.dicomfs.DICOMFS"]], "filehandle (class in nibabel.cmdline.dicomfs)": [[80, "nibabel.cmdline.dicomfs.FileHandle"]], "fuse (nibabel.cmdline.dicomfs.dummy_fuse attribute)": [[80, "nibabel.cmdline.dicomfs.dummy_fuse.Fuse"]], "__init__() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.__init__"]], "__init__() (nibabel.cmdline.dicomfs.filehandle method)": [[80, "nibabel.cmdline.dicomfs.FileHandle.__init__"]], "__init__() (nibabel.cmdline.dicomfs.dummy_fuse method)": [[80, "nibabel.cmdline.dicomfs.dummy_fuse.__init__"]], "ap() (in module nibabel.cmdline.utils)": [[80, "nibabel.cmdline.utils.ap"]], "are_values_different() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.are_values_different"]], "diff() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.diff"]], "display_diff() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.display_diff"]], "dummy_fuse (class in nibabel.cmdline.dicomfs)": [[80, "nibabel.cmdline.dicomfs.dummy_fuse"]], "error() (in module nibabel.cmdline.parrec2nii)": [[80, "nibabel.cmdline.parrec2nii.error"]], "fuse (in module nibabel.cmdline.dicomfs)": [[80, "nibabel.cmdline.dicomfs.fuse"]], "fuse_python_api (nibabel.cmdline.dicomfs.dummy_fuse attribute)": [[80, "nibabel.cmdline.dicomfs.dummy_fuse.fuse_python_api"]], "get_data_diff() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.get_data_diff"]], "get_data_hash_diff() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.get_data_hash_diff"]], "get_headers_diff() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.get_headers_diff"]], "get_opt_parser() (in module nibabel.cmdline.dicomfs)": [[80, "nibabel.cmdline.dicomfs.get_opt_parser"]], "get_opt_parser() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.get_opt_parser"]], "get_opt_parser() (in module nibabel.cmdline.ls)": [[80, "nibabel.cmdline.ls.get_opt_parser"]], "get_opt_parser() (in module nibabel.cmdline.parrec2nii)": [[80, "nibabel.cmdline.parrec2nii.get_opt_parser"]], "get_paths() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.get_paths"]], "getattr() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.getattr"]], "lossless_slice() (in module nibabel.cmdline.roi)": [[80, "nibabel.cmdline.roi.lossless_slice"]], "main() (in module nibabel.cmdline.conform)": [[80, "nibabel.cmdline.conform.main"]], "main() (in module nibabel.cmdline.convert)": [[80, "nibabel.cmdline.convert.main"]], "main() (in module nibabel.cmdline.dicomfs)": [[80, "nibabel.cmdline.dicomfs.main"]], "main() (in module nibabel.cmdline.diff)": [[80, "nibabel.cmdline.diff.main"]], "main() (in module nibabel.cmdline.ls)": [[80, "nibabel.cmdline.ls.main"]], "main() (in module nibabel.cmdline.nifti_dx)": [[80, "nibabel.cmdline.nifti_dx.main"]], "main() (in module nibabel.cmdline.parrec2nii)": [[80, "nibabel.cmdline.parrec2nii.main"]], "main() (in module nibabel.cmdline.roi)": [[80, "nibabel.cmdline.roi.main"]], "main() (in module nibabel.cmdline.stats)": [[80, "nibabel.cmdline.stats.main"]], "main() (in module nibabel.cmdline.tck2trk)": [[80, "nibabel.cmdline.tck2trk.main"]], "main() (in module nibabel.cmdline.trk2tck)": [[80, "nibabel.cmdline.trk2tck.main"]], "match_path() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.match_path"]], "nibabel.cmdline": [[80, "module-nibabel.cmdline"]], "nibabel.cmdline.conform": [[80, "module-nibabel.cmdline.conform"]], "nibabel.cmdline.convert": [[80, "module-nibabel.cmdline.convert"]], "nibabel.cmdline.dicomfs": [[80, "module-nibabel.cmdline.dicomfs"]], "nibabel.cmdline.diff": [[80, "module-nibabel.cmdline.diff"]], "nibabel.cmdline.ls": [[80, "module-nibabel.cmdline.ls"]], "nibabel.cmdline.nifti_dx": [[80, "module-nibabel.cmdline.nifti_dx"]], "nibabel.cmdline.parrec2nii": [[80, "module-nibabel.cmdline.parrec2nii"]], "nibabel.cmdline.roi": [[80, "module-nibabel.cmdline.roi"]], "nibabel.cmdline.stats": [[80, "module-nibabel.cmdline.stats"]], "nibabel.cmdline.tck2trk": [[80, "module-nibabel.cmdline.tck2trk"]], "nibabel.cmdline.trk2tck": [[80, "module-nibabel.cmdline.trk2tck"]], "nibabel.cmdline.utils": [[80, "module-nibabel.cmdline.utils"]], "open() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.open"]], "parse_args() (in module nibabel.cmdline.tck2trk)": [[80, "nibabel.cmdline.tck2trk.parse_args"]], "parse_args() (in module nibabel.cmdline.trk2tck)": [[80, "nibabel.cmdline.trk2tck.parse_args"]], "parse_slice() (in module nibabel.cmdline.roi)": [[80, "nibabel.cmdline.roi.parse_slice"]], "proc_file() (in module nibabel.cmdline.ls)": [[80, "nibabel.cmdline.ls.proc_file"]], "proc_file() (in module nibabel.cmdline.parrec2nii)": [[80, "nibabel.cmdline.parrec2nii.proc_file"]], "read() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.read"]], "readdir() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.readdir"]], "release() (nibabel.cmdline.dicomfs.dicomfs method)": [[80, "nibabel.cmdline.dicomfs.DICOMFS.release"]], "safe_get() (in module nibabel.cmdline.utils)": [[80, "nibabel.cmdline.utils.safe_get"]], "sanitize() (in module nibabel.cmdline.roi)": [[80, "nibabel.cmdline.roi.sanitize"]], "table2string() (in module nibabel.cmdline.utils)": [[80, "nibabel.cmdline.utils.table2string"]], "verbose() (in module nibabel.cmdline.parrec2nii)": [[80, "nibabel.cmdline.parrec2nii.verbose"]], "verbose() (in module nibabel.cmdline.utils)": [[80, "nibabel.cmdline.utils.verbose"]], "bomber (class in nibabel.data)": [[81, "nibabel.data.Bomber"]], "bombererror (class in nibabel.data)": [[81, "nibabel.data.BomberError"]], "dataerror (class in nibabel.data)": [[81, "nibabel.data.DataError"]], "datasource (class in nibabel.data)": [[81, "nibabel.data.Datasource"]], "versioneddatasource (class in nibabel.data)": [[81, "nibabel.data.VersionedDatasource"]], "__init__() (nibabel.data.bomber method)": [[81, "nibabel.data.Bomber.__init__"]], "__init__() (nibabel.data.bombererror method)": [[81, "nibabel.data.BomberError.__init__"]], "__init__() (nibabel.data.dataerror method)": [[81, "nibabel.data.DataError.__init__"]], "__init__() (nibabel.data.datasource method)": [[81, "nibabel.data.Datasource.__init__"]], "__init__() (nibabel.data.versioneddatasource method)": [[81, "nibabel.data.VersionedDatasource.__init__"]], "datasource_or_bomber() (in module nibabel.data)": [[81, "nibabel.data.datasource_or_bomber"]], "find_data_dir() (in module nibabel.data)": [[81, "nibabel.data.find_data_dir"]], "get_data_path() (in module nibabel.data)": [[81, "nibabel.data.get_data_path"]], "get_filename() (nibabel.data.datasource method)": [[81, "nibabel.data.Datasource.get_filename"]], "list_files() (nibabel.data.datasource method)": [[81, "nibabel.data.Datasource.list_files"]], "make_datasource() (in module nibabel.data)": [[81, "nibabel.data.make_datasource"]], "nibabel.data": [[81, "module-nibabel.data"]], "dataobjimage (class in nibabel.dataobj_images)": [[82, "nibabel.dataobj_images.DataobjImage"]], "__init__() (nibabel.dataobj_images.dataobjimage method)": [[82, "nibabel.dataobj_images.DataobjImage.__init__"]], "dataobj (nibabel.dataobj_images.dataobjimage property)": [[82, "nibabel.dataobj_images.DataobjImage.dataobj"]], "from_file_map() (nibabel.dataobj_images.dataobjimage class method)": [[82, "nibabel.dataobj_images.DataobjImage.from_file_map"]], "from_filename() (nibabel.dataobj_images.dataobjimage class method)": [[82, "nibabel.dataobj_images.DataobjImage.from_filename"]], "get_data() (nibabel.dataobj_images.dataobjimage method)": [[82, "nibabel.dataobj_images.DataobjImage.get_data"]], "get_fdata() (nibabel.dataobj_images.dataobjimage method)": [[82, "nibabel.dataobj_images.DataobjImage.get_fdata"]], "in_memory (nibabel.dataobj_images.dataobjimage property)": [[82, "nibabel.dataobj_images.DataobjImage.in_memory"]], "load() (nibabel.dataobj_images.dataobjimage class method)": [[82, "nibabel.dataobj_images.DataobjImage.load"]], "ndim (nibabel.dataobj_images.dataobjimage property)": [[82, "nibabel.dataobj_images.DataobjImage.ndim"]], "nibabel.dataobj_images": [[82, "module-nibabel.dataobj_images"]], "shape (nibabel.dataobj_images.dataobjimage property)": [[82, "nibabel.dataobj_images.DataobjImage.shape"]], "uncache() (nibabel.dataobj_images.dataobjimage method)": [[82, "nibabel.dataobj_images.DataobjImage.uncache"]], "futurewarningmixin (class in nibabel.deprecated)": [[83, "nibabel.deprecated.FutureWarningMixin"]], "moduleproxy (class in nibabel.deprecated)": [[83, "nibabel.deprecated.ModuleProxy"]], "visibledeprecationwarning (class in nibabel.deprecated)": [[83, "nibabel.deprecated.VisibleDeprecationWarning"]], "__init__() (nibabel.deprecated.futurewarningmixin method)": [[83, "nibabel.deprecated.FutureWarningMixin.__init__"]], "__init__() (nibabel.deprecated.moduleproxy method)": [[83, "nibabel.deprecated.ModuleProxy.__init__"]], "__init__() (nibabel.deprecated.visibledeprecationwarning method)": [[83, "nibabel.deprecated.VisibleDeprecationWarning.__init__"]], "alert_future_error() (in module nibabel.deprecated)": [[83, "nibabel.deprecated.alert_future_error"]], "nibabel.deprecated": [[83, "module-nibabel.deprecated"]], "warn_message (nibabel.deprecated.futurewarningmixin attribute)": [[83, "nibabel.deprecated.FutureWarningMixin.warn_message"]], "deprecator (class in nibabel.deprecator)": [[84, "nibabel.deprecator.Deprecator"]], "expireddeprecationerror (class in nibabel.deprecator)": [[84, "nibabel.deprecator.ExpiredDeprecationError"]], "__init__() (nibabel.deprecator.deprecator method)": [[84, "nibabel.deprecator.Deprecator.__init__"]], "__init__() (nibabel.deprecator.expireddeprecationerror method)": [[84, "nibabel.deprecator.ExpiredDeprecationError.__init__"]], "is_bad_version() (nibabel.deprecator.deprecator method)": [[84, "nibabel.deprecator.Deprecator.is_bad_version"]], "nibabel.deprecator": [[84, "module-nibabel.deprecator"]], "cachingerror (class in nibabel.dft)": [[85, "nibabel.dft.CachingError"]], "dfterror (class in nibabel.dft)": [[85, "nibabel.dft.DFTError"]], "instancestackerror (class in nibabel.dft)": [[85, "nibabel.dft.InstanceStackError"]], "volumeerror (class in nibabel.dft)": [[85, "nibabel.dft.VolumeError"]], "__init__() (nibabel.dft.cachingerror method)": [[85, "nibabel.dft.CachingError.__init__"]], "__init__() (nibabel.dft.dfterror method)": [[85, "nibabel.dft.DFTError.__init__"]], "__init__() (nibabel.dft.instancestackerror method)": [[85, "nibabel.dft.InstanceStackError.__init__"]], "__init__() (nibabel.dft.volumeerror method)": [[85, "nibabel.dft.VolumeError.__init__"]], "clear_cache() (in module nibabel.dft)": [[85, "nibabel.dft.clear_cache"]], "get_studies() (in module nibabel.dft)": [[85, "nibabel.dft.get_studies"]], "nibabel.dft": [[85, "module-nibabel.dft"]], "update_cache() (in module nibabel.dft)": [[85, "nibabel.dft.update_cache"]], "ecatheader (class in nibabel.ecat)": [[86, "nibabel.ecat.EcatHeader"]], "ecatimage (class in nibabel.ecat)": [[86, "nibabel.ecat.EcatImage"]], "ecatimagearrayproxy (class in nibabel.ecat)": [[86, "nibabel.ecat.EcatImageArrayProxy"]], "ecatsubheader (class in nibabel.ecat)": [[86, "nibabel.ecat.EcatSubHeader"]], "imagearrayproxy (nibabel.ecat.ecatimage attribute)": [[86, "nibabel.ecat.EcatImage.ImageArrayProxy"]], "__init__() (nibabel.ecat.ecatheader method)": [[86, "nibabel.ecat.EcatHeader.__init__"]], "__init__() (nibabel.ecat.ecatimage method)": [[86, "nibabel.ecat.EcatImage.__init__"]], "__init__() (nibabel.ecat.ecatimagearrayproxy method)": [[86, "nibabel.ecat.EcatImageArrayProxy.__init__"]], "__init__() (nibabel.ecat.ecatsubheader method)": [[86, "nibabel.ecat.EcatSubHeader.__init__"]], "affine (nibabel.ecat.ecatimage property)": [[86, "nibabel.ecat.EcatImage.affine"]], "data_from_fileobj() (nibabel.ecat.ecatsubheader method)": [[86, "nibabel.ecat.EcatSubHeader.data_from_fileobj"]], "default_structarr() (nibabel.ecat.ecatheader class method)": [[86, "nibabel.ecat.EcatHeader.default_structarr"]], "files_types (nibabel.ecat.ecatimage attribute)": [[86, "nibabel.ecat.EcatImage.files_types"]], "from_file_map() (nibabel.ecat.ecatimage class method)": [[86, "nibabel.ecat.EcatImage.from_file_map"]], "from_image() (nibabel.ecat.ecatimage class method)": [[86, "nibabel.ecat.EcatImage.from_image"]], "get_data_dtype() (nibabel.ecat.ecatheader method)": [[86, "nibabel.ecat.EcatHeader.get_data_dtype"]], "get_data_dtype() (nibabel.ecat.ecatimage method)": [[86, "nibabel.ecat.EcatImage.get_data_dtype"]], "get_filetype() (nibabel.ecat.ecatheader method)": [[86, "nibabel.ecat.EcatHeader.get_filetype"]], "get_frame() (nibabel.ecat.ecatimage method)": [[86, "nibabel.ecat.EcatImage.get_frame"]], "get_frame_affine() (nibabel.ecat.ecatimage method)": [[86, "nibabel.ecat.EcatImage.get_frame_affine"]], "get_frame_affine() (nibabel.ecat.ecatsubheader method)": [[86, "nibabel.ecat.EcatSubHeader.get_frame_affine"]], "get_frame_order() (in module nibabel.ecat)": [[86, "nibabel.ecat.get_frame_order"]], "get_mlist() (nibabel.ecat.ecatimage method)": [[86, "nibabel.ecat.EcatImage.get_mlist"]], "get_nframes() (nibabel.ecat.ecatsubheader method)": [[86, "nibabel.ecat.EcatSubHeader.get_nframes"]], "get_patient_orient() (nibabel.ecat.ecatheader method)": [[86, "nibabel.ecat.EcatHeader.get_patient_orient"]], "get_series_framenumbers() (in module nibabel.ecat)": [[86, "nibabel.ecat.get_series_framenumbers"]], "get_shape() (nibabel.ecat.ecatsubheader method)": [[86, "nibabel.ecat.EcatSubHeader.get_shape"]], "get_subheaders() (nibabel.ecat.ecatimage method)": [[86, "nibabel.ecat.EcatImage.get_subheaders"]], "get_zooms() (nibabel.ecat.ecatsubheader method)": [[86, "nibabel.ecat.EcatSubHeader.get_zooms"]], "guessed_endian() (nibabel.ecat.ecatheader class method)": [[86, "nibabel.ecat.EcatHeader.guessed_endian"]], "header_class (nibabel.ecat.ecatimage attribute)": [[86, "nibabel.ecat.EcatImage.header_class"]], "is_proxy (nibabel.ecat.ecatimagearrayproxy property)": [[86, "nibabel.ecat.EcatImageArrayProxy.is_proxy"]], "load() (nibabel.ecat.ecatimage class method)": [[86, "nibabel.ecat.EcatImage.load"]], "ndim (nibabel.ecat.ecatimagearrayproxy property)": [[86, "nibabel.ecat.EcatImageArrayProxy.ndim"]], "nibabel.ecat": [[86, "module-nibabel.ecat"]], "raw_data_from_fileobj() (nibabel.ecat.ecatsubheader method)": [[86, "nibabel.ecat.EcatSubHeader.raw_data_from_fileobj"]], "read_mlist() (in module nibabel.ecat)": [[86, "nibabel.ecat.read_mlist"]], "read_subheaders() (in module nibabel.ecat)": [[86, "nibabel.ecat.read_subheaders"]], "shape (nibabel.ecat.ecatimage property)": [[86, "nibabel.ecat.EcatImage.shape"]], "shape (nibabel.ecat.ecatimagearrayproxy property)": [[86, "nibabel.ecat.EcatImageArrayProxy.shape"]], "template_dtype (nibabel.ecat.ecatheader attribute)": [[86, "nibabel.ecat.EcatHeader.template_dtype"]], "to_file_map() (nibabel.ecat.ecatimage method)": [[86, "nibabel.ecat.EcatImage.to_file_map"]], "valid_exts (nibabel.ecat.ecatimage attribute)": [[86, "nibabel.ecat.EcatImage.valid_exts"]], "get_home_dir() (in module nibabel.environment)": [[87, "nibabel.environment.get_home_dir"]], "get_nipy_system_dir() (in module nibabel.environment)": [[87, "nibabel.environment.get_nipy_system_dir"]], "get_nipy_user_dir() (in module nibabel.environment)": [[87, "nibabel.environment.get_nipy_user_dir"]], "nibabel.environment": [[87, "module-nibabel.environment"]], "angle_axis2euler() (in module nibabel.eulerangles)": [[88, "nibabel.eulerangles.angle_axis2euler"]], "euler2angle_axis() (in module nibabel.eulerangles)": [[88, "nibabel.eulerangles.euler2angle_axis"]], "euler2mat() (in module nibabel.eulerangles)": [[88, "nibabel.eulerangles.euler2mat"]], "euler2quat() (in module nibabel.eulerangles)": [[88, "nibabel.eulerangles.euler2quat"]], "mat2euler() (in module nibabel.eulerangles)": [[88, "nibabel.eulerangles.mat2euler"]], "nibabel.eulerangles": [[88, "module-nibabel.eulerangles"]], "quat2euler() (in module nibabel.eulerangles)": [[88, "nibabel.eulerangles.quat2euler"]], "filebasedheader (class in nibabel.filebasedimages)": [[89, "nibabel.filebasedimages.FileBasedHeader"]], "filebasedimage (class in nibabel.filebasedimages)": [[89, "nibabel.filebasedimages.FileBasedImage"]], "imagefileerror (class in nibabel.filebasedimages)": [[89, "nibabel.filebasedimages.ImageFileError"]], "serializableimage (class in nibabel.filebasedimages)": [[89, "nibabel.filebasedimages.SerializableImage"]], "__init__() (nibabel.filebasedimages.filebasedheader method)": [[89, "nibabel.filebasedimages.FileBasedHeader.__init__"]], "__init__() (nibabel.filebasedimages.filebasedimage method)": [[89, "nibabel.filebasedimages.FileBasedImage.__init__"]], "__init__() (nibabel.filebasedimages.imagefileerror method)": [[89, "nibabel.filebasedimages.ImageFileError.__init__"]], "__init__() (nibabel.filebasedimages.serializableimage method)": [[89, "nibabel.filebasedimages.SerializableImage.__init__"]], "copy() (nibabel.filebasedimages.filebasedheader method)": [[89, "nibabel.filebasedimages.FileBasedHeader.copy"]], "files_types (nibabel.filebasedimages.filebasedimage attribute)": [[89, "nibabel.filebasedimages.FileBasedImage.files_types"]], "filespec_to_file_map() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.filespec_to_file_map"]], "from_bytes() (nibabel.filebasedimages.serializableimage class method)": [[89, "nibabel.filebasedimages.SerializableImage.from_bytes"]], "from_file_map() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.from_file_map"]], "from_filename() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.from_filename"]], "from_fileobj() (nibabel.filebasedimages.filebasedheader class method)": [[89, "nibabel.filebasedimages.FileBasedHeader.from_fileobj"]], "from_header() (nibabel.filebasedimages.filebasedheader class method)": [[89, "nibabel.filebasedimages.FileBasedHeader.from_header"]], "from_image() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.from_image"]], "from_stream() (nibabel.filebasedimages.serializableimage class method)": [[89, "nibabel.filebasedimages.SerializableImage.from_stream"]], "from_url() (nibabel.filebasedimages.serializableimage class method)": [[89, "nibabel.filebasedimages.SerializableImage.from_url"]], "get_filename() (nibabel.filebasedimages.filebasedimage method)": [[89, "nibabel.filebasedimages.FileBasedImage.get_filename"]], "header (nibabel.filebasedimages.filebasedimage property)": [[89, "nibabel.filebasedimages.FileBasedImage.header"]], "header_class (nibabel.filebasedimages.filebasedimage attribute)": [[89, "nibabel.filebasedimages.FileBasedImage.header_class"]], "instance_to_filename() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.instance_to_filename"]], "load() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.load"]], "make_file_map() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.make_file_map"]], "makeable (nibabel.filebasedimages.filebasedimage attribute)": [[89, "nibabel.filebasedimages.FileBasedImage.makeable"]], "nibabel.filebasedimages": [[89, "module-nibabel.filebasedimages"]], "path_maybe_image() (nibabel.filebasedimages.filebasedimage class method)": [[89, "nibabel.filebasedimages.FileBasedImage.path_maybe_image"]], "rw (nibabel.filebasedimages.filebasedimage attribute)": [[89, "nibabel.filebasedimages.FileBasedImage.rw"]], "set_filename() (nibabel.filebasedimages.filebasedimage method)": [[89, "nibabel.filebasedimages.FileBasedImage.set_filename"]], "to_bytes() (nibabel.filebasedimages.serializableimage method)": [[89, "nibabel.filebasedimages.SerializableImage.to_bytes"]], "to_file_map() (nibabel.filebasedimages.filebasedimage method)": [[89, "nibabel.filebasedimages.FileBasedImage.to_file_map"]], "to_filename() (nibabel.filebasedimages.filebasedimage method)": [[89, "nibabel.filebasedimages.FileBasedImage.to_filename"]], "to_stream() (nibabel.filebasedimages.serializableimage method)": [[89, "nibabel.filebasedimages.SerializableImage.to_stream"]], "valid_exts (nibabel.filebasedimages.filebasedimage attribute)": [[89, "nibabel.filebasedimages.FileBasedImage.valid_exts"]], "write_to() (nibabel.filebasedimages.filebasedheader method)": [[89, "nibabel.filebasedimages.FileBasedHeader.write_to"]], "fileholder (class in nibabel.fileholders)": [[90, "nibabel.fileholders.FileHolder"]], "fileholdererror (class in nibabel.fileholders)": [[90, "nibabel.fileholders.FileHolderError"]], "__init__() (nibabel.fileholders.fileholder method)": [[90, "nibabel.fileholders.FileHolder.__init__"]], "__init__() (nibabel.fileholders.fileholdererror method)": [[90, "nibabel.fileholders.FileHolderError.__init__"]], "copy_file_map() (in module nibabel.fileholders)": [[90, "nibabel.fileholders.copy_file_map"]], "file_like (nibabel.fileholders.fileholder property)": [[90, "nibabel.fileholders.FileHolder.file_like"]], "get_prepare_fileobj() (nibabel.fileholders.fileholder method)": [[90, "nibabel.fileholders.FileHolder.get_prepare_fileobj"]], "nibabel.fileholders": [[90, "module-nibabel.fileholders"]], "same_file_as() (nibabel.fileholders.fileholder method)": [[90, "nibabel.fileholders.FileHolder.same_file_as"]], "typesfilenameserror (class in nibabel.filename_parser)": [[91, "nibabel.filename_parser.TypesFilenamesError"]], "__init__() (nibabel.filename_parser.typesfilenameserror method)": [[91, "nibabel.filename_parser.TypesFilenamesError.__init__"]], "nibabel.filename_parser": [[91, "module-nibabel.filename_parser"]], "parse_filename() (in module nibabel.filename_parser)": [[91, "nibabel.filename_parser.parse_filename"]], "splitext_addext() (in module nibabel.filename_parser)": [[91, "nibabel.filename_parser.splitext_addext"]], "types_filenames() (in module nibabel.filename_parser)": [[91, "nibabel.filename_parser.types_filenames"]], "calc_slicedefs() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.calc_slicedefs"]], "canonical_slicers() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.canonical_slicers"]], "fileslice() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.fileslice"]], "fill_slicer() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.fill_slicer"]], "is_fancy() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.is_fancy"]], "nibabel.fileslice": [[92, "module-nibabel.fileslice"]], "optimize_read_slicers() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.optimize_read_slicers"]], "optimize_slicer() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.optimize_slicer"]], "predict_shape() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.predict_shape"]], "read_segments() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.read_segments"]], "slice2len() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.slice2len"]], "slice2outax() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.slice2outax"]], "slicers2segments() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.slicers2segments"]], "strided_scalar() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.strided_scalar"]], "threshold_heuristic() (in module nibabel.fileslice)": [[92, "nibabel.fileslice.threshold_heuristic"]], "nibabel.fileutils": [[93, "module-nibabel.fileutils"]], "read_zt_byte_strings() (in module nibabel.fileutils)": [[93, "nibabel.fileutils.read_zt_byte_strings"]], "imagearrayproxy (nibabel.freesurfer.mghformat.mghimage attribute)": [[94, "nibabel.freesurfer.mghformat.MGHImage.ImageArrayProxy"]], "mgherror (class in nibabel.freesurfer.mghformat)": [[94, "nibabel.freesurfer.mghformat.MGHError"]], "mghheader (class in nibabel.freesurfer.mghformat)": [[94, "nibabel.freesurfer.mghformat.MGHHeader"]], "mghimage (class in nibabel.freesurfer.mghformat)": [[94, "nibabel.freesurfer.mghformat.MGHImage"]], "__init__() (nibabel.freesurfer.mghformat.mgherror method)": [[94, "nibabel.freesurfer.mghformat.MGHError.__init__"]], "__init__() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.__init__"]], "__init__() (nibabel.freesurfer.mghformat.mghimage method)": [[94, "nibabel.freesurfer.mghformat.MGHImage.__init__"]], "as_byteswapped() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.as_byteswapped"]], "chk_version() (nibabel.freesurfer.mghformat.mghheader static method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.chk_version"]], "copy() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.copy"]], "data_from_fileobj() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.data_from_fileobj"]], "default_structarr() (nibabel.freesurfer.mghformat.mghheader class method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.default_structarr"]], "diagnose_binaryblock() (nibabel.freesurfer.mghformat.mghheader class method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.diagnose_binaryblock"]], "files_types (nibabel.freesurfer.mghformat.mghimage attribute)": [[94, "nibabel.freesurfer.mghformat.MGHImage.files_types"]], "filespec_to_file_map() (nibabel.freesurfer.mghformat.mghimage class method)": [[94, "nibabel.freesurfer.mghformat.MGHImage.filespec_to_file_map"]], "from_file_map() (nibabel.freesurfer.mghformat.mghimage class method)": [[94, "nibabel.freesurfer.mghformat.MGHImage.from_file_map"]], "from_fileobj() (nibabel.freesurfer.mghformat.mghheader class method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.from_fileobj"]], "from_header() (nibabel.freesurfer.mghformat.mghheader class method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.from_header"]], "get_affine() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_affine"]], "get_best_affine() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_best_affine"]], "get_data_bytespervox() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_data_bytespervox"]], "get_data_dtype() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_data_dtype"]], "get_data_offset() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_data_offset"]], "get_data_shape() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_data_shape"]], "get_data_size() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_data_size"]], "get_footer_offset() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_footer_offset"]], "get_ras2vox() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_ras2vox"]], "get_slope_inter() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_slope_inter"]], "get_vox2ras() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_vox2ras"]], "get_vox2ras_tkr() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_vox2ras_tkr"]], "get_zooms() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.get_zooms"]], "guessed_endian() (nibabel.freesurfer.mghformat.mghheader class method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.guessed_endian"]], "header_class (nibabel.freesurfer.mghformat.mghimage attribute)": [[94, "nibabel.freesurfer.mghformat.MGHImage.header_class"]], "makeable (nibabel.freesurfer.mghformat.mghimage attribute)": [[94, "nibabel.freesurfer.mghformat.MGHImage.makeable"]], "nibabel.freesurfer": [[94, "module-nibabel.freesurfer"]], "nibabel.freesurfer.io": [[94, "module-nibabel.freesurfer.io"]], "nibabel.freesurfer.mghformat": [[94, "module-nibabel.freesurfer.mghformat"]], "read_annot() (in module nibabel.freesurfer.io)": [[94, "nibabel.freesurfer.io.read_annot"]], "read_geometry() (in module nibabel.freesurfer.io)": [[94, "nibabel.freesurfer.io.read_geometry"]], "read_label() (in module nibabel.freesurfer.io)": [[94, "nibabel.freesurfer.io.read_label"]], "read_morph_data() (in module nibabel.freesurfer.io)": [[94, "nibabel.freesurfer.io.read_morph_data"]], "rw (nibabel.freesurfer.mghformat.mghimage attribute)": [[94, "nibabel.freesurfer.mghformat.MGHImage.rw"]], "set_data_dtype() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.set_data_dtype"]], "set_data_shape() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.set_data_shape"]], "set_zooms() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.set_zooms"]], "template_dtype (nibabel.freesurfer.mghformat.mghheader attribute)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.template_dtype"]], "to_file_map() (nibabel.freesurfer.mghformat.mghimage method)": [[94, "nibabel.freesurfer.mghformat.MGHImage.to_file_map"]], "valid_exts (nibabel.freesurfer.mghformat.mghimage attribute)": [[94, "nibabel.freesurfer.mghformat.MGHImage.valid_exts"]], "write_annot() (in module nibabel.freesurfer.io)": [[94, "nibabel.freesurfer.io.write_annot"]], "write_geometry() (in module nibabel.freesurfer.io)": [[94, "nibabel.freesurfer.io.write_geometry"]], "write_morph_data() (in module nibabel.freesurfer.io)": [[94, "nibabel.freesurfer.io.write_morph_data"]], "writeftr_to() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.writeftr_to"]], "writehdr_to() (nibabel.freesurfer.mghformat.mghheader method)": [[94, "nibabel.freesurfer.mghformat.MGHHeader.writehdr_to"]], "as_closest_canonical() (in module nibabel.funcs)": [[95, "nibabel.funcs.as_closest_canonical"]], "concat_images() (in module nibabel.funcs)": [[95, "nibabel.funcs.concat_images"]], "four_to_three() (in module nibabel.funcs)": [[95, "nibabel.funcs.four_to_three"]], "nibabel.funcs": [[95, "module-nibabel.funcs"]], "squeeze_image() (in module nibabel.funcs)": [[95, "nibabel.funcs.squeeze_image"]], "characterdatahandler() (nibabel.gifti.parse_gifti_fast.giftiimageparser method)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiImageParser.CharacterDataHandler"]], "endelementhandler() (nibabel.gifti.parse_gifti_fast.giftiimageparser method)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiImageParser.EndElementHandler"]], "gifticoordsystem (class in nibabel.gifti.gifti)": [[96, "nibabel.gifti.gifti.GiftiCoordSystem"]], "giftidataarray (class in nibabel.gifti.gifti)": [[96, "nibabel.gifti.gifti.GiftiDataArray"]], "giftiimage (class in nibabel.gifti.gifti)": [[96, "nibabel.gifti.gifti.GiftiImage"]], "giftiimageparser (class in nibabel.gifti.parse_gifti_fast)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiImageParser"]], "giftilabel (class in nibabel.gifti.gifti)": [[96, "nibabel.gifti.gifti.GiftiLabel"]], "giftilabeltable (class in nibabel.gifti.gifti)": [[96, "nibabel.gifti.gifti.GiftiLabelTable"]], "giftimetadata (class in nibabel.gifti.gifti)": [[96, "nibabel.gifti.gifti.GiftiMetaData"]], "giftinvpairs (class in nibabel.gifti.gifti)": [[96, "nibabel.gifti.gifti.GiftiNVPairs"]], "giftiparseerror (class in nibabel.gifti.parse_gifti_fast)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiParseError"]], "startelementhandler() (nibabel.gifti.parse_gifti_fast.giftiimageparser method)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiImageParser.StartElementHandler"]], "__init__() (nibabel.gifti.gifti.gifticoordsystem method)": [[96, "nibabel.gifti.gifti.GiftiCoordSystem.__init__"]], "__init__() (nibabel.gifti.gifti.giftidataarray method)": [[96, "nibabel.gifti.gifti.GiftiDataArray.__init__"]], "__init__() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.__init__"]], "__init__() (nibabel.gifti.gifti.giftilabel method)": [[96, "nibabel.gifti.gifti.GiftiLabel.__init__"]], "__init__() (nibabel.gifti.gifti.giftilabeltable method)": [[96, "nibabel.gifti.gifti.GiftiLabelTable.__init__"]], "__init__() (nibabel.gifti.gifti.giftimetadata method)": [[96, "nibabel.gifti.gifti.GiftiMetaData.__init__"]], "__init__() (nibabel.gifti.gifti.giftinvpairs method)": [[96, "nibabel.gifti.gifti.GiftiNVPairs.__init__"]], "__init__() (nibabel.gifti.parse_gifti_fast.giftiimageparser method)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiImageParser.__init__"]], "__init__() (nibabel.gifti.parse_gifti_fast.giftiparseerror method)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiParseError.__init__"]], "add_gifti_data_array() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.add_gifti_data_array"]], "agg_data() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.agg_data"]], "data (nibabel.gifti.gifti.giftimetadata property)": [[96, "nibabel.gifti.gifti.GiftiMetaData.data"]], "files_types (nibabel.gifti.gifti.giftiimage attribute)": [[96, "nibabel.gifti.gifti.GiftiImage.files_types"]], "flush_chardata() (nibabel.gifti.parse_gifti_fast.giftiimageparser method)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiImageParser.flush_chardata"]], "from_dict() (nibabel.gifti.gifti.giftimetadata class method)": [[96, "nibabel.gifti.gifti.GiftiMetaData.from_dict"]], "from_file_map() (nibabel.gifti.gifti.giftiimage class method)": [[96, "nibabel.gifti.gifti.GiftiImage.from_file_map"]], "from_filename() (nibabel.gifti.gifti.giftiimage class method)": [[96, "nibabel.gifti.gifti.GiftiImage.from_filename"]], "get_arrays_from_intent() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.get_arrays_from_intent"]], "get_labels_as_dict() (nibabel.gifti.gifti.giftilabeltable method)": [[96, "nibabel.gifti.gifti.GiftiLabelTable.get_labels_as_dict"]], "labeltable (nibabel.gifti.gifti.giftiimage property)": [[96, "nibabel.gifti.gifti.GiftiImage.labeltable"]], "meta (nibabel.gifti.gifti.giftiimage property)": [[96, "nibabel.gifti.gifti.GiftiImage.meta"]], "metadata (nibabel.gifti.gifti.giftidataarray property)": [[96, "nibabel.gifti.gifti.GiftiDataArray.metadata"]], "metadata (nibabel.gifti.gifti.giftimetadata property)": [[96, "nibabel.gifti.gifti.GiftiMetaData.metadata"]], "name (nibabel.gifti.gifti.giftinvpairs property)": [[96, "nibabel.gifti.gifti.GiftiNVPairs.name"]], "nibabel.gifti": [[96, "module-nibabel.gifti"]], "nibabel.gifti.gifti": [[96, "module-nibabel.gifti.gifti"]], "nibabel.gifti.parse_gifti_fast": [[96, "module-nibabel.gifti.parse_gifti_fast"]], "nibabel.gifti.util": [[96, "module-nibabel.gifti.util"]], "numda (nibabel.gifti.gifti.giftiimage property)": [[96, "nibabel.gifti.gifti.GiftiImage.numDA"]], "num_dim (nibabel.gifti.gifti.giftidataarray property)": [[96, "nibabel.gifti.gifti.GiftiDataArray.num_dim"]], "parser (nibabel.gifti.gifti.giftiimage attribute)": [[96, "nibabel.gifti.gifti.GiftiImage.parser"]], "pending_data (nibabel.gifti.parse_gifti_fast.giftiimageparser property)": [[96, "nibabel.gifti.parse_gifti_fast.GiftiImageParser.pending_data"]], "print_summary() (nibabel.gifti.gifti.gifticoordsystem method)": [[96, "nibabel.gifti.gifti.GiftiCoordSystem.print_summary"]], "print_summary() (nibabel.gifti.gifti.giftidataarray method)": [[96, "nibabel.gifti.gifti.GiftiDataArray.print_summary"]], "print_summary() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.print_summary"]], "print_summary() (nibabel.gifti.gifti.giftilabeltable method)": [[96, "nibabel.gifti.gifti.GiftiLabelTable.print_summary"]], "print_summary() (nibabel.gifti.gifti.giftimetadata method)": [[96, "nibabel.gifti.gifti.GiftiMetaData.print_summary"]], "read_data_block() (in module nibabel.gifti.parse_gifti_fast)": [[96, "nibabel.gifti.parse_gifti_fast.read_data_block"]], "remove_gifti_data_array() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.remove_gifti_data_array"]], "remove_gifti_data_array_by_intent() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.remove_gifti_data_array_by_intent"]], "rgba (nibabel.gifti.gifti.giftilabel property)": [[96, "nibabel.gifti.gifti.GiftiLabel.rgba"]], "to_bytes() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.to_bytes"]], "to_file_map() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.to_file_map"]], "to_xml() (nibabel.gifti.gifti.giftiimage method)": [[96, "nibabel.gifti.gifti.GiftiImage.to_xml"]], "valid_exts (nibabel.gifti.gifti.giftiimage attribute)": [[96, "nibabel.gifti.gifti.GiftiImage.valid_exts"]], "value (nibabel.gifti.gifti.giftinvpairs property)": [[96, "nibabel.gifti.gifti.GiftiNVPairs.value"]], "nibabel.imageclasses": [[97, "module-nibabel.imageclasses"]], "spatial_axes_first() (in module nibabel.imageclasses)": [[97, "nibabel.imageclasses.spatial_axes_first"]], "errorlevel (class in nibabel.imageglobals)": [[98, "nibabel.imageglobals.ErrorLevel"]], "loggingoutputsuppressor (class in nibabel.imageglobals)": [[98, "nibabel.imageglobals.LoggingOutputSuppressor"]], "__init__() (nibabel.imageglobals.errorlevel method)": [[98, "nibabel.imageglobals.ErrorLevel.__init__"]], "__init__() (nibabel.imageglobals.loggingoutputsuppressor method)": [[98, "nibabel.imageglobals.LoggingOutputSuppressor.__init__"]], "nibabel.imageglobals": [[98, "module-nibabel.imageglobals"]], "count_nonzero_voxels() (in module nibabel.imagestats)": [[99, "nibabel.imagestats.count_nonzero_voxels"]], "mask_volume() (in module nibabel.imagestats)": [[99, "nibabel.imagestats.mask_volume"]], "nibabel.imagestats": [[99, "module-nibabel.imagestats"]], "guessed_image_type() (in module nibabel.loadsave)": [[100, "nibabel.loadsave.guessed_image_type"]], "load() (in module nibabel.loadsave)": [[100, "nibabel.loadsave.load"]], "nibabel.loadsave": [[100, "module-nibabel.loadsave"]], "read_img_data() (in module nibabel.loadsave)": [[100, "nibabel.loadsave.read_img_data"]], "save() (in module nibabel.loadsave)": [[100, "nibabel.loadsave.save"]], "imagearrayproxy (nibabel.minc1.minc1image attribute)": [[101, "nibabel.minc1.Minc1Image.ImageArrayProxy"]], "minc1file (class in nibabel.minc1)": [[101, "nibabel.minc1.Minc1File"]], "minc1header (class in nibabel.minc1)": [[101, "nibabel.minc1.Minc1Header"]], "minc1image (class in nibabel.minc1)": [[101, "nibabel.minc1.Minc1Image"]], "mincerror (class in nibabel.minc1)": [[101, "nibabel.minc1.MincError"]], "mincheader (class in nibabel.minc1)": [[101, "nibabel.minc1.MincHeader"]], "mincimagearrayproxy (class in nibabel.minc1)": [[101, "nibabel.minc1.MincImageArrayProxy"]], "__init__() (nibabel.minc1.minc1file method)": [[101, "nibabel.minc1.Minc1File.__init__"]], "__init__() (nibabel.minc1.minc1header method)": [[101, "nibabel.minc1.Minc1Header.__init__"]], "__init__() (nibabel.minc1.minc1image method)": [[101, "nibabel.minc1.Minc1Image.__init__"]], "__init__() (nibabel.minc1.mincerror method)": [[101, "nibabel.minc1.MincError.__init__"]], "__init__() (nibabel.minc1.mincheader method)": [[101, "nibabel.minc1.MincHeader.__init__"]], "__init__() (nibabel.minc1.mincimagearrayproxy method)": [[101, "nibabel.minc1.MincImageArrayProxy.__init__"]], "data_from_fileobj() (nibabel.minc1.mincheader method)": [[101, "nibabel.minc1.MincHeader.data_from_fileobj"]], "data_layout (nibabel.minc1.mincheader attribute)": [[101, "nibabel.minc1.MincHeader.data_layout"]], "data_to_fileobj() (nibabel.minc1.mincheader method)": [[101, "nibabel.minc1.MincHeader.data_to_fileobj"]], "files_types (nibabel.minc1.minc1image attribute)": [[101, "nibabel.minc1.Minc1Image.files_types"]], "from_file_map() (nibabel.minc1.minc1image class method)": [[101, "nibabel.minc1.Minc1Image.from_file_map"]], "get_affine() (nibabel.minc1.minc1file method)": [[101, "nibabel.minc1.Minc1File.get_affine"]], "get_data_dtype() (nibabel.minc1.minc1file method)": [[101, "nibabel.minc1.Minc1File.get_data_dtype"]], "get_data_shape() (nibabel.minc1.minc1file method)": [[101, "nibabel.minc1.Minc1File.get_data_shape"]], "get_scaled_data() (nibabel.minc1.minc1file method)": [[101, "nibabel.minc1.Minc1File.get_scaled_data"]], "get_zooms() (nibabel.minc1.minc1file method)": [[101, "nibabel.minc1.Minc1File.get_zooms"]], "header_class (nibabel.minc1.minc1image attribute)": [[101, "nibabel.minc1.Minc1Image.header_class"]], "is_proxy (nibabel.minc1.mincimagearrayproxy property)": [[101, "nibabel.minc1.MincImageArrayProxy.is_proxy"]], "makeable (nibabel.minc1.minc1image attribute)": [[101, "nibabel.minc1.Minc1Image.makeable"]], "may_contain_header() (nibabel.minc1.minc1header class method)": [[101, "nibabel.minc1.Minc1Header.may_contain_header"]], "ndim (nibabel.minc1.mincimagearrayproxy property)": [[101, "nibabel.minc1.MincImageArrayProxy.ndim"]], "nibabel.minc1": [[101, "module-nibabel.minc1"]], "rw (nibabel.minc1.minc1image attribute)": [[101, "nibabel.minc1.Minc1Image.rw"]], "shape (nibabel.minc1.mincimagearrayproxy property)": [[101, "nibabel.minc1.MincImageArrayProxy.shape"]], "valid_exts (nibabel.minc1.minc1image attribute)": [[101, "nibabel.minc1.Minc1Image.valid_exts"]], "hdf5bunch (class in nibabel.minc2)": [[102, "nibabel.minc2.Hdf5Bunch"]], "minc2file (class in nibabel.minc2)": [[102, "nibabel.minc2.Minc2File"]], "minc2header (class in nibabel.minc2)": [[102, "nibabel.minc2.Minc2Header"]], "minc2image (class in nibabel.minc2)": [[102, "nibabel.minc2.Minc2Image"]], "__init__() (nibabel.minc2.hdf5bunch method)": [[102, "nibabel.minc2.Hdf5Bunch.__init__"]], "__init__() (nibabel.minc2.minc2file method)": [[102, "nibabel.minc2.Minc2File.__init__"]], "__init__() (nibabel.minc2.minc2header method)": [[102, "nibabel.minc2.Minc2Header.__init__"]], "__init__() (nibabel.minc2.minc2image method)": [[102, "nibabel.minc2.Minc2Image.__init__"]], "from_file_map() (nibabel.minc2.minc2image class method)": [[102, "nibabel.minc2.Minc2Image.from_file_map"]], "get_data_dtype() (nibabel.minc2.minc2file method)": [[102, "nibabel.minc2.Minc2File.get_data_dtype"]], "get_data_shape() (nibabel.minc2.minc2file method)": [[102, "nibabel.minc2.Minc2File.get_data_shape"]], "get_scaled_data() (nibabel.minc2.minc2file method)": [[102, "nibabel.minc2.Minc2File.get_scaled_data"]], "header_class (nibabel.minc2.minc2image attribute)": [[102, "nibabel.minc2.Minc2Image.header_class"]], "may_contain_header() (nibabel.minc2.minc2header class method)": [[102, "nibabel.minc2.Minc2Header.may_contain_header"]], "nibabel.minc2": [[102, "module-nibabel.minc2"]], "mrierror (class in nibabel.mriutils)": [[103, "nibabel.mriutils.MRIError"]], "__init__() (nibabel.mriutils.mrierror method)": [[103, "nibabel.mriutils.MRIError.__init__"]], "calculate_dwell_time() (in module nibabel.mriutils)": [[103, "nibabel.mriutils.calculate_dwell_time"]], "nibabel.mriutils": [[103, "module-nibabel.mriutils"]], "ascconvparseerror (class in nibabel.nicom.ascconv)": [[104, "nibabel.nicom.ascconv.AscconvParseError"]], "atom (class in nibabel.nicom.ascconv)": [[104, "nibabel.nicom.ascconv.Atom"]], "b2q() (in module nibabel.nicom.dwiparams)": [[104, "nibabel.nicom.dwiparams.B2q"]], "csaerror (class in nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.CSAError"]], "csareaderror (class in nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.CSAReadError"]], "dicomreaderror (class in nibabel.nicom.dicomreaders)": [[104, "nibabel.nicom.dicomreaders.DicomReadError"]], "mosaicwrapper (class in nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.MosaicWrapper"]], "multiframewrapper (class in nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper"]], "novalue (class in nibabel.nicom.ascconv)": [[104, "nibabel.nicom.ascconv.NoValue"]], "siemenswrapper (class in nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.SiemensWrapper"]], "unpacker (class in nibabel.nicom.structreader)": [[104, "nibabel.nicom.structreader.Unpacker"]], "wrapper (class in nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.Wrapper"]], "wrappererror (class in nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.WrapperError"]], "wrapperprecisionerror (class in nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.WrapperPrecisionError"]], "__init__() (nibabel.nicom.ascconv.ascconvparseerror method)": [[104, "nibabel.nicom.ascconv.AscconvParseError.__init__"]], "__init__() (nibabel.nicom.ascconv.atom method)": [[104, "nibabel.nicom.ascconv.Atom.__init__"]], "__init__() (nibabel.nicom.ascconv.novalue method)": [[104, "nibabel.nicom.ascconv.NoValue.__init__"]], "__init__() (nibabel.nicom.csareader.csaerror method)": [[104, "nibabel.nicom.csareader.CSAError.__init__"]], "__init__() (nibabel.nicom.csareader.csareaderror method)": [[104, "nibabel.nicom.csareader.CSAReadError.__init__"]], "__init__() (nibabel.nicom.dicomreaders.dicomreaderror method)": [[104, "nibabel.nicom.dicomreaders.DicomReadError.__init__"]], "__init__() (nibabel.nicom.dicomwrappers.mosaicwrapper method)": [[104, "nibabel.nicom.dicomwrappers.MosaicWrapper.__init__"]], "__init__() (nibabel.nicom.dicomwrappers.multiframewrapper method)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.__init__"]], "__init__() (nibabel.nicom.dicomwrappers.siemenswrapper method)": [[104, "nibabel.nicom.dicomwrappers.SiemensWrapper.__init__"]], "__init__() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.__init__"]], "__init__() (nibabel.nicom.dicomwrappers.wrappererror method)": [[104, "nibabel.nicom.dicomwrappers.WrapperError.__init__"]], "__init__() (nibabel.nicom.dicomwrappers.wrapperprecisionerror method)": [[104, "nibabel.nicom.dicomwrappers.WrapperPrecisionError.__init__"]], "__init__() (nibabel.nicom.structreader.unpacker method)": [[104, "nibabel.nicom.structreader.Unpacker.__init__"]], "affine (nibabel.nicom.dicomwrappers.wrapper property)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.affine"]], "assign2atoms() (in module nibabel.nicom.ascconv)": [[104, "nibabel.nicom.ascconv.assign2atoms"]], "b_matrix (nibabel.nicom.dicomwrappers.wrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.b_matrix"]], "b_matrix() (nibabel.nicom.dicomwrappers.siemenswrapper method)": [[104, "nibabel.nicom.dicomwrappers.SiemensWrapper.b_matrix"]], "b_value() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.b_value"]], "b_vector() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.b_vector"]], "find_private_section() (in module nibabel.nicom.utils)": [[104, "nibabel.nicom.utils.find_private_section"]], "get() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.get"]], "get_acq_mat_txt() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_acq_mat_txt"]], "get_b_matrix() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_b_matrix"]], "get_b_value() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_b_value"]], "get_csa_header() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_csa_header"]], "get_data() (nibabel.nicom.dicomwrappers.mosaicwrapper method)": [[104, "nibabel.nicom.dicomwrappers.MosaicWrapper.get_data"]], "get_data() (nibabel.nicom.dicomwrappers.multiframewrapper method)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.get_data"]], "get_data() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.get_data"]], "get_g_vector() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_g_vector"]], "get_ice_dims() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_ice_dims"]], "get_n_mosaic() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_n_mosaic"]], "get_pixel_array() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.get_pixel_array"]], "get_scalar() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_scalar"]], "get_slice_normal() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_slice_normal"]], "get_vector() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.get_vector"]], "image_orient_patient() (nibabel.nicom.dicomwrappers.multiframewrapper method)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.image_orient_patient"]], "image_orient_patient() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.image_orient_patient"]], "image_position() (nibabel.nicom.dicomwrappers.mosaicwrapper method)": [[104, "nibabel.nicom.dicomwrappers.MosaicWrapper.image_position"]], "image_position() (nibabel.nicom.dicomwrappers.multiframewrapper method)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.image_position"]], "image_position() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.image_position"]], "image_shape() (nibabel.nicom.dicomwrappers.mosaicwrapper method)": [[104, "nibabel.nicom.dicomwrappers.MosaicWrapper.image_shape"]], "image_shape() (nibabel.nicom.dicomwrappers.multiframewrapper method)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.image_shape"]], "image_shape() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.image_shape"]], "instance_number() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.instance_number"]], "is_csa (nibabel.nicom.dicomwrappers.siemenswrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.SiemensWrapper.is_csa"]], "is_csa (nibabel.nicom.dicomwrappers.wrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.is_csa"]], "is_mosaic (nibabel.nicom.dicomwrappers.mosaicwrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.MosaicWrapper.is_mosaic"]], "is_mosaic (nibabel.nicom.dicomwrappers.wrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.is_mosaic"]], "is_mosaic() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.is_mosaic"]], "is_multiframe (nibabel.nicom.dicomwrappers.multiframewrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.is_multiframe"]], "is_multiframe (nibabel.nicom.dicomwrappers.wrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.is_multiframe"]], "is_same_series() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.is_same_series"]], "mosaic_to_nii() (in module nibabel.nicom.dicomreaders)": [[104, "nibabel.nicom.dicomreaders.mosaic_to_nii"]], "nearest_pos_semi_def() (in module nibabel.nicom.dwiparams)": [[104, "nibabel.nicom.dwiparams.nearest_pos_semi_def"]], "nibabel.nicom": [[104, "module-nibabel.nicom"]], "nibabel.nicom.ascconv": [[104, "module-nibabel.nicom.ascconv"]], "nibabel.nicom.csareader": [[104, "module-nibabel.nicom.csareader"]], "nibabel.nicom.dicomreaders": [[104, "module-nibabel.nicom.dicomreaders"]], "nibabel.nicom.dicomwrappers": [[104, "module-nibabel.nicom.dicomwrappers"]], "nibabel.nicom.dwiparams": [[104, "module-nibabel.nicom.dwiparams"]], "nibabel.nicom.structreader": [[104, "module-nibabel.nicom.structreader"]], "nibabel.nicom.utils": [[104, "module-nibabel.nicom.utils"]], "none_or_close() (in module nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.none_or_close"]], "nt_str() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.nt_str"]], "obj_from_atoms() (in module nibabel.nicom.ascconv)": [[104, "nibabel.nicom.ascconv.obj_from_atoms"]], "parse_ascconv() (in module nibabel.nicom.ascconv)": [[104, "nibabel.nicom.ascconv.parse_ascconv"]], "q2bg() (in module nibabel.nicom.dwiparams)": [[104, "nibabel.nicom.dwiparams.q2bg"]], "q_vector (nibabel.nicom.dicomwrappers.wrapper attribute)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.q_vector"]], "q_vector() (nibabel.nicom.dicomwrappers.siemenswrapper method)": [[104, "nibabel.nicom.dicomwrappers.SiemensWrapper.q_vector"]], "read() (in module nibabel.nicom.csareader)": [[104, "nibabel.nicom.csareader.read"]], "read() (nibabel.nicom.structreader.unpacker method)": [[104, "nibabel.nicom.structreader.Unpacker.read"]], "read_mosaic_dir() (in module nibabel.nicom.dicomreaders)": [[104, "nibabel.nicom.dicomreaders.read_mosaic_dir"]], "read_mosaic_dwi_dir() (in module nibabel.nicom.dicomreaders)": [[104, "nibabel.nicom.dicomreaders.read_mosaic_dwi_dir"]], "rotation_matrix() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.rotation_matrix"]], "series_signature() (nibabel.nicom.dicomwrappers.multiframewrapper method)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.series_signature"]], "series_signature() (nibabel.nicom.dicomwrappers.siemenswrapper method)": [[104, "nibabel.nicom.dicomwrappers.SiemensWrapper.series_signature"]], "series_signature() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.series_signature"]], "slice_indicator() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.slice_indicator"]], "slice_normal() (nibabel.nicom.dicomwrappers.siemenswrapper method)": [[104, "nibabel.nicom.dicomwrappers.SiemensWrapper.slice_normal"]], "slice_normal() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.slice_normal"]], "slices_to_series() (in module nibabel.nicom.dicomreaders)": [[104, "nibabel.nicom.dicomreaders.slices_to_series"]], "unpack() (nibabel.nicom.structreader.unpacker method)": [[104, "nibabel.nicom.structreader.Unpacker.unpack"]], "voxel_sizes() (nibabel.nicom.dicomwrappers.multiframewrapper method)": [[104, "nibabel.nicom.dicomwrappers.MultiframeWrapper.voxel_sizes"]], "voxel_sizes() (nibabel.nicom.dicomwrappers.wrapper method)": [[104, "nibabel.nicom.dicomwrappers.Wrapper.voxel_sizes"]], "wrapper_from_data() (in module nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.wrapper_from_data"]], "wrapper_from_file() (in module nibabel.nicom.dicomwrappers)": [[104, "nibabel.nicom.dicomwrappers.wrapper_from_file"]], "nifti1dicomextension (class in nibabel.nifti1)": [[105, "nibabel.nifti1.Nifti1DicomExtension"]], "nifti1extension (class in nibabel.nifti1)": [[105, "nibabel.nifti1.Nifti1Extension"]], "nifti1extensions (class in nibabel.nifti1)": [[105, "nibabel.nifti1.Nifti1Extensions"]], "nifti1header (class in nibabel.nifti1)": [[105, "nibabel.nifti1.Nifti1Header"]], "nifti1image (class in nibabel.nifti1)": [[105, "nibabel.nifti1.Nifti1Image"]], "nifti1pair (class in nibabel.nifti1)": [[105, "nibabel.nifti1.Nifti1Pair"]], "nifti1pairheader (class in nibabel.nifti1)": [[105, "nibabel.nifti1.Nifti1PairHeader"]], "__init__() (nibabel.nifti1.nifti1dicomextension method)": [[105, "nibabel.nifti1.Nifti1DicomExtension.__init__"]], "__init__() (nibabel.nifti1.nifti1extension method)": [[105, "nibabel.nifti1.Nifti1Extension.__init__"]], "__init__() (nibabel.nifti1.nifti1extensions method)": [[105, "nibabel.nifti1.Nifti1Extensions.__init__"]], "__init__() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.__init__"]], "__init__() (nibabel.nifti1.nifti1image method)": [[105, "nibabel.nifti1.Nifti1Image.__init__"]], "__init__() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.__init__"]], "__init__() (nibabel.nifti1.nifti1pairheader method)": [[105, "nibabel.nifti1.Nifti1PairHeader.__init__"]], "as_reoriented() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.as_reoriented"]], "copy() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.copy"]], "count() (nibabel.nifti1.nifti1extensions method)": [[105, "nibabel.nifti1.Nifti1Extensions.count"]], "default_structarr() (nibabel.nifti1.nifti1header class method)": [[105, "nibabel.nifti1.Nifti1Header.default_structarr"]], "exts_klass (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.exts_klass"]], "files_types (nibabel.nifti1.nifti1image attribute)": [[105, "nibabel.nifti1.Nifti1Image.files_types"]], "from_fileobj() (nibabel.nifti1.nifti1extensions class method)": [[105, "nibabel.nifti1.Nifti1Extensions.from_fileobj"]], "from_fileobj() (nibabel.nifti1.nifti1header class method)": [[105, "nibabel.nifti1.Nifti1Header.from_fileobj"]], "from_header() (nibabel.nifti1.nifti1header class method)": [[105, "nibabel.nifti1.Nifti1Header.from_header"]], "get_best_affine() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_best_affine"]], "get_code() (nibabel.nifti1.nifti1extension method)": [[105, "nibabel.nifti1.Nifti1Extension.get_code"]], "get_codes() (nibabel.nifti1.nifti1extensions method)": [[105, "nibabel.nifti1.Nifti1Extensions.get_codes"]], "get_content() (nibabel.nifti1.nifti1extension method)": [[105, "nibabel.nifti1.Nifti1Extension.get_content"]], "get_data_dtype() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.get_data_dtype"]], "get_data_shape() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_data_shape"]], "get_dim_info() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_dim_info"]], "get_intent() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_intent"]], "get_n_slices() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_n_slices"]], "get_qform() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_qform"]], "get_qform() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.get_qform"]], "get_qform_quaternion() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_qform_quaternion"]], "get_sform() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_sform"]], "get_sform() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.get_sform"]], "get_sizeondisk() (nibabel.nifti1.nifti1extension method)": [[105, "nibabel.nifti1.Nifti1Extension.get_sizeondisk"]], "get_sizeondisk() (nibabel.nifti1.nifti1extensions method)": [[105, "nibabel.nifti1.Nifti1Extensions.get_sizeondisk"]], "get_slice_duration() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_slice_duration"]], "get_slice_times() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_slice_times"]], "get_slope_inter() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_slope_inter"]], "get_xyzt_units() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.get_xyzt_units"]], "has_data_intercept (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.has_data_intercept"]], "has_data_slope (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.has_data_slope"]], "header_class (nibabel.nifti1.nifti1image attribute)": [[105, "nibabel.nifti1.Nifti1Image.header_class"]], "header_class (nibabel.nifti1.nifti1pair attribute)": [[105, "nibabel.nifti1.Nifti1Pair.header_class"]], "is_single (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.is_single"]], "is_single (nibabel.nifti1.nifti1pairheader attribute)": [[105, "nibabel.nifti1.Nifti1PairHeader.is_single"]], "load() (in module nibabel.nifti1)": [[105, "nibabel.nifti1.load"]], "may_contain_header() (nibabel.nifti1.nifti1header class method)": [[105, "nibabel.nifti1.Nifti1Header.may_contain_header"]], "nibabel.nifti1": [[105, "module-nibabel.nifti1"]], "pair_magic (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.pair_magic"]], "pair_vox_offset (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.pair_vox_offset"]], "quaternion_threshold (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.quaternion_threshold"]], "rw (nibabel.nifti1.nifti1pair attribute)": [[105, "nibabel.nifti1.Nifti1Pair.rw"]], "save() (in module nibabel.nifti1)": [[105, "nibabel.nifti1.save"]], "set_data_dtype() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_data_dtype"]], "set_data_dtype() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.set_data_dtype"]], "set_data_shape() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_data_shape"]], "set_dim_info() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_dim_info"]], "set_intent() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_intent"]], "set_qform() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_qform"]], "set_qform() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.set_qform"]], "set_sform() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_sform"]], "set_sform() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.set_sform"]], "set_slice_duration() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_slice_duration"]], "set_slice_times() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_slice_times"]], "set_slope_inter() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_slope_inter"]], "set_xyzt_units() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.set_xyzt_units"]], "single_magic (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.single_magic"]], "single_vox_offset (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.single_vox_offset"]], "template_dtype (nibabel.nifti1.nifti1header attribute)": [[105, "nibabel.nifti1.Nifti1Header.template_dtype"]], "to_file_map() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.to_file_map"]], "update_header() (nibabel.nifti1.nifti1image method)": [[105, "nibabel.nifti1.Nifti1Image.update_header"]], "update_header() (nibabel.nifti1.nifti1pair method)": [[105, "nibabel.nifti1.Nifti1Pair.update_header"]], "valid_exts (nibabel.nifti1.nifti1image attribute)": [[105, "nibabel.nifti1.Nifti1Image.valid_exts"]], "write_to() (nibabel.nifti1.nifti1extension method)": [[105, "nibabel.nifti1.Nifti1Extension.write_to"]], "write_to() (nibabel.nifti1.nifti1extensions method)": [[105, "nibabel.nifti1.Nifti1Extensions.write_to"]], "write_to() (nibabel.nifti1.nifti1header method)": [[105, "nibabel.nifti1.Nifti1Header.write_to"]], "nifti2header (class in nibabel.nifti2)": [[106, "nibabel.nifti2.Nifti2Header"]], "nifti2image (class in nibabel.nifti2)": [[106, "nibabel.nifti2.Nifti2Image"]], "nifti2pair (class in nibabel.nifti2)": [[106, "nibabel.nifti2.Nifti2Pair"]], "nifti2pairheader (class in nibabel.nifti2)": [[106, "nibabel.nifti2.Nifti2PairHeader"]], "__init__() (nibabel.nifti2.nifti2header method)": [[106, "nibabel.nifti2.Nifti2Header.__init__"]], "__init__() (nibabel.nifti2.nifti2image method)": [[106, "nibabel.nifti2.Nifti2Image.__init__"]], "__init__() (nibabel.nifti2.nifti2pair method)": [[106, "nibabel.nifti2.Nifti2Pair.__init__"]], "__init__() (nibabel.nifti2.nifti2pairheader method)": [[106, "nibabel.nifti2.Nifti2PairHeader.__init__"]], "default_structarr() (nibabel.nifti2.nifti2header class method)": [[106, "nibabel.nifti2.Nifti2Header.default_structarr"]], "get_data_shape() (nibabel.nifti2.nifti2header method)": [[106, "nibabel.nifti2.Nifti2Header.get_data_shape"]], "header_class (nibabel.nifti2.nifti2image attribute)": [[106, "nibabel.nifti2.Nifti2Image.header_class"]], "header_class (nibabel.nifti2.nifti2pair attribute)": [[106, "nibabel.nifti2.Nifti2Pair.header_class"]], "is_single (nibabel.nifti2.nifti2pairheader attribute)": [[106, "nibabel.nifti2.Nifti2PairHeader.is_single"]], "load() (in module nibabel.nifti2)": [[106, "nibabel.nifti2.load"]], "may_contain_header() (nibabel.nifti2.nifti2header class method)": [[106, "nibabel.nifti2.Nifti2Header.may_contain_header"]], "nibabel.nifti2": [[106, "module-nibabel.nifti2"]], "pair_magic (nibabel.nifti2.nifti2header attribute)": [[106, "nibabel.nifti2.Nifti2Header.pair_magic"]], "pair_vox_offset (nibabel.nifti2.nifti2header attribute)": [[106, "nibabel.nifti2.Nifti2Header.pair_vox_offset"]], "quaternion_threshold (nibabel.nifti2.nifti2header attribute)": [[106, "nibabel.nifti2.Nifti2Header.quaternion_threshold"]], "save() (in module nibabel.nifti2)": [[106, "nibabel.nifti2.save"]], "set_data_shape() (nibabel.nifti2.nifti2header method)": [[106, "nibabel.nifti2.Nifti2Header.set_data_shape"]], "single_magic (nibabel.nifti2.nifti2header attribute)": [[106, "nibabel.nifti2.Nifti2Header.single_magic"]], "single_vox_offset (nibabel.nifti2.nifti2header attribute)": [[106, "nibabel.nifti2.Nifti2Header.single_vox_offset"]], "sizeof_hdr (nibabel.nifti2.nifti2header attribute)": [[106, "nibabel.nifti2.Nifti2Header.sizeof_hdr"]], "template_dtype (nibabel.nifti2.nifti2header attribute)": [[106, "nibabel.nifti2.Nifti2Header.template_dtype"]], "onetimeproperty (class in nibabel.onetime)": [[107, "nibabel.onetime.OneTimeProperty"]], "resetmixin (class in nibabel.onetime)": [[107, "nibabel.onetime.ResetMixin"]], "__init__() (nibabel.onetime.onetimeproperty method)": [[107, "nibabel.onetime.OneTimeProperty.__init__"]], "__init__() (nibabel.onetime.resetmixin method)": [[107, "nibabel.onetime.ResetMixin.__init__"]], "auto_attr() (in module nibabel.onetime)": [[107, "nibabel.onetime.auto_attr"]], "nibabel.onetime": [[107, "module-nibabel.onetime"]], "reset() (nibabel.onetime.resetmixin method)": [[107, "nibabel.onetime.ResetMixin.reset"]], "setattr_on_read() (in module nibabel.onetime)": [[107, "nibabel.onetime.setattr_on_read"]], "deterministicgzipfile (class in nibabel.openers)": [[108, "nibabel.openers.DeterministicGzipFile"]], "imageopener (class in nibabel.openers)": [[108, "nibabel.openers.ImageOpener"]], "opener (class in nibabel.openers)": [[108, "nibabel.openers.Opener"]], "__init__() (nibabel.openers.deterministicgzipfile method)": [[108, "nibabel.openers.DeterministicGzipFile.__init__"]], "__init__() (nibabel.openers.imageopener method)": [[108, "nibabel.openers.ImageOpener.__init__"]], "__init__() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.__init__"]], "bz2_def (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.bz2_def"]], "close() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.close"]], "close_if_mine() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.close_if_mine"]], "closed (nibabel.openers.opener property)": [[108, "nibabel.openers.Opener.closed"]], "compress_ext_icase (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.compress_ext_icase"]], "compress_ext_map (nibabel.openers.imageopener attribute)": [[108, "nibabel.openers.ImageOpener.compress_ext_map"]], "compress_ext_map (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.compress_ext_map"]], "default_compresslevel (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.default_compresslevel"]], "default_level_or_option (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.default_level_or_option"]], "default_zst_compresslevel (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.default_zst_compresslevel"]], "fileno() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.fileno"]], "gz_def (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.gz_def"]], "mode (nibabel.openers.opener property)": [[108, "nibabel.openers.Opener.mode"]], "name (nibabel.openers.opener property)": [[108, "nibabel.openers.Opener.name"]], "nibabel.openers": [[108, "module-nibabel.openers"]], "read() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.read"]], "readinto() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.readinto"]], "seek() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.seek"]], "tell() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.tell"]], "write() (nibabel.openers.opener method)": [[108, "nibabel.openers.Opener.write"]], "zstd_def (nibabel.openers.opener attribute)": [[108, "nibabel.openers.Opener.zstd_def"]], "nibabel.optpkg": [[109, "module-nibabel.optpkg"]], "optional_package() (in module nibabel.optpkg)": [[109, "nibabel.optpkg.optional_package"]], "orientationerror (class in nibabel.orientations)": [[110, "nibabel.orientations.OrientationError"]], "__init__() (nibabel.orientations.orientationerror method)": [[110, "nibabel.orientations.OrientationError.__init__"]], "aff2axcodes() (in module nibabel.orientations)": [[110, "nibabel.orientations.aff2axcodes"]], "apply_orientation() (in module nibabel.orientations)": [[110, "nibabel.orientations.apply_orientation"]], "axcodes2ornt() (in module nibabel.orientations)": [[110, "nibabel.orientations.axcodes2ornt"]], "flip_axis() (in module nibabel.orientations)": [[110, "nibabel.orientations.flip_axis"]], "inv_ornt_aff() (in module nibabel.orientations)": [[110, "nibabel.orientations.inv_ornt_aff"]], "io_orientation() (in module nibabel.orientations)": [[110, "nibabel.orientations.io_orientation"]], "nibabel.orientations": [[110, "module-nibabel.orientations"]], "ornt2axcodes() (in module nibabel.orientations)": [[110, "nibabel.orientations.ornt2axcodes"]], "ornt_transform() (in module nibabel.orientations)": [[110, "nibabel.orientations.ornt_transform"]], "imagearrayproxy (nibabel.parrec.parrecimage attribute)": [[111, "nibabel.parrec.PARRECImage.ImageArrayProxy"]], "parrecarrayproxy (class in nibabel.parrec)": [[111, "nibabel.parrec.PARRECArrayProxy"]], "parrecerror (class in nibabel.parrec)": [[111, "nibabel.parrec.PARRECError"]], "parrecheader (class in nibabel.parrec)": [[111, "nibabel.parrec.PARRECHeader"]], "parrecimage (class in nibabel.parrec)": [[111, "nibabel.parrec.PARRECImage"]], "__init__() (nibabel.parrec.parrecarrayproxy method)": [[111, "nibabel.parrec.PARRECArrayProxy.__init__"]], "__init__() (nibabel.parrec.parrecerror method)": [[111, "nibabel.parrec.PARRECError.__init__"]], "__init__() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.__init__"]], "__init__() (nibabel.parrec.parrecimage method)": [[111, "nibabel.parrec.PARRECImage.__init__"]], "as_analyze_map() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.as_analyze_map"]], "copy() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.copy"]], "dtype (nibabel.parrec.parrecarrayproxy property)": [[111, "nibabel.parrec.PARRECArrayProxy.dtype"]], "exts2pars() (in module nibabel.parrec)": [[111, "nibabel.parrec.exts2pars"]], "files_types (nibabel.parrec.parrecimage attribute)": [[111, "nibabel.parrec.PARRECImage.files_types"]], "from_file_map() (nibabel.parrec.parrecimage class method)": [[111, "nibabel.parrec.PARRECImage.from_file_map"]], "from_filename() (nibabel.parrec.parrecimage class method)": [[111, "nibabel.parrec.PARRECImage.from_filename"]], "from_fileobj() (nibabel.parrec.parrecheader class method)": [[111, "nibabel.parrec.PARRECHeader.from_fileobj"]], "from_header() (nibabel.parrec.parrecheader class method)": [[111, "nibabel.parrec.PARRECHeader.from_header"]], "get_affine() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_affine"]], "get_bvals_bvecs() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_bvals_bvecs"]], "get_data_offset() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_data_offset"]], "get_data_scaling() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_data_scaling"]], "get_def() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_def"]], "get_echo_train_length() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_echo_train_length"]], "get_q_vectors() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_q_vectors"]], "get_rec_shape() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_rec_shape"]], "get_slice_orientation() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_slice_orientation"]], "get_sorted_slice_indices() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_sorted_slice_indices"]], "get_unscaled() (nibabel.parrec.parrecarrayproxy method)": [[111, "nibabel.parrec.PARRECArrayProxy.get_unscaled"]], "get_volume_labels() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_volume_labels"]], "get_water_fat_shift() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.get_water_fat_shift"]], "header_class (nibabel.parrec.parrecimage attribute)": [[111, "nibabel.parrec.PARRECImage.header_class"]], "is_proxy (nibabel.parrec.parrecarrayproxy property)": [[111, "nibabel.parrec.PARRECArrayProxy.is_proxy"]], "load() (nibabel.parrec.parrecimage class method)": [[111, "nibabel.parrec.PARRECImage.load"]], "makeable (nibabel.parrec.parrecimage attribute)": [[111, "nibabel.parrec.PARRECImage.makeable"]], "ndim (nibabel.parrec.parrecarrayproxy property)": [[111, "nibabel.parrec.PARRECArrayProxy.ndim"]], "nibabel.parrec": [[111, "module-nibabel.parrec"]], "one_line() (in module nibabel.parrec)": [[111, "nibabel.parrec.one_line"]], "parse_par_header() (in module nibabel.parrec)": [[111, "nibabel.parrec.parse_PAR_header"]], "rw (nibabel.parrec.parrecimage attribute)": [[111, "nibabel.parrec.PARRECImage.rw"]], "set_data_offset() (nibabel.parrec.parrecheader method)": [[111, "nibabel.parrec.PARRECHeader.set_data_offset"]], "shape (nibabel.parrec.parrecarrayproxy property)": [[111, "nibabel.parrec.PARRECArrayProxy.shape"]], "valid_exts (nibabel.parrec.parrecimage attribute)": [[111, "nibabel.parrec.PARRECImage.valid_exts"]], "vol_is_full() (in module nibabel.parrec)": [[111, "nibabel.parrec.vol_is_full"]], "vol_numbers() (in module nibabel.parrec)": [[111, "nibabel.parrec.vol_numbers"]], "adapt_affine() (in module nibabel.processing)": [[112, "nibabel.processing.adapt_affine"]], "conform() (in module nibabel.processing)": [[112, "nibabel.processing.conform"]], "fwhm2sigma() (in module nibabel.processing)": [[112, "nibabel.processing.fwhm2sigma"]], "nibabel.processing": [[112, "module-nibabel.processing"]], "resample_from_to() (in module nibabel.processing)": [[112, "nibabel.processing.resample_from_to"]], "resample_to_output() (in module nibabel.processing)": [[112, "nibabel.processing.resample_to_output"]], "sigma2fwhm() (in module nibabel.processing)": [[112, "nibabel.processing.sigma2fwhm"]], "smooth_image() (in module nibabel.processing)": [[112, "nibabel.processing.smooth_image"]], "dicom_test() (in module nibabel.pydicom_compat)": [[113, "nibabel.pydicom_compat.dicom_test"]], "nibabel.pydicom_compat": [[113, "module-nibabel.pydicom_compat"]], "angle_axis2mat() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.angle_axis2mat"]], "angle_axis2quat() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.angle_axis2quat"]], "conjugate() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.conjugate"]], "eye() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.eye"]], "fillpositive() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.fillpositive"]], "inverse() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.inverse"]], "isunit() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.isunit"]], "mat2quat() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.mat2quat"]], "mult() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.mult"]], "nearly_equivalent() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.nearly_equivalent"]], "nibabel.quaternions": [[114, "module-nibabel.quaternions"]], "norm() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.norm"]], "quat2angle_axis() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.quat2angle_axis"]], "quat2mat() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.quat2mat"]], "rotate_vector() (in module nibabel.quaternions)": [[114, "nibabel.quaternions.rotate_vector"]], "nibabel.rstutils": [[115, "module-nibabel.rstutils"]], "rst_table() (in module nibabel.rstutils)": [[115, "nibabel.rstutils.rst_table"]], "nibabel.spaces": [[116, "module-nibabel.spaces"]], "slice2volume() (in module nibabel.spaces)": [[116, "nibabel.spaces.slice2volume"]], "vox2out_vox() (in module nibabel.spaces)": [[116, "nibabel.spaces.vox2out_vox"]], "headerdataerror (class in nibabel.spatialimages)": [[117, "nibabel.spatialimages.HeaderDataError"]], "headertypeerror (class in nibabel.spatialimages)": [[117, "nibabel.spatialimages.HeaderTypeError"]], "imagedataerror (class in nibabel.spatialimages)": [[117, "nibabel.spatialimages.ImageDataError"]], "imageslicer (nibabel.spatialimages.spatialimage attribute)": [[117, "nibabel.spatialimages.SpatialImage.ImageSlicer"]], "spatialfirstslicer (class in nibabel.spatialimages)": [[117, "nibabel.spatialimages.SpatialFirstSlicer"]], "spatialheader (class in nibabel.spatialimages)": [[117, "nibabel.spatialimages.SpatialHeader"]], "spatialimage (class in nibabel.spatialimages)": [[117, "nibabel.spatialimages.SpatialImage"]], "__init__() (nibabel.spatialimages.headerdataerror method)": [[117, "nibabel.spatialimages.HeaderDataError.__init__"]], "__init__() (nibabel.spatialimages.headertypeerror method)": [[117, "nibabel.spatialimages.HeaderTypeError.__init__"]], "__init__() (nibabel.spatialimages.imagedataerror method)": [[117, "nibabel.spatialimages.ImageDataError.__init__"]], "__init__() (nibabel.spatialimages.spatialfirstslicer method)": [[117, "nibabel.spatialimages.SpatialFirstSlicer.__init__"]], "__init__() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.__init__"]], "__init__() (nibabel.spatialimages.spatialimage method)": [[117, "nibabel.spatialimages.SpatialImage.__init__"]], "affine (nibabel.spatialimages.spatialimage property)": [[117, "nibabel.spatialimages.SpatialImage.affine"]], "as_reoriented() (nibabel.spatialimages.spatialimage method)": [[117, "nibabel.spatialimages.SpatialImage.as_reoriented"]], "check_slicing() (nibabel.spatialimages.spatialfirstslicer method)": [[117, "nibabel.spatialimages.SpatialFirstSlicer.check_slicing"]], "copy() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.copy"]], "data_from_fileobj() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.data_from_fileobj"]], "data_layout (nibabel.spatialimages.spatialheader attribute)": [[117, "nibabel.spatialimages.SpatialHeader.data_layout"]], "data_to_fileobj() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.data_to_fileobj"]], "default_x_flip (nibabel.spatialimages.spatialheader attribute)": [[117, "nibabel.spatialimages.SpatialHeader.default_x_flip"]], "from_fileobj() (nibabel.spatialimages.spatialheader class method)": [[117, "nibabel.spatialimages.SpatialHeader.from_fileobj"]], "from_header() (nibabel.spatialimages.spatialheader class method)": [[117, "nibabel.spatialimages.SpatialHeader.from_header"]], "from_image() (nibabel.spatialimages.spatialimage class method)": [[117, "nibabel.spatialimages.SpatialImage.from_image"]], "get_base_affine() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.get_base_affine"]], "get_best_affine() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.get_best_affine"]], "get_data_dtype() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.get_data_dtype"]], "get_data_dtype() (nibabel.spatialimages.spatialimage method)": [[117, "nibabel.spatialimages.SpatialImage.get_data_dtype"]], "get_data_shape() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.get_data_shape"]], "get_zooms() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.get_zooms"]], "header_class (nibabel.spatialimages.spatialimage attribute)": [[117, "nibabel.spatialimages.SpatialImage.header_class"]], "nibabel.spatialimages": [[117, "module-nibabel.spatialimages"]], "orthoview() (nibabel.spatialimages.spatialimage method)": [[117, "nibabel.spatialimages.SpatialImage.orthoview"]], "set_data_dtype() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.set_data_dtype"]], "set_data_dtype() (nibabel.spatialimages.spatialimage method)": [[117, "nibabel.spatialimages.SpatialImage.set_data_dtype"]], "set_data_shape() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.set_data_shape"]], "set_zooms() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.set_zooms"]], "slice_affine() (nibabel.spatialimages.spatialfirstslicer method)": [[117, "nibabel.spatialimages.SpatialFirstSlicer.slice_affine"]], "slicer (nibabel.spatialimages.spatialimage property)": [[117, "nibabel.spatialimages.SpatialImage.slicer"]], "supported_np_types() (in module nibabel.spatialimages)": [[117, "nibabel.spatialimages.supported_np_types"]], "update_header() (nibabel.spatialimages.spatialimage method)": [[117, "nibabel.spatialimages.SpatialImage.update_header"]], "write_to() (nibabel.spatialimages.spatialheader method)": [[117, "nibabel.spatialimages.SpatialHeader.write_to"]], "spm2analyzeheader (class in nibabel.spm2analyze)": [[118, "nibabel.spm2analyze.Spm2AnalyzeHeader"]], "spm2analyzeimage (class in nibabel.spm2analyze)": [[118, "nibabel.spm2analyze.Spm2AnalyzeImage"]], "__init__() (nibabel.spm2analyze.spm2analyzeheader method)": [[118, "nibabel.spm2analyze.Spm2AnalyzeHeader.__init__"]], "__init__() (nibabel.spm2analyze.spm2analyzeimage method)": [[118, "nibabel.spm2analyze.Spm2AnalyzeImage.__init__"]], "get_slope_inter() (nibabel.spm2analyze.spm2analyzeheader method)": [[118, "nibabel.spm2analyze.Spm2AnalyzeHeader.get_slope_inter"]], "header_class (nibabel.spm2analyze.spm2analyzeimage attribute)": [[118, "nibabel.spm2analyze.Spm2AnalyzeImage.header_class"]], "may_contain_header() (nibabel.spm2analyze.spm2analyzeheader class method)": [[118, "nibabel.spm2analyze.Spm2AnalyzeHeader.may_contain_header"]], "nibabel.spm2analyze": [[118, "module-nibabel.spm2analyze"]], "template_dtype (nibabel.spm2analyze.spm2analyzeheader attribute)": [[118, "nibabel.spm2analyze.Spm2AnalyzeHeader.template_dtype"]], "spm99analyzeheader (class in nibabel.spm99analyze)": [[119, "nibabel.spm99analyze.Spm99AnalyzeHeader"]], "spm99analyzeimage (class in nibabel.spm99analyze)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage"]], "spmanalyzeheader (class in nibabel.spm99analyze)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader"]], "__init__() (nibabel.spm99analyze.spm99analyzeheader method)": [[119, "nibabel.spm99analyze.Spm99AnalyzeHeader.__init__"]], "__init__() (nibabel.spm99analyze.spm99analyzeimage method)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.__init__"]], "__init__() (nibabel.spm99analyze.spmanalyzeheader method)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader.__init__"]], "default_structarr() (nibabel.spm99analyze.spmanalyzeheader class method)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader.default_structarr"]], "files_types (nibabel.spm99analyze.spm99analyzeimage attribute)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.files_types"]], "from_file_map() (nibabel.spm99analyze.spm99analyzeimage class method)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.from_file_map"]], "get_best_affine() (nibabel.spm99analyze.spm99analyzeheader method)": [[119, "nibabel.spm99analyze.Spm99AnalyzeHeader.get_best_affine"]], "get_origin_affine() (nibabel.spm99analyze.spm99analyzeheader method)": [[119, "nibabel.spm99analyze.Spm99AnalyzeHeader.get_origin_affine"]], "get_slope_inter() (nibabel.spm99analyze.spmanalyzeheader method)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader.get_slope_inter"]], "has_affine (nibabel.spm99analyze.spm99analyzeimage attribute)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.has_affine"]], "has_data_intercept (nibabel.spm99analyze.spmanalyzeheader attribute)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader.has_data_intercept"]], "has_data_slope (nibabel.spm99analyze.spmanalyzeheader attribute)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader.has_data_slope"]], "header_class (nibabel.spm99analyze.spm99analyzeimage attribute)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.header_class"]], "makeable (nibabel.spm99analyze.spm99analyzeimage attribute)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.makeable"]], "nibabel.spm99analyze": [[119, "module-nibabel.spm99analyze"]], "rw (nibabel.spm99analyze.spm99analyzeimage attribute)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.rw"]], "set_origin_from_affine() (nibabel.spm99analyze.spm99analyzeheader method)": [[119, "nibabel.spm99analyze.Spm99AnalyzeHeader.set_origin_from_affine"]], "set_slope_inter() (nibabel.spm99analyze.spmanalyzeheader method)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader.set_slope_inter"]], "template_dtype (nibabel.spm99analyze.spmanalyzeheader attribute)": [[119, "nibabel.spm99analyze.SpmAnalyzeHeader.template_dtype"]], "to_file_map() (nibabel.spm99analyze.spm99analyzeimage method)": [[119, "nibabel.spm99analyze.Spm99AnalyzeImage.to_file_map"]], "arraysequence (class in nibabel.streamlines.array_sequence)": [[120, "nibabel.streamlines.array_sequence.ArraySequence"]], "dimensions (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.DIMENSIONS"]], "dataerror (class in nibabel.streamlines.tractogram_file)": [[120, "nibabel.streamlines.tractogram_file.DataError"]], "datawarning (class in nibabel.streamlines.tractogram_file)": [[120, "nibabel.streamlines.tractogram_file.DataWarning"]], "endianness (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.ENDIANNESS"]], "eof_delimiter (nibabel.streamlines.tck.tckfile attribute)": [[120, "nibabel.streamlines.tck.TckFile.EOF_DELIMITER"]], "extensionwarning (class in nibabel.streamlines.tractogram_file)": [[120, "nibabel.streamlines.tractogram_file.ExtensionWarning"]], "fiber_delimiter (nibabel.streamlines.tck.tckfile attribute)": [[120, "nibabel.streamlines.tck.TckFile.FIBER_DELIMITER"]], "field (class in nibabel.streamlines.header)": [[120, "nibabel.streamlines.header.Field"]], "header_size (nibabel.streamlines.trk.trkfile attribute)": [[120, "nibabel.streamlines.trk.TrkFile.HEADER_SIZE"]], "headererror (class in nibabel.streamlines.tractogram_file)": [[120, "nibabel.streamlines.tractogram_file.HeaderError"]], "headerwarning (class in nibabel.streamlines.tractogram_file)": [[120, "nibabel.streamlines.tractogram_file.HeaderWarning"]], "lazydict (class in nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.LazyDict"]], "lazytractogram (class in nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.LazyTractogram"]], "magic_number (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.MAGIC_NUMBER"]], "magic_number (nibabel.streamlines.tck.tckfile attribute)": [[120, "nibabel.streamlines.tck.TckFile.MAGIC_NUMBER"]], "magic_number (nibabel.streamlines.trk.trkfile attribute)": [[120, "nibabel.streamlines.trk.TrkFile.MAGIC_NUMBER"]], "method (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.METHOD"]], "nb_points (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.NB_POINTS"]], "nb_properties_per_streamline (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.NB_PROPERTIES_PER_STREAMLINE"]], "nb_scalars_per_point (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.NB_SCALARS_PER_POINT"]], "nb_streamlines (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.NB_STREAMLINES"]], "origin (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.ORIGIN"]], "perarraydict (class in nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.PerArrayDict"]], "perarraysequencedict (class in nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.PerArraySequenceDict"]], "step_size (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.STEP_SIZE"]], "supports_data_per_point (nibabel.streamlines.tck.tckfile attribute)": [[120, "nibabel.streamlines.tck.TckFile.SUPPORTS_DATA_PER_POINT"]], "supports_data_per_point (nibabel.streamlines.trk.trkfile attribute)": [[120, "nibabel.streamlines.trk.TrkFile.SUPPORTS_DATA_PER_POINT"]], "supports_data_per_streamline (nibabel.streamlines.tck.tckfile attribute)": [[120, "nibabel.streamlines.tck.TckFile.SUPPORTS_DATA_PER_STREAMLINE"]], "supports_data_per_streamline (nibabel.streamlines.trk.trkfile attribute)": [[120, "nibabel.streamlines.trk.TrkFile.SUPPORTS_DATA_PER_STREAMLINE"]], "sliceabledatadict (class in nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.SliceableDataDict"]], "tckfile (class in nibabel.streamlines.tck)": [[120, "nibabel.streamlines.tck.TckFile"]], "tractogram (class in nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.Tractogram"]], "tractogramfile (class in nibabel.streamlines.tractogram_file)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile"]], "tractogramitem (class in nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.TractogramItem"]], "trkfile (class in nibabel.streamlines.trk)": [[120, "nibabel.streamlines.trk.TrkFile"]], "voxel_order (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.VOXEL_ORDER"]], "voxel_sizes (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.VOXEL_SIZES"]], "voxel_to_rasmm (nibabel.streamlines.header.field attribute)": [[120, "nibabel.streamlines.header.Field.VOXEL_TO_RASMM"]], "__init__() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.__init__"]], "__init__() (nibabel.streamlines.header.field method)": [[120, "nibabel.streamlines.header.Field.__init__"]], "__init__() (nibabel.streamlines.tck.tckfile method)": [[120, "nibabel.streamlines.tck.TckFile.__init__"]], "__init__() (nibabel.streamlines.tractogram.lazydict method)": [[120, "nibabel.streamlines.tractogram.LazyDict.__init__"]], "__init__() (nibabel.streamlines.tractogram.lazytractogram method)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.__init__"]], "__init__() (nibabel.streamlines.tractogram.perarraydict method)": [[120, "nibabel.streamlines.tractogram.PerArrayDict.__init__"]], "__init__() (nibabel.streamlines.tractogram.perarraysequencedict method)": [[120, "nibabel.streamlines.tractogram.PerArraySequenceDict.__init__"]], "__init__() (nibabel.streamlines.tractogram.sliceabledatadict method)": [[120, "nibabel.streamlines.tractogram.SliceableDataDict.__init__"]], "__init__() (nibabel.streamlines.tractogram.tractogram method)": [[120, "nibabel.streamlines.tractogram.Tractogram.__init__"]], "__init__() (nibabel.streamlines.tractogram.tractogramitem method)": [[120, "nibabel.streamlines.tractogram.TractogramItem.__init__"]], "__init__() (nibabel.streamlines.tractogram_file.dataerror method)": [[120, "nibabel.streamlines.tractogram_file.DataError.__init__"]], "__init__() (nibabel.streamlines.tractogram_file.datawarning method)": [[120, "nibabel.streamlines.tractogram_file.DataWarning.__init__"]], "__init__() (nibabel.streamlines.tractogram_file.extensionwarning method)": [[120, "nibabel.streamlines.tractogram_file.ExtensionWarning.__init__"]], "__init__() (nibabel.streamlines.tractogram_file.headererror method)": [[120, "nibabel.streamlines.tractogram_file.HeaderError.__init__"]], "__init__() (nibabel.streamlines.tractogram_file.headerwarning method)": [[120, "nibabel.streamlines.tractogram_file.HeaderWarning.__init__"]], "__init__() (nibabel.streamlines.tractogram_file.tractogramfile method)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.__init__"]], "__init__() (nibabel.streamlines.tractogram_file.abstractclassmethod method)": [[120, "nibabel.streamlines.tractogram_file.abstractclassmethod.__init__"]], "__init__() (nibabel.streamlines.trk.trkfile method)": [[120, "nibabel.streamlines.trk.TrkFile.__init__"]], "abstractclassmethod (class in nibabel.streamlines.tractogram_file)": [[120, "nibabel.streamlines.tractogram_file.abstractclassmethod"]], "affine (nibabel.streamlines.tractogram_file.tractogramfile property)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.affine"]], "affine_to_rasmm (nibabel.streamlines.tractogram.tractogram property)": [[120, "nibabel.streamlines.tractogram.Tractogram.affine_to_rasmm"]], "append() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.append"]], "apply_affine() (nibabel.streamlines.tractogram.lazytractogram method)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.apply_affine"]], "apply_affine() (nibabel.streamlines.tractogram.tractogram method)": [[120, "nibabel.streamlines.tractogram.Tractogram.apply_affine"]], "common_shape (nibabel.streamlines.array_sequence.arraysequence property)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.common_shape"]], "concatenate() (in module nibabel.streamlines.array_sequence)": [[120, "nibabel.streamlines.array_sequence.concatenate"]], "copy() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.copy"]], "copy() (nibabel.streamlines.tractogram.lazytractogram method)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.copy"]], "copy() (nibabel.streamlines.tractogram.tractogram method)": [[120, "nibabel.streamlines.tractogram.Tractogram.copy"]], "create_arraysequences_from_generator() (in module nibabel.streamlines.array_sequence)": [[120, "nibabel.streamlines.array_sequence.create_arraysequences_from_generator"]], "create_empty_header() (nibabel.streamlines.tck.tckfile class method)": [[120, "nibabel.streamlines.tck.TckFile.create_empty_header"]], "create_empty_header() (nibabel.streamlines.tractogram_file.tractogramfile class method)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.create_empty_header"]], "create_empty_header() (nibabel.streamlines.trk.trkfile class method)": [[120, "nibabel.streamlines.trk.TrkFile.create_empty_header"]], "data (nibabel.streamlines.tractogram.lazytractogram property)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.data"]], "data_per_point (nibabel.streamlines.tractogram.lazytractogram property)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.data_per_point"]], "data_per_point (nibabel.streamlines.tractogram.tractogram property)": [[120, "nibabel.streamlines.tractogram.Tractogram.data_per_point"]], "data_per_streamline (nibabel.streamlines.tractogram.lazytractogram property)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.data_per_streamline"]], "data_per_streamline (nibabel.streamlines.tractogram.tractogram property)": [[120, "nibabel.streamlines.tractogram.Tractogram.data_per_streamline"]], "decode_value_from_name() (in module nibabel.streamlines.trk)": [[120, "nibabel.streamlines.trk.decode_value_from_name"]], "detect_format() (in module nibabel.streamlines)": [[120, "nibabel.streamlines.detect_format"]], "encode_value_in_name() (in module nibabel.streamlines.trk)": [[120, "nibabel.streamlines.trk.encode_value_in_name"]], "extend() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.extend"]], "extend() (nibabel.streamlines.tractogram.lazytractogram method)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.extend"]], "extend() (nibabel.streamlines.tractogram.perarraydict method)": [[120, "nibabel.streamlines.tractogram.PerArrayDict.extend"]], "extend() (nibabel.streamlines.tractogram.tractogram method)": [[120, "nibabel.streamlines.tractogram.Tractogram.extend"]], "finalize_append() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.finalize_append"]], "from_data_func() (nibabel.streamlines.tractogram.lazytractogram class method)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.from_data_func"]], "from_tractogram() (nibabel.streamlines.tractogram.lazytractogram class method)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.from_tractogram"]], "get_affine_from_reference() (in module nibabel.streamlines.utils)": [[120, "nibabel.streamlines.utils.get_affine_from_reference"]], "get_affine_rasmm_to_trackvis() (in module nibabel.streamlines.trk)": [[120, "nibabel.streamlines.trk.get_affine_rasmm_to_trackvis"]], "get_affine_trackvis_to_rasmm() (in module nibabel.streamlines.trk)": [[120, "nibabel.streamlines.trk.get_affine_trackvis_to_rasmm"]], "get_data() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.get_data"]], "header (nibabel.streamlines.tractogram_file.tractogramfile property)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.header"]], "is_array_sequence (nibabel.streamlines.array_sequence.arraysequence property)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.is_array_sequence"]], "is_array_sequence() (in module nibabel.streamlines.array_sequence)": [[120, "nibabel.streamlines.array_sequence.is_array_sequence"]], "is_correct_format() (nibabel.streamlines.tck.tckfile class method)": [[120, "nibabel.streamlines.tck.TckFile.is_correct_format"]], "is_correct_format() (nibabel.streamlines.tractogram_file.tractogramfile class method)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.is_correct_format"]], "is_correct_format() (nibabel.streamlines.trk.trkfile class method)": [[120, "nibabel.streamlines.trk.TrkFile.is_correct_format"]], "is_data_dict() (in module nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.is_data_dict"]], "is_lazy_dict() (in module nibabel.streamlines.tractogram)": [[120, "nibabel.streamlines.tractogram.is_lazy_dict"]], "is_ndarray_of_int_or_bool() (in module nibabel.streamlines.array_sequence)": [[120, "nibabel.streamlines.array_sequence.is_ndarray_of_int_or_bool"]], "is_sliced_view (nibabel.streamlines.array_sequence.arraysequence property)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.is_sliced_view"]], "is_supported() (in module nibabel.streamlines)": [[120, "nibabel.streamlines.is_supported"]], "load() (in module nibabel.streamlines)": [[120, "nibabel.streamlines.load"]], "load() (nibabel.streamlines.array_sequence.arraysequence class method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.load"]], "load() (nibabel.streamlines.tck.tckfile class method)": [[120, "nibabel.streamlines.tck.TckFile.load"]], "load() (nibabel.streamlines.tractogram_file.tractogramfile class method)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.load"]], "load() (nibabel.streamlines.trk.trkfile class method)": [[120, "nibabel.streamlines.trk.TrkFile.load"]], "nibabel.streamlines": [[120, "module-nibabel.streamlines"]], "nibabel.streamlines.array_sequence": [[120, "module-nibabel.streamlines.array_sequence"]], "nibabel.streamlines.header": [[120, "module-nibabel.streamlines.header"]], "nibabel.streamlines.tck": [[120, "module-nibabel.streamlines.tck"]], "nibabel.streamlines.tractogram": [[120, "module-nibabel.streamlines.tractogram"]], "nibabel.streamlines.tractogram_file": [[120, "module-nibabel.streamlines.tractogram_file"]], "nibabel.streamlines.trk": [[120, "module-nibabel.streamlines.trk"]], "nibabel.streamlines.utils": [[120, "module-nibabel.streamlines.utils"]], "peek_next() (in module nibabel.streamlines.utils)": [[120, "nibabel.streamlines.utils.peek_next"]], "save() (in module nibabel.streamlines)": [[120, "nibabel.streamlines.save"]], "save() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.save"]], "save() (nibabel.streamlines.tck.tckfile method)": [[120, "nibabel.streamlines.tck.TckFile.save"]], "save() (nibabel.streamlines.tractogram_file.tractogramfile method)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.save"]], "save() (nibabel.streamlines.trk.trkfile method)": [[120, "nibabel.streamlines.trk.TrkFile.save"]], "shrink_data() (nibabel.streamlines.array_sequence.arraysequence method)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.shrink_data"]], "streamlines (nibabel.streamlines.tractogram.lazytractogram property)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.streamlines"]], "streamlines (nibabel.streamlines.tractogram.tractogram property)": [[120, "nibabel.streamlines.tractogram.Tractogram.streamlines"]], "streamlines (nibabel.streamlines.tractogram_file.tractogramfile property)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.streamlines"]], "to_world() (nibabel.streamlines.tractogram.lazytractogram method)": [[120, "nibabel.streamlines.tractogram.LazyTractogram.to_world"]], "to_world() (nibabel.streamlines.tractogram.tractogram method)": [[120, "nibabel.streamlines.tractogram.Tractogram.to_world"]], "total_nb_rows (nibabel.streamlines.array_sequence.arraysequence property)": [[120, "nibabel.streamlines.array_sequence.ArraySequence.total_nb_rows"]], "tractogram (nibabel.streamlines.tractogram_file.tractogramfile property)": [[120, "nibabel.streamlines.tractogram_file.TractogramFile.tractogram"]], "ingivendirectory() (in module nibabel.tmpdirs)": [[121, "nibabel.tmpdirs.InGivenDirectory"]], "intemporarydirectory() (in module nibabel.tmpdirs)": [[121, "nibabel.tmpdirs.InTemporaryDirectory"]], "temporarydirectory (class in nibabel.tmpdirs)": [[121, "nibabel.tmpdirs.TemporaryDirectory"]], "__init__() (nibabel.tmpdirs.temporarydirectory method)": [[121, "nibabel.tmpdirs.TemporaryDirectory.__init__"]], "nibabel.tmpdirs": [[121, "module-nibabel.tmpdirs"]], "tripwire (class in nibabel.tripwire)": [[122, "nibabel.tripwire.TripWire"]], "tripwireerror (class in nibabel.tripwire)": [[122, "nibabel.tripwire.TripWireError"]], "__init__() (nibabel.tripwire.tripwire method)": [[122, "nibabel.tripwire.TripWire.__init__"]], "__init__() (nibabel.tripwire.tripwireerror method)": [[122, "nibabel.tripwire.TripWireError.__init__"]], "is_tripwire() (in module nibabel.tripwire)": [[122, "nibabel.tripwire.is_tripwire"]], "nibabel.tripwire": [[122, "module-nibabel.tripwire"]], "orthoslicer3d (class in nibabel.viewers)": [[123, "nibabel.viewers.OrthoSlicer3D"]], "__init__() (nibabel.viewers.orthoslicer3d method)": [[123, "nibabel.viewers.OrthoSlicer3D.__init__"]], "clim (nibabel.viewers.orthoslicer3d property)": [[123, "nibabel.viewers.OrthoSlicer3D.clim"]], "close() (nibabel.viewers.orthoslicer3d method)": [[123, "nibabel.viewers.OrthoSlicer3D.close"]], "cmap (nibabel.viewers.orthoslicer3d property)": [[123, "nibabel.viewers.OrthoSlicer3D.cmap"]], "draw() (nibabel.viewers.orthoslicer3d method)": [[123, "nibabel.viewers.OrthoSlicer3D.draw"]], "figs (nibabel.viewers.orthoslicer3d property)": [[123, "nibabel.viewers.OrthoSlicer3D.figs"]], "link_to() (nibabel.viewers.orthoslicer3d method)": [[123, "nibabel.viewers.OrthoSlicer3D.link_to"]], "n_volumes (nibabel.viewers.orthoslicer3d property)": [[123, "nibabel.viewers.OrthoSlicer3D.n_volumes"]], "nibabel.viewers": [[123, "module-nibabel.viewers"]], "position (nibabel.viewers.orthoslicer3d property)": [[123, "nibabel.viewers.OrthoSlicer3D.position"]], "set_position() (nibabel.viewers.orthoslicer3d method)": [[123, "nibabel.viewers.OrthoSlicer3D.set_position"]], "set_volume_idx() (nibabel.viewers.orthoslicer3d method)": [[123, "nibabel.viewers.OrthoSlicer3D.set_volume_idx"]], "show() (nibabel.viewers.orthoslicer3d method)": [[123, "nibabel.viewers.OrthoSlicer3D.show"]], "dtypemapper (class in nibabel.volumeutils)": [[124, "nibabel.volumeutils.DtypeMapper"]], "recoder (class in nibabel.volumeutils)": [[124, "nibabel.volumeutils.Recoder"]], "__init__() (nibabel.volumeutils.dtypemapper method)": [[124, "nibabel.volumeutils.DtypeMapper.__init__"]], "__init__() (nibabel.volumeutils.recoder method)": [[124, "nibabel.volumeutils.Recoder.__init__"]], "add_codes() (nibabel.volumeutils.recoder method)": [[124, "nibabel.volumeutils.Recoder.add_codes"]], "apply_read_scaling() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.apply_read_scaling"]], "array_from_file() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.array_from_file"]], "array_to_file() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.array_to_file"]], "best_write_scale_ftype() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.best_write_scale_ftype"]], "better_float_of() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.better_float_of"]], "finite_range() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.finite_range"]], "fname_ext_ul_case() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.fname_ext_ul_case"]], "int_scinter_ftype() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.int_scinter_ftype"]], "keys() (nibabel.volumeutils.dtypemapper method)": [[124, "nibabel.volumeutils.DtypeMapper.keys"]], "keys() (nibabel.volumeutils.recoder method)": [[124, "nibabel.volumeutils.Recoder.keys"]], "make_dt_codes() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.make_dt_codes"]], "nibabel.volumeutils": [[124, "module-nibabel.volumeutils"]], "pretty_mapping() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.pretty_mapping"]], "rec2dict() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.rec2dict"]], "seek_tell() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.seek_tell"]], "shape_zoom_affine() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.shape_zoom_affine"]], "value_set() (nibabel.volumeutils.recoder method)": [[124, "nibabel.volumeutils.Recoder.value_set"]], "values() (nibabel.volumeutils.dtypemapper method)": [[124, "nibabel.volumeutils.DtypeMapper.values"]], "working_type() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.working_type"]], "write_zeros() (in module nibabel.volumeutils)": [[124, "nibabel.volumeutils.write_zeros"]], "labeledwrapstruct (class in nibabel.wrapstruct)": [[125, "nibabel.wrapstruct.LabeledWrapStruct"]], "wrapstruct (class in nibabel.wrapstruct)": [[125, "nibabel.wrapstruct.WrapStruct"]], "wrapstructerror (class in nibabel.wrapstruct)": [[125, "nibabel.wrapstruct.WrapStructError"]], "__init__() (nibabel.wrapstruct.labeledwrapstruct method)": [[125, "nibabel.wrapstruct.LabeledWrapStruct.__init__"]], "__init__() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.__init__"]], "__init__() (nibabel.wrapstruct.wrapstructerror method)": [[125, "nibabel.wrapstruct.WrapStructError.__init__"]], "as_byteswapped() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.as_byteswapped"]], "binaryblock (nibabel.wrapstruct.wrapstruct property)": [[125, "nibabel.wrapstruct.WrapStruct.binaryblock"]], "check_fix() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.check_fix"]], "copy() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.copy"]], "default_structarr() (nibabel.wrapstruct.wrapstruct class method)": [[125, "nibabel.wrapstruct.WrapStruct.default_structarr"]], "diagnose_binaryblock() (nibabel.wrapstruct.wrapstruct class method)": [[125, "nibabel.wrapstruct.WrapStruct.diagnose_binaryblock"]], "endianness (nibabel.wrapstruct.wrapstruct property)": [[125, "nibabel.wrapstruct.WrapStruct.endianness"]], "from_fileobj() (nibabel.wrapstruct.wrapstruct class method)": [[125, "nibabel.wrapstruct.WrapStruct.from_fileobj"]], "get() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.get"]], "get_value_label() (nibabel.wrapstruct.labeledwrapstruct method)": [[125, "nibabel.wrapstruct.LabeledWrapStruct.get_value_label"]], "guessed_endian() (nibabel.wrapstruct.wrapstruct class method)": [[125, "nibabel.wrapstruct.WrapStruct.guessed_endian"]], "items() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.items"]], "keys() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.keys"]], "nibabel.wrapstruct": [[125, "module-nibabel.wrapstruct"]], "structarr (nibabel.wrapstruct.wrapstruct property)": [[125, "nibabel.wrapstruct.WrapStruct.structarr"]], "template_dtype (nibabel.wrapstruct.wrapstruct attribute)": [[125, "nibabel.wrapstruct.WrapStruct.template_dtype"]], "values() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.values"]], "write_to() (nibabel.wrapstruct.wrapstruct method)": [[125, "nibabel.wrapstruct.WrapStruct.write_to"]], "characterdatahandler() (nibabel.xmlutils.xmlparser method)": [[126, "nibabel.xmlutils.XmlParser.CharacterDataHandler"]], "endelementhandler() (nibabel.xmlutils.xmlparser method)": [[126, "nibabel.xmlutils.XmlParser.EndElementHandler"]], "handler_names (nibabel.xmlutils.xmlparser attribute)": [[126, "nibabel.xmlutils.XmlParser.HANDLER_NAMES"]], "startelementhandler() (nibabel.xmlutils.xmlparser method)": [[126, "nibabel.xmlutils.XmlParser.StartElementHandler"]], "xmlbasedheader (class in nibabel.xmlutils)": [[126, "nibabel.xmlutils.XmlBasedHeader"]], "xmlparser (class in nibabel.xmlutils)": [[126, "nibabel.xmlutils.XmlParser"]], "xmlserializable (class in nibabel.xmlutils)": [[126, "nibabel.xmlutils.XmlSerializable"]], "__init__() (nibabel.xmlutils.xmlbasedheader method)": [[126, "nibabel.xmlutils.XmlBasedHeader.__init__"]], "__init__() (nibabel.xmlutils.xmlparser method)": [[126, "nibabel.xmlutils.XmlParser.__init__"]], "__init__() (nibabel.xmlutils.xmlserializable method)": [[126, "nibabel.xmlutils.XmlSerializable.__init__"]], "nibabel.xmlutils": [[126, "module-nibabel.xmlutils"]], "parse() (nibabel.xmlutils.xmlparser method)": [[126, "nibabel.xmlutils.XmlParser.parse"]], "to_xml() (nibabel.xmlutils.xmlserializable method)": [[126, "nibabel.xmlutils.XmlSerializable.to_xml"]]}})